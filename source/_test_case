Class
#subtype!
true! !
#categories!
Dependencies!
Accessing!
Running!
Private!
Printing! !
logFailure:!
30985403!
Running!
0:! !
#group!
SUnit! !
run:!
30987134!
Running!
0:! !
tearDown!
30989830!
Running!
0! !
isLogging!
31775068!
Running!
0! !
#extensionsAreSubtypes!
true! !
shouldnt:raise:!
30989181!
Accessing!
0::! !
shouldnt:!
30988855!
Accessing!
0:! !
performTest!
30985953!
Private!
1! !
assert:description:resumable:!
30983112!
Accessing!
0:::! !
runCaseAsFailure:!
30987439!
Running!
0:! !
debugAsFailure!
30983807!
Running!
0! !
signalFailure:!
30989669!
Accessing!
0:! !
should:raise:!
30988378!
Accessing!
0::! !
#branded!
true! !
selector!
30987677!
Accessing!
0! !
addDependentToHierarchy:!
33933230!
Dependencies!
0:! !
#comment!
A TestCase is a Command representing the future running of a test case. Create one with the class method #selector: aSymbol, passing the name of the method to be run when the test case runs.

When you discover a new fixture, subclass TestCase, declare instance variables for the objects in the fixture, override #setUp to initialize the variables, and possibly override# tearDown to deallocate any external resources allocated in #setUp.

When you are writing a test case method, send #assert: aBoolean when you want to check for an expected value. For example, you might say "self assert: socket isOpen" to test whether or not a socket is open at a point in a test.! !
setUp!
30987947!
Running!
0! !
echo!
33080550!
Printing!
0! !
#superclassTypeString!
NotifyingObject! !
setTestSelector:!
30987799!
Private!
1:! !
assert:!
30982697!
Accessing!
0:! !
deny:description:!
30984339!
Accessing!
0::! !
shouldnt:raise:description:!
30989403!
Accessing!
0:::! !
deny:description:resumable:!
30984523!
Accessing!
0:::! !
#instanceVariableString!
testSelector! !
should:!
30988052!
Accessing!
0:! !
printOn:!
30986108!
Printing!
0:! !
resources!
30986532!
Accessing!
0! !
shouldnt:description:!
30988997!
Accessing!
0::! !
run!
30986962!
Running!
0! !
executeShould:inScopeOf:!
30984771!
Private!
1::! !
assert:description:!
30982876!
Accessing!
0::! !
deny:!
30984195!
Accessing!
0:! !
failureLog!
30985015!
Running!
0! !
#abstract!
false! !
should:raise:description:!
30988594!
Accessing!
0:::! !
runCase!
30987268!
Running!
0! !
removeDependentFromHierarchy:!
33933023!
Dependencies!
0:! !
openDebuggerOnFailingTestMethod!
30985613!
Running!
0! !
debug!
30983504!
Running!
0! !
should:description:!
30988194!
Accessing!
0::! !
