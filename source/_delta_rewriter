Class
predictSpecialPrimitiveNode:!
1061687!
Unclassified!
0:! !
#categories!
Unclassified! !
primitiveCallNode:!
1061900!
Unclassified!
0:! !
primitiveNode:!
1062097!
Unclassified!
0:! !
parameters:matchArguments:!
1060919!
Unclassified!
0::! !
#group!
ast! !
returnInstVarNode:!
1063679!
Unclassified!
0:! !
cascadedSendNode:!
1051858!
Unclassified!
0:! !
codeBodyNode:!
1052483!
Unclassified!
0CodeBody:! !
returnStatNode:!
1063872!
Unclassified!
0:! !
dllCallNode:!
1053075!
Unclassified!
0:! !
assignmentNode:!
1050940!
Unclassified!
0:! !
ifNode:!
1054848!
Unclassified!
0:! !
loopNode:!
1056405!
Unclassified!
0:! !
at:error:!
1051379!
Unclassified!
0::! !
isRemovableBlock:withArgs:!
1055208!
Unclassified!
0::! !
#extensionsAreSubtypes!
true! !
guaranteedNode:!
1053874!
Unclassified!
0:! !
literalNode:!
1056219!
Unclassified!
0:! !
#branded!
true! !
rewriteSpecialBodies:!
1066947!
Unclassified!
0:! !
globalVarNode:!
1053686!
Unclassified!
0:! !
if:with:nofArgs:do:!
1054509!
Unclassified!
0::::! !
superSendNode:!
1069222!
Unclassified!
0:! !
genericApplicationExpressionNode:!
1053439!
Unclassified!
0:! !
#superclassTypeString!
DeltaASTTool! !
inlinedBlockNode:!
1055018!
Unclassified!
0:! !
#revision!
$Revision: 1.3 $! !
selfSendNode:!
1069035!
Unclassified!
0:! !
#instanceVariableString!
scope result ! !
refNode:!
1063410!
Unclassified!
0:! !
normalSendNode:!
1057251!
Unclassified!
0:! !
rewriteAsOop:!
1066522!
Unclassified!
0:! !
methodNode:!
1056930!
Unclassified!
0:! !
rewrite:!
1064117!
Unclassified!
0:! !
komment!
1055657!
Unclassified!
0! !
blockNode:!
1051610!
Unclassified!
0:! !
rewriteAsFloatValue:!
1065874!
Unclassified!
0:! !
#subtype!
true! !
messageNode:!
1056583!
Unclassified!
0:! !
#comment!
The rewriter recursively traverses the AST and optimizes
    particular nodes by relacing them with other (more optimal)
    nodes.

    Instance variables:

    result      the result after rewriting the current node. If the node
                      has not changed, result simply holds the current node.

    scope      the current scope. Scope is adjusted whenever a
                      new codeBody is entered.
    
 (c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.! !
#abstract!
false! !
rewrite:asFloatOperationOn:!
1064492!
Unclassified!
0::! !
predictPrimitiveNode:!
1061488!
Unclassified!
0:! !
andOrNode:!
1050760!
Unclassified!
0:! !
if:with:and:do:!
1054083!
Unclassified!
0::::! !
