Class
#categories!
comparison!
operations!
converting!
accessing!
restricted-double dispatching!
bit operations!
truncation and rounding!
iteration!
printing!
private!
constants!
benchmarking!
restricted-to large integers!
mathematical functions!
proxy operations!
restricted-to integers!
private-proxy double dispatching! !
factorial!
35495985!
mathematical functions!
0Int! !
printHexOn:!
35500094!
printing!
0CharOutputStream:! !
identityHash!
35489589!
accessing!
0Int! !
hexDigitAt:!
35489278!
accessing!
0Int:Character! !
negated!
35489717!
accessing!
0Int! !
zero!
35494159!
constants!
0Integer! !
#extensionsAreSubtypes!
true! !
remFromInteger:!
35504676!
restricted-double dispatching!
0Integer:Integer! !
multiplyFromInteger:!
35504247!
restricted-double dispatching!
0Integer:Integer! !
bitXor:!
35492028!
bit operations!
4X:Self|X! !
hasBitsSet:!
35501852!
proxy operations!
0ExternalData:Boolean! !
addFromSmallInteger:!
35502382!
restricted-double dispatching!
0SmallInteger:Integer! !
*!
35496436!
operations!
4Number:X! !
+!
35496715!
operations!
4Number:X! !
-!
35496984!
operations!
4Number:X! !
#branded!
true! !
/!
35497263!
operations!
4Number:X! !
externalBitAnd:!
35501170!
proxy operations!
0ExternalData:ExternalData! !
multiplyFromSmallInteger:!
35504438!
restricted-double dispatching!
0SmallInteger:Integer! !
to:do:!
35495264!
iteration!
0Int:[Int]:Object! !
hash!
35489158!
accessing!
0Int! !
printBareHexDigits:on:!
35499589!
printing!
0Int:CharOutputStream:! !
bitAt:!
35491299!
bit operations!
0Int:Int! !
numerator!
35489852!
accessing!
0Integer! !
#revision!
$Revision: 1.11 $! !
asLargeInteger!
35505734!
restricted-to large integers!
0LargeInteger! !
//!
35497538!
operations!
0Number:Int! !
rem:!
35499228!
operations!
4Number:X! !
rawBitShift:!
35492530!
bit operations!
0Int:Int! !
bitAnd:!
35491109!
bit operations!
4X:Self|X! !
to:by:do:!
35494893!
iteration!
0Int:Int:[Int]:Object! !
ceiling!
35498424!
operations!
0Int! !
unit!
35494038!
constants!
0Integer! !
#comment!
%notes:
    - This class implements generalized algorithms that handle both large and small integers.
    -  >,>=,<= are not implemented here for generalized integers; the Magnitude versions
          are fine.  SmallInteger implements its own for efficiency.
    * When the generalized algorithms are written, they should be designed to coerce either or
          both of receiver and argument to largeinteger format if they are smallintegers, because
         the overflow/underflow code in SmallInteger depends on that.

Tags: %BlueBook %User

(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.
! !
gcd:!
35498670!
operations!
0Integer:Integer! !
printOn:radix:!
35500443!
printing!
0CharOutputStream:Int:! !
moduloFromSmallInteger:!
35504029!
restricted-double dispatching!
0SmallInteger:Integer! !
floor!
35498548!
operations!
0Int! !
@=!
35493389!
comparison!
0ExternalData:Boolean! !
asInteger!
35494582!
converting!
0Integer! !
asExternalProxy!
35494281!
converting!
0ExternalProxy! !
nfib!
35496227!
mathematical functions!
0Int! !
#group!
base! !
lessFromSmallInteger:!
35503564!
restricted-double dispatching!
0SmallInteger:Boolean! !
bitAndFromSmallInteger:!
35500785!
private-proxy double dispatching!
1SmallInteger:ExternalData! !
highBit!
35492218!
bit operations!
0SmallInt! !
bitAndFromInteger:!
35502610!
restricted-double dispatching!
0Integer:! !
bitOrFromInteger:!
35502784!
restricted-double dispatching!
0Integer:! !
=!
35493045!
comparison!
0Object:Boolean! !
addFromInteger:!
35502196!
restricted-double dispatching!
0Integer:Integer! !
subtractFromInteger:!
35504856!
restricted-double dispatching!
0Integer:Integer! !
allMask:!
35490771!
bit operations!
0Integer:Boolean! !
anyMask:!
35490941!
bit operations!
0Integer:Boolean! !
to:intervals:do:!
35495502!
iteration!
0Int:Int:[Int]:Object! !
sumTo:!
35490557!
benchmarking!
0Int:Int! !
externalBitOr:!
35501511!
proxy operations!
0ExternalData:ExternalData! !
equalFromInteger:!
35502957!
restricted-double dispatching!
0Integer:Boolean! !
bitOr:!
35491685!
bit operations!
4X:Self|X! !
abs!
35498239!
operations!
0Integer! !
truncated!
35499465!
operations!
0Int! !
bitShift:!
35491873!
bit operations!
0Int:Int! !
\\!
35497963!
operations!
4Number:X! !
bitInvert!
35491550!
bit operations!
0Int! !
denominator!
35489032!
accessing!
0Integer! !
#superclassTypeString!
RationalNumber! !
<!
35492893!
comparison!
0Number:Boolean! !
subtractFromSmallInteger:!
35505047!
restricted-double dispatching!
0SmallInteger:Integer! !
@~=!
35493765!
comparison!
0ExternalData:Boolean! !
printOn:!
35500280!
printing!
0CharOutputStream:! !
equalFromSmallInteger:!
35503145!
restricted-double dispatching!
0SmallInteger:Boolean! !
noMask:!
35492364!
bit operations!
0Integer:Boolean! !
lessFromInteger:!
35503377!
restricted-double dispatching!
0Integer:Boolean! !
timesRepeat:!
35494711!
iteration!
0[]:Object! !
recurse!
35490377!
benchmarking!
0! !
asFloat!
35494445!
converting!
0Float! !
moduloFromInteger:!
35503794!
restricted-double dispatching!
0Integer:Integer! !
#subtype!
true! !
printBareHexOn:!
35499832!
printing!
0CharOutputStream:! !
benchFib!
35489982!
benchmarking!
0! !
#abstract!
true! !
printNonNegativeOn:radix:!
35505278!
restricted-to integers!
0CharOutputStream:Int:! !
rounded!
35506228!
truncation and rounding!
0Int! !
bitOrFromSmallInteger:!
35500991!
private-proxy double dispatching!
1SmallInteger:Int! !
