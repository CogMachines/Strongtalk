Class
#categories!
unclassified! !
#group!
newspeak! !
aWhitespaceChar!
86205011!
unclassified!
0! !
not!
86207823!
unclassified!
0! !
combineErrors:and:at:!
86205510!
unclassified!
0:::! !
&!
86208523!
unclassified!
0:! !
tokenFromSymbol:!
86213087!
unclassified!
0:! !
comment!
86209421!
unclassified!
0! !
opt!
86209581!
unclassified!
0! !
star!
86211136!
unclassified!
0! !
starSeparatedOrTerminatedBy:!
86210032!
unclassified!
0:! !
parse:!
86210419!
unclassified!
0:! !
tokenFor:!
86210749!
unclassified!
0:! !
new!
86208060!
unclassified!
0! !
fail!
86211372!
unclassified!
0! !
tokenFromChar:!
86211845!
unclassified!
0:! !
plusSeparatedBy:!
86212297!
unclassified!
0:! !
starSeparatedBy:!
86212724!
unclassified!
0:! !
charBetween:and:!
86204416!
unclassified!
0::! !
CombinatorialParsing_CombinatorialParser_superInit_new!
86204797!
unclassified!
0! !
,!
86205356!
unclassified!
0:! !
#superclassTypeString!
NewspeakObject! !
plusSeparatedOrTerminatedBy:!
86209752!
unclassified!
0:! !
wrap:!
86205922!
unclassified!
0:! !
#revision!
$Revision: 0.0 $! !
parse:ifError:!
86206424!
unclassified!
0::! !
#classVariableString!
MixinMetadata_CombinatorialParsing_CombinatorialParser EnclosingObjects_CombinatorialParsing_CombinatorialParser! !
plus!
86207077!
unclassified!
0! !
parse:inContext:ifError:!
86207313!
unclassified!
0:::! !
wrapper:!
86207535!
unclassified!
0:! !
CombinatorialParsing_CombinatorialParser_1_init!
86208329!
unclassified!
0! !
empty!
86206194!
unclassified!
0! !
whitespace!
86209181!
unclassified!
0! !
#comment!
This class is intended to implement Parser
Combinators. A CombinatorialParser[T]
returns a value of type T after successful
parsing.

The class is abstract. It does not implement
 the parsing routine parse:ifError: .
 
If parsing fails, parse:ifError: should call the error handling block
passed to it.

Concrete subclasses should implement specific grammars.

Parsing is initiated by calling parse:ifError:. This routine takes a ReadStream[Object] as input.
If parsing fails, it is the caller''s responsibility to set the input stream back to its original position
(Q: is this a good idea?).
If an error occurs, the error block passed in is called.! !
eoi!
86211603!
unclassified!
0! !
|!
86212035!
unclassified!
0:! !
char:!
86208943!
unclassified!
0:! !
