
"September 28, 2010 -> 23:11:20"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #CombinatorialParsing as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #BlocklessCombinatorialParsing as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #Newspeak2Grammar as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #Newspeak2AST as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:20"!

Delta define: #Newspeak2Parsing as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #Newspeak2StrongtalkMirrors as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #Newspeak2StrongtalkCompilation as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #MirrorGroups as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:21"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

Delta define: #Alien as: (
(Class subclassOf: 'ByteArray' instanceVariables: '') classVariables: 'GCMallocedAliens LoadedLibraries') !


"September 28, 2010 -> 23:11:22"!

(Delta mirrorFor: #Alien)
comment: 
''!


"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'class initialization' !
initialize

	LoadedLibraries isNil ifTrue: 
		[LoadedLibraries := Dictionary new].
	GCMallocedAliens isNil ifTrue:
		[GCMallocedAliens := AlienWeakTable newForOwner: self]! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
atAddress: pointer <Integer> ^<X>

	^(self primitiveNew: 8)
		size: self dataSize negated;
		addressField: pointer;
		yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
atAddress: pointer <Integer> dataSize: dataSize <Integer> ^<X>

	^(self primitiveNew: 8)
		size: dataSize negated;
		addressField: pointer;
		yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
autoFreeAfter: action <[X, ^ Y]>
	"Evaluate the action, which must be a 1-argument block.
	 The argument passed to the action is a block the action
	 can use to register Aliens created inside the action.
	 Such aliens will be freed as soon as the action completes.
	 Return the value returned from the action. See usage
	 example at the bottom of the method. "
	
	| toFree |
	toFree := OrderedCollection new.
	^[action value: [:alien | toFree add: alien]]
		ensure: [toFree do: [:each | each free]]
		
"
	Alien autoFreeAfter:
		[:autoFree | | foo bar |
		foo := autoFree value: (Alien newCString: 'foo').
		bar := autoFree value: (Alien newCString: 'bar').
		...]
"! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
dataSize

	^self subclassResponsibility! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
ensureLoaded: libraryName

	^self loadedLibraries
		at: libraryName
		ifAbsentPut: [(Alien new: 4)
								unsignedLongAt: 1 put: (self primLoadLibrary: libraryName);
								yourself]! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
forLong: long

	((long > 16r7FFFFFFF) or: [long < -16r80000000])
		ifTrue: [self error: 'Out of range'].
	^(self new: 4)
		signedLongAt: 1 put: long;
		yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
forPointer: pointer <Integer> ^<X>

	^(self primitiveNew: 8)
		size: 0;
		addressField: pointer;
		yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
forULong: ulong

	((ulong > 16rFFFFFFFF) or: [ulong < 0])
		ifTrue: [self error: 'Out of range'].
	^(self new: 4)
		unsignedLongAt: 1 put: ulong;
		yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
new

	^self new: self dataSize! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
new: size <Integer> ^ <X>

	^(self primitiveNew: size + 4)
		size: size;
		initialize! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
newC

	^self newC: self dataSize! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
newC: size <Integer> ^ <X>

	^(self primitiveNew: 8)
		size: size negated;
		addressField: (self Ccalloc: size);
		initialize! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
newCString: string <String> ^ <Alien>

	^(Alien rawNewC: string size + 1)
		replaceFrom: 1
		to: string size
		with: string
		startingAt: 1;
		unsignedByteAt: string size + 1 put: 0;
		yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
newForCallbackArgs

	^(self new: 8)
		size: self dataSize negated;
		yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
newGC

	^self newGC: self dataSize! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
newGC: size <Integer> ^<X>

	| alien address |
	alien := self primitiveNew: 8.
	alien size: size negated.
	address := self Ccalloc: size.
	self gcMallocedAliens add: alien.
	^alien
		addressField: address;
		initialize
		! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
rawNewC: size <Integer> ^ <X>

	^(self primitiveNew: 8)
		size: size negated;
		addressField: (self Cmalloc: size);
		initialize! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
thunk: address <Integer> ^ <Alien>

	^(self forPointer: address)
			size: 4;
			yourself! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'libraries' !
lookup: symbolName <String> inLibrary: libraryName <String> ^ <Alien>

	^self forPointer: ((Alien ensureLoaded: libraryName)
										primFindSymbol: symbolName)! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'libraries' !
lookupOrNil: symbolName <String> inLibrary: libraryName <String> ^ <Alien>

	^[self lookup: symbolName inLibrary: libraryName]
			on: NotFoundError
			do: [:err| nil]! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'libraries' !
primLoadLibrary: libraryName

	^(Platform DLLLoad2: libraryName) asInteger! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'private - accessing' !
gcMallocedAliens ^<WeakSet>

	GCMallocedAliens isNil
		ifTrue: [GCMallocedAliens := WeakSet new.
					GCMallocedAliens addWeakDependent: (
						BlockDependent updateBlock: [:aspect :alien | alien free])].
	^GCMallocedAliens! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'private - accessing' !
loadedLibraries

	LoadedLibraries isNil ifTrue: 
		[LoadedLibraries := Dictionary new].
	^LoadedLibraries! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'private - memory allocation' !
Ccalloc: size <Integer> ^ <Integer>

	^{{self primitiveAlienCalloc: size
			ifFail: [:err| self error: 'Failed to calloc alien: ', err]}}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'private - memory allocation' !
Cmalloc: size <Integer> ^ <Integer>

	^{{self primitiveAlienMalloc: size
			ifFail: [:err| self error: 'Failed to malloc alien: ', err]}}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
address ^<Integer>

	^self size <= 0
		ifTrue: [self addressField]
		ifFalse: [self error: 'One cannot take the address of direct Alien instances; they may move']! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
boolAt: index <Integer> ^<Boolean>

	^(self at: 1) ~~ 0! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
boolAt: index <Integer> put: value <Boolean> ^<Boolean>

	self at: 1 put: (value ifTrue: [1] ifFalse: [0]).
	^value! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
dataSize ^<Integer>

	^self size abs! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
doubleAt: index <Integer> ^<Float>

	^{{self primitiveAlienDoubleAt: index
				ifFail: [:err| self error: 'Unable to get double ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
doubleAt: index <Integer> put: double <Float> ^<Float>

	^{{self primitiveAlienDoubleAt: index
				put: double
				ifFail: [:err| self error: 'Unable to set double ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
floatAt: index <Integer> ^<Double>

	^{{self primitiveAlienFloatAt: index
				ifFail: [:err| self error: 'Unable to get float ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
floatAt: index <Integer> put: double <Float> ^<Float>

	^{{self primitiveAlienFloatAt: index
				put: double
				ifFail: [:err| self error: 'Unable to set float ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
pointer

	self isPointer ifTrue: [self error:  'One cannot take the address of pointer Alien instances; they may move, and are already pointers'].
	^self class forPointer: self address! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
signedByteAt: index <Integer> ^<Integer>

	^{{self primitiveAlienSignedByteAt: index
				ifFail: [:err| self error: 'Unable to get signed byte ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
signedByteAt: index <Integer> put: byte <Integer> ^<Integer>

	^{{self primitiveAlienSignedByteAt: index
				put: byte
				ifFail: [:err| self error: 'Unable to set signed byte ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
signedLongAt: index <Integer> ^<Integer>

	^{{self primitiveAlienSignedLongAt: index
				ifFail: [:err| self error: 'Unable to get signed long ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
signedLongAt: index <Integer> put: long <Integer>^<Integer>

	^{{self primitiveAlienSignedLongAt: index
				put: long
				ifFail: [:err| self error: 'Unable to get signed long ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
signedShortAt: index <Integer> ^<Integer>

	^{{self primitiveAlienSignedShortAt: index
				ifFail: [:err| self error: 'Unable to get signed short ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
signedShortAt: index <Integer> put: short <Integer> ^<Integer>

	^{{self primitiveAlienSignedShortAt: index
				put: short
				ifFail: [:err| self error: 'Unable to set signed short ', err] }}! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
strcpy

	^self strcpyFrom: 1! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
strcpyFrom: startIndex

	|string length offset|
	length := self strlenStartingAt: startIndex.
	string := String new: length.
	offset := startIndex - 1.
	1 to: length do: [:i|
		string at: i put: (Character value: (self unsignedByteAt: i + offset))].
	^string! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
strcpyUTF8

	^self strcpyUTF8From: 1! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
strcpyUTF8From: startIndex

	^self unimplemented! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
strlen

	^self strlenStartingAt: 1! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
strlenStartingAt: startIndex

	self dataSize == 0
		ifTrue: [^self rawStrlenStartingAt: startIndex].
	startIndex to: self dataSize do: [:i| (self unsignedByteAt: i) == 0
																ifTrue: [^ i - startIndex]].
	^self dataSize - startIndex + 1! !

"September 28, 2010 -> 23:11:22"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
unsignedByteAt: index <Integer> ^<Integer>

	^{{self primitiveAlienUnsignedByteAt: index
				ifFail: [:err| self error: 'Unable to get unsigned byte ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
unsignedByteAt: index <Integer> put: byte <Integer|Character> ^<Integer>

	|c|
	c := byte isCharacter
				ifTrue: [byte asciiValue]
				ifFalse: [byte].
	^{{self primitiveAlienUnsignedByteAt: index
				put: c
				ifFail: [:err| self error: 'Unable to set unsigned byte ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
unsignedLongAt: index <Integer> ^<Integer>

	^{{self primitiveAlienUnsignedLongAt: index
				ifFail: [:err| self error: 'Unable to get unsigned long ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
unsignedLongAt: index <Integer> put: long <Integer>^<Integer>

	^{{self primitiveAlienUnsignedLongAt: index
				put: long
				ifFail: [:err| self error: 'Unable to set unsigned long ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
unsignedShortAt: index <Integer> ^<Integer>

	^{{self primitiveAlienUnsignedShortAt: index
				ifFail: [:err| self error: 'Unable to get unsigned short ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'accessing' !
unsignedShortAt: index <Integer> put: short <Integer>^<Integer>

	^{{self primitiveAlienUnsignedShortAt: index
				put: short
				ifFail: [:err| self error: 'Unable to set unsigned short ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
asAliens: array <Array> ^ <Array[Alien]>

	^array collect: [:el| el asAlien]! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien>

	{{self primitiveAlienCallResult: result ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject> with: arg1 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			with: arg1 asAlien
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject> with: arg1 <Alien|SmallInteger> with: arg2 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			with: arg1 asAlien
			with: arg2 asAlien
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			with: arg1 asAlien
			with: arg2 asAlien
			with: arg3 asAlien
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			with: arg1 asAlien
			with: arg2 asAlien
			with: arg3 asAlien
			with: arg4 asAlien
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			with: arg1 asAlien
			with: arg2 asAlien
			with: arg3 asAlien
			with: arg4 asAlien
			with: arg5 asAlien
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger>
with: arg6 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			with: arg1 asAlien
			with: arg2 asAlien
			with: arg3 asAlien
			with: arg4 asAlien
			with: arg5 asAlien
			with: arg6 asAlien
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger>
with: arg6 <Alien|SmallInteger>
with: arg7 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			with: arg1 asAlien
			with: arg2 asAlien
			with: arg3 asAlien
			with: arg4 asAlien
			with: arg5 asAlien
			with: arg6 asAlien
			with: arg7 asAlien
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger>
with: arg6 <Alien|SmallInteger>
with: arg7 <Alien|SmallInteger>
with: arg8 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			withArguments: (self asAliens: { arg1. arg2. arg3. arg4. arg5. arg6. arg7. arg8 })
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger>
with: arg6 <Alien|SmallInteger>
with: arg7 <Alien|SmallInteger>
with: arg8 <Alien|SmallInteger>
with: arg9 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			withArguments: (self asAliens: { arg1. arg2. arg3. arg4. arg5. arg6. arg7. arg8. arg9 })
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger>
with: arg6 <Alien|SmallInteger>
with: arg7 <Alien|SmallInteger>
with: arg8 <Alien|SmallInteger>
with: arg9 <Alien|SmallInteger>
with: arg10 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			withArguments: (self asAliens: { arg1. arg2. arg3. arg4. arg5. arg6. arg7. arg8. arg9. arg10 })
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger>
with: arg6 <Alien|SmallInteger>
with: arg7 <Alien|SmallInteger>
with: arg8 <Alien|SmallInteger>
with: arg9 <Alien|SmallInteger>
with: arg10 <Alien|SmallInteger>
with: arg11 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			withArguments: (self asAliens: { arg1. arg2. arg3. arg4. arg5. arg6. arg7. arg8. arg9. arg10. arg11 })
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
with: arg1 <Alien|SmallInteger>
with: arg2 <Alien|SmallInteger>
with: arg3 <Alien|SmallInteger>
with: arg4 <Alien|SmallInteger>
with: arg5 <Alien|SmallInteger>
with: arg6 <Alien|SmallInteger>
with: arg7 <Alien|SmallInteger>
with: arg8 <Alien|SmallInteger>
with: arg9 <Alien|SmallInteger>
with: arg10 <Alien|SmallInteger>
with: arg11 <Alien|SmallInteger>
with: arg12 <Alien|SmallInteger> ^ <Alien>

	{{self primitiveAlienCallResult: result
			withArguments: (self asAliens: { arg1. arg2. arg3. arg4. arg5. arg6. arg7. arg8. arg9. arg10. arg11. arg12 })
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'callouts' !
primFFICallResult: result <Alien|UndefinedObject>
withArguments: arguments <Array[Alien|SmallInteger]> ^ <Alien>

	{{self primitiveAlienCallResult: result
			withArguments: (self asAliens: arguments)
			ifFail: [:err| self error: err]}}.
	^result! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asAlien

	^self! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asExternalProxy ^<ExternalProxy>

	^ExternalProxy
		forHigh: (self unsignedShortAt: 3)
		low: (self unsignedShortAt: 1)! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asSignedByte

	^self signedByteAt: 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asSignedLong

	^self signedLongAt: 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asSignedShort

	^self signedShortAt: 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asUnsignedByte

	^self unsignedByteAt: 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asUnsignedLong

	^self unsignedLongAt: 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'converting' !
asUnsignedShort

	^self unsignedShortAt: 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'instance initialization' !
initialize
	"Subclasses may override to perform specific initialization"! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'memory management' !
free

	{{primitiveAlienFree: self addressField
		ifFail: [:err| self error: 'Could not free alien: ', err]}}.
	self addressField: 0! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'memory management' !
freeAfter: aBlock <[Alien]>

	^[aBlock value: self]
		ensure: [self free]! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
addressField ^<Integer>

	^{{ self primitiveAlienAddressIfFail: [:err| self error: 'failed to get address of alien ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
addressField: anInteger <Integer>

	^{{ self primitiveAlienAddress: anInteger
					ifFail: [:err| self error: 'failed to set address of alien ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
at: index <Integer> ^ <SmallInteger>

	^self unsignedByteAt: index! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
at: index <Integer> put: byte <SmallInteger> ^ <SmallInteger>

	^self unsignedByteAt: index put: byte! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
primFindSymbol: symbolName <String> ^ <Integer>

	|result library|
	result := ExternalProxy new.
	library := self asExternalProxy.
	{{primitiveDLLLookup: symbolName asSymbol
			in: library
			result: result
			ifFail: [:err | err == #NotFound
									ifTrue: [NotFoundError signal]
									ifFalse: [self error: err]]}}.
	^result asInteger	! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
rawStrlenStartingAt: startIndex

	|index|
	index := startIndex.
	[(self unsignedByteAt: index) == 0]
		whileFalse: [index := index + 1].
	^index - startIndex! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
signedFourByteLimit

	^self smallIntLimit * 4! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
size ^<Integer>

	^{{self primitiveAlienSizeIfFail: [:err| self error: 'failed to get alien size: ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
size: anInteger <Integer>

	{{self primitiveAlienSize: anInteger
				ifFail: [:err| self error: 'failed to set alien size: ', err] }}! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
smallIntLimit

	^SmallInteger maxVal + 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
strlenThroughPointerAt: index

	^(Alien forPointer: (self unsignedLongAt: index))
		rawStrlenStartingAt: 1! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'private - accessing' !
unsignedFourByteLimit

	^self smallIntLimit * 8! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Alien) methodsFor: 'testing' !
isPointer

	^self size == 0! !

"September 28, 2010 -> 23:11:23"!

Delta define: #Color as: (
(Class subclassOf: 'Object' instanceVariables: 'rgb')) !


"September 28, 2010 -> 23:11:23"!

(Delta mirrorFor: #Color)
comment: 
''!


"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) classSide methodsFor: 'accessing' !
black

	^self new setRgb: 0! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) classSide methodsFor: 'accessing' !
gray

	^self gray: 0.5! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) classSide methodsFor: 'accessing' !
gray: gray

	^self new setRed: gray green: gray blue: gray! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) classSide methodsFor: 'accessing' !
transparent

	^self gray: 1.0! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'initialize' !
asColor

	^self! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'initialize' !
asColorref

	^(self red * 255) rounded +
		((self green * 255) rounded bitShift: 8) +
		((self blue * 255) rounded bitShift: 16)! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'initialize' !
blue

	^(rgb bitAnd: 16r3FF) / 1023.0! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'initialize' !
green

	^((rgb bitShift: -10) bitAnd: 16r3FF) / 1023.0! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'initialize' !
red

	^(rgb bitShift: -20) / 1023.0! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'initialize' !
setRed: red green: green blue: blue

	rgb := ((red * 1023.0) rounded bitShift: 20)
		+ ((green * 1023.0) rounded bitShift: 10)
		+ (blue * 1023.0) rounded! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'initialize' !
setRgb: anRgb

	rgb := anRgb! !

"September 28, 2010 -> 23:11:23"!

! (Delta mirrorFor: #Color) methodsFor: 'testing' !
isTransparent

	^false! !

"September 28, 2010 -> 23:11:23"!

Delta define: #ColorForm as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:23"!

(Delta mirrorFor: #ColorForm)
comment: 
''!


"September 28, 2010 -> 23:11:23"!

Delta define: #CrLfFileStream as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:23"!

(Delta mirrorFor: #CrLfFileStream)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

Delta define: #DefiningClassMetadata as: (
(Class subclassOf: 'SystemMetadata' instanceVariables: 'enclosing nestedClasses')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #DefiningClassMetadata)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #DefiningClassMetadata) classSide methodsFor: 'instance creation' !
new ^ <Instance>
 	^super new initialize! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #DefiningClassMetadata) methodsFor: 'accessing' !
addNestedClass: c
	nestedClasses 
		at: c name asSymbol 
		put: (Mirror on: c)! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #DefiningClassMetadata) methodsFor: 'accessing' !
enclosingMixin: m 
	enclosing := m! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #DefiningClassMetadata) methodsFor: 'accessing' !
nestedMixins ^ <Map[Symbol, Class]>
	^nestedClasses! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #DefiningClassMetadata) methodsFor: 'initialization' !
initialize
	nestedClasses := IdentityDictionary[Symbol, Class] new! !

"September 28, 2010 -> 23:11:24"!

Delta define: #DosFileDirectory as: (
(Class subclassOf: 'FileDirectory' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #DosFileDirectory)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #FileDirectory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #FileDirectory)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #FileDirectory) classSide methodsFor: 'Newspeak-support' !
default

	^FilePath currentDirectory! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #FileDirectory) classSide methodsFor: 'Newspeak-support' !
default1

	^FilePath currentDirectory! !

"September 28, 2010 -> 23:11:24"!

Delta define: #FileStream as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #FileStream)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

Delta define: #GiveUp as: (
(Class subclassOf: 'Error' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #GiveUp)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #GiveUp) methodsFor: 'unclassified' !
defaultAction 
 self Processor activeProcess terminate.
^ self.

! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #GiveUp) methodsFor: 'unclassified' !
isResumable 
^false.

! !

"September 28, 2010 -> 23:11:24"!

Delta define: #GradientFillStyle as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #GradientFillStyle)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

Delta define: #Language as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #Language)
comment: 
''!


"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #Language) classSide methodsFor: 'utility' !
syntheticNameSeparator ^ <String>
	^self syntheticNameSeparatorCharacter asString! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #Language) classSide methodsFor: 'utility' !
syntheticNameSeparatorCharacter ^ <Character>
	^$_! !

"September 28, 2010 -> 23:11:24"!

Delta define: #MixinApplicationMetadata as: (
(Class subclassOf: 'SystemMetadata' instanceVariables: 'application ')) !


"September 28, 2010 -> 23:11:24"!

(Delta mirrorFor: #MixinApplicationMetadata)
comment: 
'Stored in Class'' instance variable metadata iff the class is a mixin application.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #MixinApplicationMetadata) methodsFor: 'Unclassified' !
definingClass ^<Class>


	^SystemMetadata definingClassOf: application
! !

"September 28, 2010 -> 23:11:24"!

! (Delta mirrorFor: #MixinApplicationMetadata) methodsFor: 'Unclassified' !
isMixinApplication 

	^true
! !

"September 28, 2010 -> 23:11:24"!

Delta define: #MorphicAgentFactory as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:25"!

(Delta mirrorFor: #MorphicAgentFactory)
comment: 
''!


"September 28, 2010 -> 23:11:25"!

Delta define: #MorphicFontMapper as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:25"!

(Delta mirrorFor: #MorphicFontMapper)
comment: 
''!


"September 28, 2010 -> 23:11:25"!

Delta define: #NamedSlotFinder as: (
(Class subclassOf: 'ObjectIterator' instanceVariables: 'slotName <String> slotValue <Object> found <Boolean>')) !


"September 28, 2010 -> 23:11:25"!

(Delta mirrorFor: #NamedSlotFinder)
comment: 
''!


"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NamedSlotFinder) classSide methodsFor: 'instance creation' !
forSlot: s <String> ^ <Instance>
	^self new slotName: s! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NamedSlotFinder) methodsFor: 'access' !
getValueFor: o <OopsVMMirror>  ^ <Object>
	^self getValueFor: o ifFail:[Error signal].
	! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NamedSlotFinder) methodsFor: 'access' !
getValueFor: o <OopsVMMirror> ifFail: fblk <[^R def]>  ^ <Object>
	o iterateInstanceVariables: self.
	found ifFalse: [^fblk value].
	found := false.
	^slotValue
	! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NamedSlotFinder) methodsFor: 'initialization' !
initialize
	super initialize.
	found := false.! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NamedSlotFinder) methodsFor: 'initialization' !
slotName: s <String>
	self initialize.
	slotName := s
	! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NamedSlotFinder) methodsFor: 'named parts' !
name: n <Str> oop: value <Object>
	n = slotName ifTrue:[
		found := true.
		slotValue := value
	]! !

"September 28, 2010 -> 23:11:25"!

Delta define: #NativeSession as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: 'SystemScope MessageBox BrazilMappingForWin32 brazil List SmalltalkImage WorldState watchdogProcess module_slot Delay Preferences ToolSet OSProcess desktop_slot Desktop NsFFISessionManager InputSensor Smalltalk suspendedDesktop_slot') classVariables: 'MixinMetadata_NativeSession EnclosingObjects_NativeSession') !


"September 28, 2010 -> 23:11:25"!

(Delta mirrorFor: #NativeSession)
comment: 
'Captures the native UI state used by Brazil.'!


"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
debugUsingPlatform: platform 
|  SmalltalkImage  Utilities  NsToolSet  initials  currentImage  currentImageName  isChild |
 SmalltalkImage := platform System SmalltalkImage.
 Utilities := platform System Utilities.
 NsToolSet := platform NsToolSet NsToolSet.
( SmalltalkImage current  snapshot:true andQuit:false) ifTrue:[ 
^nil.
].
 initials := Utilities authorInitialsPerSe.
 currentImage := SmalltalkImage current.
 currentImageName := currentImage imageName.
 currentImage closeSourceFiles.
 currentImage saveChangesInFileNamed:( currentImage fullNameForChangesNamed:'NativeSession').
 currentImage imageName:( currentImage fullNameForImageNamed:'NativeSession').
 isChild := currentImage  snapshot:true andQuit:false.
 currentImage closeSourceFiles.
 isChild ifFalse:[ 
 currentImage imageName: currentImageName.
].
 currentImage openSourceFiles.
 Utilities setAuthorInitials: initials.
 isChild ifFalse:[ 
 NsToolSet launchImageNamed:( currentImage fullNameForImageNamed:'NativeSession').
].
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
drawAttentionToConsole 
 self  drawAttentionToConsoleIfTrue:[ 
true.
].
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
drawAttentionToConsoleIfTrue: attentionNeeded 
 self soleInstanceIfNotNil:[ : it | 
 it isRunningMorphic ifFalse:[ 
 it NsFFISessionManager schedule:[ 
 attentionNeeded value ifTrue:[ 
 it flashSqueakWindow.
].
].
].
].
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_NativeSession := eos ! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
goMorphic 
 self soleInstance goMorphic.
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
goNative 
 self soleInstance goNative.
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_NativeSession := mmd ! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
prepareForNewVmSession 
 self soleInstanceIfNotNil:[ : it | 
 it cleanupForNewImageSession.
].
 self reset.
 self soleInstance.
( self environment at:#'NsPlatform') soleInstance brazil resetDesktop.
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
shutDown: quitting 
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
start 
 self soleInstance start.
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
startUp: resuming 
 resuming ifTrue:[ 
 self soleInstance setupDesktopForNewSession.
].
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
stop 
 self soleInstanceIfNotNil:[ : s | 
 s stop.
].
 self reset.
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
turnOffIfError: onError 
 self soleInstanceIfNotNil:[ : it | 
 it turnOffIfError: onError.
].
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) classSide methodsFor: 'unclassified' !
usingPlatform: platform 
^ self basicNew usingPlatform: platform.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
BrazilMappingForWin32 ^BrazilMappingForWin32! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
BrazilMappingForWin32: BrazilMappingForWin32_val BrazilMappingForWin32 := BrazilMappingForWin32_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Delay ^Delay! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Delay: Delay_val Delay := Delay_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Desktop ^Desktop! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Desktop: Desktop_val Desktop := Desktop_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
InputSensor ^InputSensor! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
InputSensor: InputSensor_val InputSensor := InputSensor_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
List ^List! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
List: List_val List := List_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
MessageBox ^MessageBox! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
MessageBox: MessageBox_val MessageBox := MessageBox_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
NativeSession_1_init: platform 
 self List: platform Collections OrderedCollection.
 self BrazilMappingForWin32: platform BrazilForWindows BrazilMappingForWin32.
 self brazil: platform NsPlatform soleInstance brazil.
 self Desktop: self  brazil containers Desktop.
 self MessageBox: self  brazil tools MessageBox.
 self WorldState: platform Morphic WorldState.
 self OSProcess: platform OSProcess OSProcess.
 self Smalltalk: platform Smalltalk.
 self InputSensor: platform Kernel InputSensor.
 self Delay: platform Kernel Delay.
 self SmalltalkImage: platform System SmalltalkImage.
 self NsFFISessionManager: platform NativeSession NsFFISessionManager.
 self ToolSet: platform System ToolSet.
 self Preferences: platform System Preferences.
 self SystemScope: platform SystemScope SystemScope.
 self suspendedDesktop_slot: self  brazil theDesktop.
 self module_slot:nil.
 self desktop_slot:nil.
 self watchdogProcess:nil.
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
NativeSession_superInit_usingPlatform: platform 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
NsFFISessionManager ^NsFFISessionManager! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
NsFFISessionManager: NsFFISessionManager_val NsFFISessionManager := NsFFISessionManager_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
OSProcess ^OSProcess! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
OSProcess: OSProcess_val OSProcess := OSProcess_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Preferences ^Preferences! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Preferences: Preferences_val Preferences := Preferences_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Smalltalk ^Smalltalk! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
Smalltalk: Smalltalk_val Smalltalk := Smalltalk_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
SmalltalkImage ^SmalltalkImage! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
SmalltalkImage: SmalltalkImage_val SmalltalkImage := SmalltalkImage_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
SystemScope ^SystemScope! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
SystemScope: SystemScope_val SystemScope := SystemScope_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
ToolSet ^ToolSet! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
ToolSet: ToolSet_val ToolSet := ToolSet_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
WorldState ^WorldState! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
WorldState: WorldState_val WorldState := WorldState_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
alwaysAllowClose 
^[ : w | 
true.
] fixTemps.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
anyVisibleWindows 
|  isWindow  isWindowVisible  sqHandle |
 isWindow := self  module api IsWindow.
 isWindowVisible := self  module api IsWindowVisible.
 self  module windowsSession topLevelWindowsDo:[ : i | 
(( isWindow boolValue: i) and:[ 
 isWindowVisible boolValue: i.
]) ifTrue:[ 
^true.
].
].
 sqHandle := self  squeakWindowHandle.
^( isWindow boolValue: sqHandle) and:[ 
 isWindowVisible boolValue: sqHandle.
].

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
approveClosingLastWindow: window 
( self  desktop windows select:[ : each | 
 each ~~ window and:[ 
 each isOpen.
].
]) isEmpty not ifTrue:[ 
^true.
].
 self  Preferences inPackagedImage  ifTrue:[ 
 self  confirmQuit.
] ifFalse:[ 
 self  confirmSaveOrQuit.
].
^false.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
brazil ^brazil! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
brazil: brazil_val brazil := brazil_val! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
checkForVisibleWindows 
 self  anyVisibleWindows ifTrue:[ 
^ self.
].
 self  ToolSet quit.
 self  watchdogProcess isNil ifFalse:[ 
 self   show:true squeakWindow: self  squeakWindowHandle.
].
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
cleanupForNewImageSession 
 self  watchdogProcess:nil.
 self  module ifNotNil:[ : it | 
 it resetForNewImageSession.
].
( self  desktop notNil and:[ 
 self  desktop isMorphic not.
]) ifTrue:[ 
 self  desktop discardMappings.
].
^ self.

! !

"September 28, 2010 -> 23:11:25"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
confirmQuit 
|  answer |
 answer := self  MessageBox new yesNo:'Do you want to quit?'; 
 open.
 answer ==#'yes' ifTrue:[ 
 self  quit.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
confirmSaveOrQuit 
|  answer |
 answer := self  MessageBox new yesNoCancel:'Save changes before quitting?'; 
 open.
 answer ==#'yes' ifTrue:[ 
 self  saveThenQuit.
].
 answer ==#'no' ifTrue:[ 
 self  quit.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
desktop 
^ self  desktop_slot value.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
desktop_slot ^desktop_slot! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
desktop_slot: desktop_slot_val desktop_slot := desktop_slot_val! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
drawAttentionToSqueakWindow: handle 
|  api |
 api := self  module api.
 api GetForegroundWindow unsignedValue = handle ifFalse:[ 
 api FlashWindow  value: handle value:1.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
enableApproveClosingLastWindow 
^[ : w | 
 self  approveClosingLastWindow: w.
] fixTemps.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
flashSqueakWindow 
|  api  handle |
 self  isRunningMorphic ifTrue:[ 
^ self.
].
 api := self  module api.
 handle := self  squeakWindowHandle.
 handle ~=0 ifTrue:[ 
 self  module windowsSession enableAll.
 self   show:true squeakWindow: handle.
 self  drawAttentionToSqueakWindow: handle.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
focusSqueakWindow 
|  api  handle |
 self  isRunningMorphic ifTrue:[ 
^ self.
].
 api := self  module api.
 handle := self  squeakWindowHandle.
 handle ~=0 ifTrue:[ 
 self   show:true squeakWindow: handle.
 api SetActiveWindow value: handle.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
goMorphic 
|  newOrExistingMorphicDesktop |
 self  isRunningMorphic ifTrue:[ 
^ self.
].
 self  focusSqueakWindow.
 self  suspendedDesktop ifNotNil:[ : currentDesktop | 
 currentDesktop agent ifNotNil:[ : it | 
 it isMorphic ifTrue:[ 
 newOrExistingMorphicDesktop := currentDesktop.
].
].
].
 self  switchToDesktop:( newOrExistingMorphicDesktop ifNil:[ 
 self  brazil newMorphicDesktop.
]).
 self  brazil theDesktop windowClosePermission: self  alwaysAllowClose; 
 positionWindowsWithinVisibleScreenArea.
 self  Preferences inPackagedImage ifTrue:[ 
^ self.
].
( self  brazil theDesktop windows select:[ : each | 
 each isOpen.
]) isEmpty not ifFalse:[ 
 self  ToolSet default openClassBrowser.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
goNative 
 self  NsFFISessionManager soleInstanceIfNotNil:[ : it | 
 it platformHasNativeEventLoop  ifTrue:[ 
 self  switchToDesktop: self  desktop.
 self  desktop windowClosePermission: self  enableApproveClosingLastWindow.
 self  module squeakWindowHandle: self  squeakWindowHandle.
 self  Preferences inPackagedImage ifTrue:[ 
^ self.
].
( self  desktop windows select:[ : each | 
 each isOpen.
]) isEmpty not ifFalse:[ 
 self  ToolSet default openClassBrowser.
].
] ifFalse:[ 
 self  MessageBox new ok:'Native mode is not available on this OS.'; 
 open.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
hasUserInterrupted 
|  peekMessage  translateMessage  syskeydown  syschar  remove |
 peekMessage := self  module api PeekMessage.
 translateMessage := self  module api TranslateMessage.
 syskeydown := self  module api WM_SYSKEYDOWN.
 syschar := self  module api WM_SYSCHAR.
 remove := self  module api PM_REMOVE.
 self  module api MSG newC freeAfter:[ : msg | 
( peekMessage  boolValue: msg address value:0 value: syskeydown value: syskeydown value: remove) ifTrue:[ 
 translateMessage boolValue: msg address.
].
( peekMessage  boolValue: msg address value:0 value: syschar value: syschar value: remove) ifTrue:[ 
^ msg wParam =$. asciiValue and:[ 
( msg lParam bitAnd:1073741824) ~=0.
].
].
].
^false.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
isHeadless 
^ self  Preferences inPackagedImage.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
isRunningMorphic 
^( self  brazil theDesktop ifNil:[ 
^true.
]) isMorphic.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
isRunningNative 
^ self  isRunningMorphic not.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
isWindows 
^( self  OSProcess ifNil:[ 
^false.
]) isWindows.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
module 
^ self  module_slot value.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
module_slot ^module_slot! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
module_slot: module_slot_val module_slot := module_slot_val! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
quit 
 self  WorldState addDeferredUIMessage:[ 
 self  SmalltalkImage current  snapshot:false andQuit:true.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
saveThenQuit 
 self  WorldState addDeferredUIMessage:[ 
 self  SmalltalkImage current  snapshot:true andQuit:true.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
setupDesktopForNewSession 
 self  isWindows ifFalse:[ 
^ self  goMorphic.
].
 self  InputSensor default shiftPressed not  ifTrue:[ 
 self  goNative.
] ifFalse:[ 
 self  goMorphic.
].
 self  watchdog.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
setupUsingPlatform: platform 
 self  isWindows ifTrue:[ 
^ self  setupWin32NativeSessionUsingPlatform: platform.
].
 self  module_slot:[ 
nil.
].
 self  desktop_slot:[ 
nil.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
setupWin32NativeSessionUsingPlatform: platform 
 self  module_slot:( self future:[ 
( self  BrazilMappingForWin32 platform: platform) useDoubleBuffering:true; 
 yourself.
]).
 self  desktop_slot:( self future:[ 
 self  Desktop withMapping: self  module agentFactory.
]).
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
show: show squeakWindow: handle 
|  api |
 api := self  module api.
 handle ~=0 ifTrue:[ 
 api ShowWindow  value: handle value:( show  ifTrue:[ 
 api SW_SHOW.
] ifFalse:[ 
 api SW_HIDE.
]).
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
squeakWindowClassName 
^ self  SystemScope soleInstance systemName ,'WindowClass'.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
squeakWindowHandle 
^( self  module api Alien newCString: self  squeakWindowClassName) freeAfter:[ : classNameBuffer | 
 self  module api FindWindow  unsignedValue: classNameBuffer address value:0.
].

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
start 
 self  Smalltalk addToShutDownList: self class; 
 addToStartUpList: self class.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
stop 
 self  Smalltalk removeFromShutDownList: self class; 
 removeFromStartUpList: self class.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
suspendedDesktop 
^ self  suspendedDesktop_slot ifNil:[ 
 self  brazil theDesktop.
].

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
suspendedDesktop_slot ^suspendedDesktop_slot! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
suspendedDesktop_slot: suspendedDesktop_slot_val suspendedDesktop_slot := suspendedDesktop_slot_val! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
switchToDesktop: newDesktop 
|  oldDesktop |
 oldDesktop := self  suspendedDesktop.
 self  suspendedDesktop_slot:nil.
 self  brazil theDesktop: newDesktop.
 oldDesktop == newDesktop ifTrue:[ 
^ self.
].
 oldDesktop ifNotNil:[ 
|  oldWindows |
 oldWindows := self Array withAll: oldDesktop windows.
 oldWindows do:[ : each | 
[ 
 oldDesktop remove: each.
 newDesktop add: each.
] ifError:[ : msg | 
 msg out.
 newDesktop remove: each.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
turnOffIfError: onError 
 self  NsFFISessionManager soleInstanceIfNotNil:[ : ffiSession | 
( self  OSProcess isWindows and:[ 
 ffiSession nativeIoVmFlag value >1.
]) ifTrue:[ 
^ onError valueWithPossibleArgument:'Cannot terminate native I/O processing. Please try again after restarting the image.'.
].
 self  goMorphic.
 ffiSession releaseTheWorld.
].
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
useArialFont 
 self  useFont: self  module windowsSession fontMapper arialFont.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
useConsolasFont 
 self  useFont: self  module windowsSession fontMapper consolasFont.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
useFont: font 
|  fontMapper |
 fontMapper := self  module windowsSession fontMapper.
 fontMapper defaultFont = font ifTrue:[ 
^ self.
].
 fontMapper defaultFont: font.
 fontMapper resetForNewImageSession.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
useGeorgiaFont 
 self  useFont: self  module windowsSession fontMapper georgiaFont.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
useVerdanaFont 
 self  useFont: self  module windowsSession fontMapper verdanaFont.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
usingPlatform: platform 
 self NativeSession_superInit_usingPlatform: platform.
 self NativeSession_1_init: platform.
 self  setupUsingPlatform: platform.
^ self.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
watchdog 
|  delay |
 self  watchdogProcess ifNotNil:[ : it | 
^ it.
].
 delay := self  Delay forSeconds:3.
 self  watchdogProcess:[ 
 delay wait.
[ 
 self  watchdogProcess isNil not and:[ 
 self  watchdogProcess isActiveProcess.
].
] whileTrue:[ 
 self  checkForVisibleWindows.
 delay wait.
].
] newProcess.
 self  watchdogProcess priority:39; 
 name:'Native Session Watchdog'; 
 resume.
^ self  watchdogProcess.

! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
watchdogProcess ^watchdogProcess! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
watchdogProcess: watchdogProcess_val watchdogProcess := watchdogProcess_val! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NativeSession) methodsFor: 'unclassified' !
win32api 
^ self  module api.

! !

"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NativeSessionPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

(Delta mirrorFor: #NativeSessionPackage)
comment: 
''!


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakError as: (
(Class subclassOf: 'Error' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

(Delta mirrorFor: #NewspeakError)
comment: 
''!


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakMirrors as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

(Delta mirrorFor: #NewspeakMirrors)
comment: 
'A quick and dirty emulation of the required elements of the mirror API.'!


"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakMirrors) classSide methodsFor: 'instance creation' !
usingLib: platform <NsPlatform> ^ <Instance>
	^self new initialize! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakMirrors) methodsFor: 'access' !
ObjectMirror 
	^NewspeakObjectMirror! !

"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '' classInstanceVariables: 'metadata')) !


"September 28, 2010 -> 23:11:26"!

Delta define: #NewspeakObject as: (
(Class subclassOf: 'Object' instanceVariables: '' classInstanceVariables: 'metadata')) !


"September 28, 2010 -> 23:11:26"!

(Delta mirrorFor: #NewspeakObject)
comment: 
'Class NewspeakObject is the root of the object hierarchy in the Newspeak programming language, and provides behavior common to all objects.

For each protocol P in the system, this class provides a method "isP" which answers true if and only if the receiver is an instance of a class which implements the protocol P.

Discussion:

Unlike other systems inspired by Smalltalk, the number of methods in this class is deliberately kept to a minimum. Behavior should only be provided by this class if it should be considered part of the core set of features available to *all* Newspeak programmers.

The security model of the Newspeak programming language is based on capabilities and it is essential that capabilities cannot leak through behavior provided by this class. For example, this class provides no mechanism for accessing instance variables of its instances. Instead such capabilities are provided to the debugger and other tools through mirror based reflection modules.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) classSide methodsFor: 'metadata' !
metadata
	metadata isNil
		ifTrue:[
			metadata := 
				(Mirror on: self) isMixinInvocation
					ifTrue:[MixinApplicationMetadata new]
					ifFalse:[DefiningClassMetadata new]
		].
	^metadata! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) classSide methodsFor: 'private' !
basicNew

	^self primitiveNew! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
Array ^ <Array class>
	"Answers the class Array or a compatible object.
	May be overridden in subclasses."
	^Array! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
Character ^ <Character class>
	"Answers the class Character or a compatible object.
	May be overridden in subclasses."
	^Character! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
Error ^ <Error class>
	"Answers the class Error or a compatible object.
	May be overridden in subclasses."
	^NewspeakError! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
Float ^ <Float class>
	"Answers the class Float or a compatible object.
	May be overridden in subclasses."
	^Float! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
Integer ^ <Integer class>
	"Answers the class Integer or a compatible object.
	May be overridden in subclasses."
	^Integer! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
Object ^ <Object class>
	"Answers the class Object or a compatible object.
	May be overridden in subclasses."
	^NewspeakObject! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
String ^ <String class>
	"Answers the class String or a compatible object.
	May be overridden in subclasses."
	^String! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
Symbol ^ <Symbol class>
	"Answers the class Symbol or a compatible object.
	May be overridden in subclasses."
	^Symbol! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
assert: condition <[^Boolean]> message: message <String>
	"Raises an error with the given message if and only if condition evaluates to false."
	self inProduction
		ifFalse: [ 
			condition isBlock ifFalse: [self Error signal: 'Block required'].
			condition verify: message
			 ]! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
canonicalRepresentation ^ <Self | CanonicalRepresentation>
	"Answers the canonical representation of the receiver, that is, either the receiver itself or an instance of CanonicalRepresentation."
	^self! !

"September 28, 2010 -> 23:11:26"!

! (Delta mirrorFor: #NewspeakObject) methodsFor: 'accessing' !
new
	"Does nothing. May be overriden in subclasses."! !

"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: 'reflectee <Object> oopMirror <OopsVMMirror>')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: 'reflectee <Object> oopMirror <OopsVMMirror>')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: 'reflectee <Object> oopMirror <OopsVMMirror>')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NewspeakObjectMirror as: (
(Class subclassOf: 'Mirror' instanceVariables: 'reflectee <Object> oopMirror <OopsVMMirror>')) !


"September 28, 2010 -> 23:11:27"!

(Delta mirrorFor: #NewspeakObjectMirror)
comment: 
''!


"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) classSide methodsFor: 'instance creation' !
reflecting: r <Object> ^ <Instance>
	^self new reflectee: r! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'access' !
getClassIfFail:  fblk <[Exception, ^R def]> ^ <ClassMirror> 
	^Mirror on: reflectee actualClass "never fails on local objects"! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'access' !
getSlot: slotName <Symbol> ifFail:  fblk <[Exception, ^R def]> ^ <ObjectMirror | R>
	^self class reflecting: ((NamedSlotFinder forSlot: slotName) getValueFor: oopMirror ifFail: [^fblk value]).! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'access' !
perform: selector <Symbol> with:  args <Array[Object]> ifFail:  fblk <[Exception, ^R def]>  ^ <ObjectMirror | R >
	| result <Object> |
	result := [reflectee perform: selector withArguments: args] on: Error do: [:ex <Error> | ^fblk value: ex].
	^self class reflecting: result! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'access' !
reflecteeIfFail:  fblk <[Exception]> ^ <ClassMirror> 
	^reflectee "never fails on local objects"! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'access' !
setClass: klass <Class | ClassMirror> ifFail:  fblk <[Exception, ^R def]> ^ <ClassMirror | R> 
	^fblk value "always fails for now"! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'access' !
setSlot: slotName <Symbol> to:  obj <Object> ifFail:  fblk <[Exception]>
	self perform: (slotName, ':' ) asSymbol  with: {obj} ifFail: fblk! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'accessors' !
reflectee ^ <Object>
	^reflectee! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NewspeakObjectMirror) methodsFor: 'accessors' !
reflectee: r  <Object>
	reflectee := r.
	oopMirror := OopsVMMirror on: r! !

"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:27"!

(Delta mirrorFor: #NsFFIPackage)
comment: 
''!


"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFIPackage) methodsFor: 'overrides' !
UnsafeAlien

	^UnsafeAlienProxy! !

"September 28, 2010 -> 23:11:27"!

Delta define: #NsFFISessionManager as: (
(Class subclassOf: 'Singleton' instanceVariables: 'deferredActionsSlot
processIoEvents
ioEventProcess
processStackChanged
deferredInstallmentsSlot
userAbortWatcher
api') classVariables: 'MixinMetadata_NsFFISessionManager EnclosingObjects_NsFFISessionManager') !


"September 28, 2010 -> 23:11:27"!

(Delta mirrorFor: #NsFFISessionManager)
comment: 
'Manages all state related to the current VM process.
Responsibilites include:

	* draining events from native I/O event queue
	* scheduling of actions in the native I/O event thread
	* manage native callbacks
	* handle errors in debugging (allowing for debugging of such errors)

Note: this class is work in progress. These responsibilites are currently managed by
the class ''''Alien'''' and will be moved here.'!


"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_NsFFISessionManager := eos ! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) classSide methodsFor: 'unclassified' !
logFatalError: error 
|  fn |
 fn :='fatal-error.txt'.
 self CrLfFileStream  forceNewFileNamed: fn do:[ : s | 
 s nextPutAll:'Application crashed during start up at: '.
 self DateAndTime now asLocal printOn: s.
 s cr; 
 flush.
 self Preferences inPackagedImage ifTrue:[ 
^ self.
].
 error exception ifNotNil:[ : it | 
|  stack |
 stack := it signalerContext.
[ 
 stack isNil.
] whileFalse:[ 
 stack printOn: s.
 s cr; 
 flush.
 stack := stack sender.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_NsFFISessionManager := mmd ! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) classSide methodsFor: 'unclassified' !
prepareForNewVmSession 
[ 
^ self soleInstance prepareForNewVmSession.
]  on: self UnhandledError do:[ : ex | 
[ 
 self  logFatalError: self error.
]  on: self UnhandledError do:[ 
nil.
].
 self Preferences inPackagedImage ifTrue:[ 
 self Smalltalk quitPrimitive.
].
].
^false.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) classSide methodsFor: 'unclassified' !
schedule: deferredAction 
 self soleInstanceIfNotNil:[ : it | 
 it scheduleDeferredAction: deferredAction.
^ self.
].
 deferredAction forkAt:30.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) classSide methodsFor: 'unclassified' !
usingPlatform: ignored 
^ self new initialize.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
NsFFISessionManager_1_init 
 | platform |
 self processIoEvents:nil.
 self ioEventProcess:nil.
 self deferredActionsSlot:nil.
 self deferredInstallmentsSlot:nil.
 self processStackChanged:nil.
 self userAbortWatcher:nil.
 platform := NsPlatform soleInstance.
 api := platform Win32API Win32API usingPlatform: platform.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
NsFFISessionManager_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
abortIfIoEventProcess: description 
 self  ioEventProcess isActiveProcess ifTrue:[ 
 self Abort signal: description.
].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
abortIoProcess: process 
 self  unwindRecursiveInterpretersIn: process.
 process signalException: self GiveUp.
 process resume.
 self  spawnIoEventProcess.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
checkUserAbort 
 self NativeSession soleInstanceIfNotNil:[ : it | 
 it hasUserInterrupted ifTrue:[ 
 self  debugIoProcess: self  ioEventProcess.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
debugIoProcess: process 
 self  unwindRecursiveInterpretersIn: process.
 self  spawnIoEventProcess.
 process debugWithTitle:'User Interrupt'.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredActions 
 self  deferredActionsSlot
 		ifNil: [self  deferredActionsSlot: SharedQueue new].
 ^self  deferredActionsSlot! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredActionsDo: action 
[ 
 action value:( self  deferredActions nextOrNil ifNil:[ 
^ self.
]).
true.
] whileTrue.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredActionsSlot ^deferredActionsSlot! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredActionsSlot: deferredActionsSlot_val deferredActionsSlot := deferredActionsSlot_val! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredInstallments 
 self  deferredInstallmentsSlot
 		ifNil: [self  deferredInstallmentsSlot: SharedQueue new].
 ^self  deferredInstallmentsSlot! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredInstallmentsDo: action 
 action value:( self  deferredInstallments nextOrNil ifNil:[ 
^ self.
]).
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredInstallmentsSlot ^deferredInstallmentsSlot! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
deferredInstallmentsSlot: deferredInstallmentsSlot_val deferredInstallmentsSlot := deferredInstallmentsSlot_val! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
doWithSpecialErrorHandling: action 
^[	self  restartUserAbortWatcher.
	[action
		on: GiveUp
		do:[ : ex | nil]]
			ifCurtailed: [nil]]
	on: Error
	do:[ :ex |
 			self  ioEventProcess isActiveProcess
 				ifTrue: [self  spawnIoEventProcess].
 			ex pass]

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
drainEventsWhileFalse: doneValueProvider 
|  delay |
 delay := "self" Delay forMilliseconds:50.
 self  ioEventProcess isActiveProcess ifTrue:[ 
^[ 
 doneValueProvider value.
] whileFalse:[ 
 self  processOneRoundOfIoEvents.
 delay wait.
].
].
" self Project uiProcess isActiveProcess ifTrue:[ 
|  world |
 world := self World.
^[ 
 doneValueProvider value.
] whileFalse:[ 
 world doOneCycle.
].
]."
[ 
 doneValueProvider value.
] whileFalse:[ 
 delay wait.
].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
drainNativeEventQueue 
 "self  terminateUserAbortWatcher.
 self Alien primDrainOSEventQueue."
 api MSG newC
 	freeAfter: [	:msg |
 							[api PeekMessage
 								boolValue: msg pointer
 								value: 0
 								value: 0
 								value: 0
 								value: api PM_REMOVE]
 									whileTrue: [api DispatchMessage value: msg pointer]].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
initialize 
 self  releaseTheWorld.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
invokeCallback: thunkPtr stack: stackPtr 
|  resultProxy |
 resultProxy := self  doWithSpecialErrorHandling:[ 
 self Callback  evaluateCallbackForThunk: thunkPtr stack: stackPtr.
].
 resultProxy ifNil:[ 
( resultProxy := self FFICallbackReturnValue new) returnInteger:0.
].
^ resultProxy.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
ioEventProcess ^ioEventProcess! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
ioEventProcess: ioEventProcess_val ioEventProcess := ioEventProcess_val! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
ioEventProcessLoop 
|  delay |
 delay := Delay forMilliseconds:50.
 "self  takeIoProcessing."
 [[	self  processIoEvents and: [self  ioEventProcess isActiveProcess]]
		whileTrue: [	self  processOneRoundOfIoEvents.
								[delay wait]
									on: Error
									do: [delay := Delay forMilliseconds: 50]]]
		on: GiveUp
		do: [nil].
 "self releaseIoProcessing."
 ^self

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
nativeIoVmFlag 
^ self IntegerFlagAlien forInIoProcessEventsFlag.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
new 
 self NsFFISessionManager_superInit_new.
 self NsFFISessionManager_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
platformHasNativeEventLoop 
^OSProcess isWindows.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
prepareForNewVmSession 
|  resumingInEventLoop |
 resumingInEventLoop := self  ioEventProcess isActiveProcess.
 self  processIoEvents:false.
 self  terminateUserAbortWatcher.
 self IllegalAlien prepareForNewVmSession.
 self Alien prepareForNewVmSession.
 self FFICallbackThunk prepareForNewVmSession.
 self Smalltalk  at:#'NativeSession' ifPresent:[ : it | 
 it prepareForNewVmSession.
].
 self  takeOverTheWorld.
^ resumingInEventLoop.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
processIoEvents ^processIoEvents! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
processIoEvents: processIoEvents_val processIoEvents := processIoEvents_val! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
processOneRoundOfIoEvents 
 self  drainNativeEventQueue.
 self  ioEventProcess isActiveProcess ifFalse:[ 
^ self.
].
 self  deferredActionsDo:[ : deferredAction | 
 self  drainNativeEventQueue.
 self  doWithSpecialErrorHandling: deferredAction.
 self  ioEventProcess isActiveProcess ifFalse:[ 
^ self.
].
].
 self  deferredInstallmentsDo:[ : deferredAction | 
 self  drainNativeEventQueue.
 self  doWithSpecialErrorHandling: deferredAction.
 self  ioEventProcess isActiveProcess ifFalse:[ 
^ self.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
processStackChanged ^processStackChanged! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
processStackChanged: processStackChanged_val processStackChanged := processStackChanged_val! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
releaseIoProcessing 
 self OSProcess isWindows ifFalse:[ 
^ self.
].
 self  nativeIoVmFlag decrement.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
releaseTheWorld 
 self  processIoEvents:false.
 self  ioEventProcess:[ 
nil.
] fork.
 self  terminateUserAbortWatcher.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
restartUserAbortWatcher 
 "self  ioEventProcess isActiveProcess ifFalse:[ 
^ self.
].
 self  terminateUserAbortWatcher.
 self  spawnUserAbortWatcher."
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
resumeIoEventProcess: process 
 self  ioEventProcess: process.
 self  ioEventProcess resume.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
scheduleDeferredAction: action 
 action ifNil:[ 
^ self.
].
 self  deferredActions nextPut: action.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
scheduleDeferredInstallment: action 
 action ifNil:[ 
^ self.
].
 self  deferredInstallments nextPut: action.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
spawnIoEventProcess 
 self  processIoEvents ifFalse:[^ self].
 "self  nativeIoVmFlag increment."
 self  ioEventProcess: [self  ioEventProcessLoop] newProcess.
 self  ioEventProcess
 	priority:45; 
 	name:'Native I/O Event Process'; 
 	resume.
^ self! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
spawnIoEventProcessIfThisIsIt: process 
 process == self  ioEventProcess ifTrue:[ 
 self  ioEventProcess:[ 
nil.
] newProcess.
 self  unwindRecursiveInterpretersIn: process.
 self  spawnIoEventProcess.
].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
spawnUserAbortWatcher 
 self  userAbortWatcher:[ 
 self  userAbortWatcherLoop.
] newProcess.
 self  userAbortWatcher priority:60; 
 name:'Native user abort watcher'; 
 resume.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
takeIoProcessing 
 self OSProcess isWindows ifFalse:[ 
^ self.
].
 self  nativeIoVmFlag increment.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
takeOverTheWorld 
 self  platformHasNativeEventLoop ifFalse:[ 
^ self.
].
 self  processIoEvents ==true ifTrue:[ 
 self error:'already processing events synchronously'.
].
 self  processIoEvents:true.
 self  processStackChanged ifNil:[ 
 self  processStackChanged: Semaphore new.
].
 self  spawnIoEventProcess.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
terminateActiveProcess 
|  process |
 process := self Processor activeProcess.
 process == self  ioEventProcess ifTrue:[ 
 self GiveUp signal.
].
 self Project spawnNewProcessIfThisIsUI: process.
 process terminate.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
terminateUserAbortWatcher 
 self  userAbortWatcher ifNotNil:[ : it | 
 it terminate.
].
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
unwindRecursiveInterpretersIn: process 
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
userAbortWatcher ^userAbortWatcher! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
userAbortWatcher: userAbortWatcher_val userAbortWatcher := userAbortWatcher_val! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
userAbortWatcherLoop 
( self Delay forMilliseconds:500) wait.
 self   whileTrue:[ 
 self  userAbortWatcher isActiveProcess.
] do:[ 
 self  checkUserAbort.
] everyMilliseconds:50.
^ self.

! !

"September 28, 2010 -> 23:11:27"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
usingPlatform: ignored 
 self  initialize.
^ self.

! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsFFISessionManager) methodsFor: 'unclassified' !
whileTrue: condition do: action everyMilliseconds: ms 
|  delay |
 delay := self Delay forMilliseconds: ms.
[ 
[ 
 condition value.
] whileTrue:[ 
 action value.
[ 
 delay wait.
]  on: self Error do:[ 
 delay := self Delay forMilliseconds:50.
].
].
]  on: self GiveUp do:[ 
nil.
].
^ self.

! !

"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPackage as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #NsPackage)
comment: 
''!


"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPackage) classSide methodsFor: 'mnu' !
doesNotUnderstand: msg
	^Smalltalk at: msg selector ifAbsent:[super doesNotUnderstand: msg]! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPackage) methodsFor: 'mnu' !
doesNotUnderstand: msg
	^Smalltalk at: msg selector ifAbsent:[super doesNotUnderstand: msg]! !

"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: 'brazil win32API')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: 'brazil win32API')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: 'brazil win32API')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #NsPlatform as: (
(Class subclassOf: 'Singleton' instanceVariables: 'brazil win32API')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #NsPlatform)
comment: 
'Newspeak Platform.'!


"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'mnu' !
doesNotUnderstand: msg
	^Smalltalk at: msg selector ifAbsent:[super doesNotUnderstand: msg]
	! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'modules' !
brazil

	brazil isNil ifTrue: [
		brazil := self Brazil usingPlatform: self].
	^brazil! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Balloon! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
BrazilForMorphic! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
BrazilForWindows! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Collections! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Exceptions! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Files! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Graphics! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Kernel! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Mirrors! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Morphic! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
NativeSession

	^NativeSessionPackage! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Newspeak2! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
NsFFI

	^NsFFIPackage new! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Numbers! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Streams! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
Win32API

	win32API isNil
		ifTrue: [win32API := Win32APIPackage platform: self].
	^win32API! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
blackMarket! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
collections! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #NsPlatform) methodsFor: 'subsystems' !
streams! !

"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #OSProcess as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #OSProcess)
comment: 
''!


"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #OSProcess) classSide methodsFor: 'newspeak' !
isWindows

	^Platform == Win32Platform! !

"September 28, 2010 -> 23:11:28"!

Delta define: #PNGReadWriter as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #PNGReadWriter)
comment: 
''!


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '' classInstanceVariables: 'soleInstance')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #Singleton as: (
(Class subclassOf: 'Object' instanceVariables: '' classInstanceVariables: 'soleInstance')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #Singleton)
comment: 
''!


"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #Singleton) classSide methodsFor: 'instance creation' !
new

	^self soleInstance! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #Singleton) classSide methodsFor: 'instance creation' !
reset

	soleInstance := nil! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #Singleton) classSide methodsFor: 'instance creation' !
soleInstance

	soleInstance isNil
		ifTrue: [((soleInstance := super new) new usingPlatform: NsPlatform soleInstance) initialize].
	^soleInstance! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #Singleton) methodsFor: 'iniitialization' !
initialize! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #Singleton) methodsFor: 'iniitialization' !
new! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #Singleton) methodsFor: 'iniitialization' !
usingPlatform: ignored! !

"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadata as: (
(Class subclassOf: 'SystemMetadataClassSideData' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #SystemMetadata)
comment: 
''!


"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #SystemMetadata) classSide methodsFor: 'utility' !
fullyQualifySimpleName: sn <Symbol> with: fqp <Symbol> ^<Symbol> 
 
	^(fqp asString, Language syntheticNameSeparator, sn) asSymbol! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #SystemMetadata) classSide methodsFor: 'utility' !
mixinNameOfClassNamed: className <String> ^<Symbol>
	|
	simpleNames <Collection[String]>
	rawNames <Collection[String]>
	lastIndex <Integer>
	|
	
	lastIndex := 1.
	rawNames := OrderedCollection[String] new.
	(className indicesOfSubCollection: {Language syntheticNameSeparatorCharacter}) do:[: i |
		rawNames add: (className copyFrom: lastIndex to: i-1).
		lastIndex := i+1.
		].
	lastIndex <= className size ifTrue:[rawNames add: (className copyFrom: lastIndex to:  className size)].
	rawNames size =1 ifTrue:[^className].
	simpleNames := rawNames select:[:n <String>  | n first isDigit not].
	self assert:[simpleNames size >= 2].
	^(simpleNames reduce:[:sn1 <String>  :sn2 <String> | sn1, Language syntheticNameSeparator, sn2]) asSymbol! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #SystemMetadata) classSide methodsFor: 'utility' !
mixinSlotNameFor: nestedName <String>
	| mixinName <String> |
 
	mixinName := self  mixinNameOfClassNamed: nestedName.
	^mixinName, Language syntheticNameSeparator, 'slot'! !

"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #SystemMetadata) methodsFor: 'mirror access' !
Mirror ^ <Mirror class>
	^Mirror! !

"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '' classInstanceVariables: 'ns2Parser weakSubclasses')) !


"September 28, 2010 -> 23:11:28"!

Delta define: #SystemMetadataClassSideData as: (
(Class subclassOf: 'Object' instanceVariables: '' classInstanceVariables: 'ns2Parser weakSubclasses')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #SystemMetadataClassSideData)
comment: 
'This class serves as the root of the class hierarchy representing Newspeak system metadata - metadata needed by the system itself. All this class does is:

a.  Cache an NS2 parser in a class instance variable, to avoid recomputing it (and hence the grammar) all the time.  When we fully convert to NS2, we can store it in a module variable.

b. Maintain a weak set of classes in the class variable weakSubclasses. This is used to track the subclasses of a class without producing a memory leak, which the normal Squeak implementation tends to do.

Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:11:28"!

! (Delta mirrorFor: #SystemMetadataClassSideData) classSide methodsFor: 'accessing' !
privateWeakSubclasses

	nil == weakSubclasses ifTrue: [ weakSubclasses := WeakSet new ].
	^weakSubclasses! !

"September 28, 2010 -> 23:11:28"!

Delta define: #SystemScope as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:28"!

(Delta mirrorFor: #SystemScope)
comment: 
''!


"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #SystemScope) classSide methodsFor: 'Newspeak-stubs' !
SystemScope

^SystemScope! !

"September 28, 2010 -> 23:11:29"!

Delta define: #TimeStamp as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

(Delta mirrorFor: #TimeStamp)
comment: 
''!


"September 28, 2010 -> 23:11:29"!

Delta define: #UnhandledError as: (
(Class subclassOf: 'Error' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

(Delta mirrorFor: #UnhandledError)
comment: 
''!


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #UnsafeAlienProxy as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

(Delta mirrorFor: #UnsafeAlienProxy)
comment: 
''!


"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #UnsafeAlienProxy) classSide methodsFor: 'instance creation' !
forPointerTo: string

	^string asAlien pointer! !

"September 28, 2010 -> 23:11:29"!

Delta define: #WCharAlien as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

(Delta mirrorFor: #WCharAlien)
comment: 
''!


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: 'win32APIClass win32apiPARAFORMAT platform windowProc wndClass giveUp winNMHDR
winCharFormat winCharFormat2 winCharRange winFindData winGradientRect winMsg
winMsgFilter winOpenFilename winPaintStruct winPoint winProcessInformation winRect
winReqResize winScrollInfo winSecurityAttributes winStartupInfo winTrackMouseEvent
winTriVertex winWindowPos')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: 'win32APIClass win32apiPARAFORMAT platform windowProc wndClass giveUp winNMHDR
winCharFormat winCharFormat2 winCharRange winFindData winGradientRect winMsg
winMsgFilter winOpenFilename winPaintStruct winPoint winProcessInformation winRect
winReqResize winScrollInfo winSecurityAttributes winStartupInfo winTrackMouseEvent
winTriVertex winWindowPos')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: 'win32APIClass win32apiPARAFORMAT platform windowProc wndClass giveUp winNMHDR
winCharFormat winCharFormat2 winCharRange winFindData winGradientRect winMsg
winMsgFilter winOpenFilename winPaintStruct winPoint winProcessInformation winRect
winReqResize winScrollInfo winSecurityAttributes winStartupInfo winTrackMouseEvent
winTriVertex winWindowPos')) !


"September 28, 2010 -> 23:11:29"!

Delta define: #Win32APIPackage as: (
(Class subclassOf: 'NsPackage' instanceVariables: 'win32APIClass win32apiPARAFORMAT platform windowProc wndClass giveUp winNMHDR
winCharFormat winCharFormat2 winCharRange winFindData winGradientRect winMsg
winMsgFilter winOpenFilename winPaintStruct winPoint winProcessInformation winRect
winReqResize winScrollInfo winSecurityAttributes winStartupInfo winTrackMouseEvent
winTriVertex winWindowPos')) !


"September 28, 2010 -> 23:11:29"!

(Delta mirrorFor: #Win32APIPackage)
comment: 
''!


"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) classSide methodsFor: 'instance creation' !
platform: platform

	^self new platform: platform! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32API

	win32APIClass isNil
		ifTrue: [win32APIClass := self combine: (Smalltalk at: #Win32API)
																	with: (Smalltalk at: #CAPI)].
	^win32APIClass! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiCHARFORMAT

	winCharFormat isNil
		ifTrue: [winCharFormat := self combine: (Smalltalk at: #Win32apiCHARFORMAT)
																					with: (Smalltalk at: #Alien)].
	^winCharFormat! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiCHARFORMAT2

	winCharFormat2 isNil
		ifTrue: [winCharFormat2 := self combine: (Smalltalk at: #Win32apiCHARFORMAT2)
																					with: (Smalltalk at: #Alien)].
	^winCharFormat2! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiCHARRANGE

	winCharRange isNil
		ifTrue: [winCharRange := self combine: (Smalltalk at: #Win32apiCHARRANGE)
																					with: (Smalltalk at: #Alien)].
	^winCharRange! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiFINDDATA

	winFindData isNil
		ifTrue: [winFindData := self combine: (Smalltalk at: #Win32apiFINDDATA)
																					with: (Smalltalk at: #Alien)].
	^winFindData! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiGRADIENTRECT

	winGradientRect isNil
		ifTrue: [winGradientRect := self combine: (Smalltalk at: #Win32apiGRADIENTRECT)
																					with: (Smalltalk at: #Alien)].
	^winGradientRect! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiMSG

	winMsg isNil
		ifTrue: [winMsg := self combine: (Smalltalk at: #Win32apiMSG)
																					with: (Smalltalk at: #Alien)].
	^winMsg! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiMSGFILTER

	winMsgFilter isNil
		ifTrue: [winMsgFilter := self combine: (Smalltalk at: #Win32apiMSGFILTER)
																					with: (Smalltalk at: #Alien)].
	^winMsgFilter! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiNMHDR
	winNMHDR isNil
		ifTrue: [winNMHDR := self combine: (Smalltalk at: #Win32apiNMHDR)
																					with: (Smalltalk at: #Alien)].
	^winNMHDR! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiOPENFILENAME

	winOpenFilename isNil
		ifTrue: [winOpenFilename := self combine: (Smalltalk at: #Win32apiOPENFILENAME)
																					with: (Smalltalk at: #Alien)].
	^winOpenFilename! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiPAINTSTRUCT

	winPaintStruct isNil
		ifTrue: [winPaintStruct := self combine: (Smalltalk at: #Win32apiPAINTSTRUCT)
																					with: (Smalltalk at: #Alien)].
	^winPaintStruct! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiPARAFORMAT

	win32apiPARAFORMAT isNil
		ifTrue: [win32apiPARAFORMAT := self combine: (Smalltalk at: #Win32apiPARAFORMAT)
																					with: (Smalltalk at: #Alien)].
	^win32apiPARAFORMAT! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiPOINT

	winPoint isNil
		ifTrue: [winPoint := self combine: (Smalltalk at: #Win32apiPOINT)
																					with: (Smalltalk at: #Alien)].
	^winPoint! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiPROCESSINFORMATION

	winProcessInformation isNil
		ifTrue: [winProcessInformation := self combine: (Smalltalk at: #Win32apiPROCESSINFORMATION)
																					with: (Smalltalk at: #Alien)].
	^winProcessInformation! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiRECT

	winRect isNil
		ifTrue: [winRect := self combine: (Smalltalk at: #Win32apiRECT)
																					with: (Smalltalk at: #Alien)].
	^winRect! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiREQRESIZE

	winReqResize isNil
		ifTrue: [winReqResize := self combine: (Smalltalk at: #Win32apiREQRESIZE)
																					with: self Win32apiNMHDR].
	^winReqResize! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiSCROLLINFO

	winScrollInfo isNil
		ifTrue: [winScrollInfo := self combine: (Smalltalk at: #Win32apiSCROLLINFO)
																					with: (Smalltalk at: #Alien)].
	^winScrollInfo! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiSECURITYATTRIBUTES

	winSecurityAttributes isNil
		ifTrue: [winSecurityAttributes := self combine: (Smalltalk at: #Win32apiSECURITYATTRIBUTES)
																					with: (Smalltalk at: #Alien)].
	^winSecurityAttributes! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiSTARTUPINFO

	winStartupInfo isNil
		ifTrue: [winStartupInfo := self combine: (Smalltalk at: #Win32apiSTARTUPINFO)
																					with: (Smalltalk at: #Alien)].
	^winStartupInfo! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiTRACKMOUSEEVENT

	winTrackMouseEvent isNil
		ifTrue: [winTrackMouseEvent := self combine: (Smalltalk at: #Win32apiTRACKMOUSEEVENT)
																					with: (Smalltalk at: #Alien)].
	^winTrackMouseEvent! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiTRIVERTEX

	winTriVertex isNil
		ifTrue: [winTriVertex := self combine: (Smalltalk at: #Win32apiTRIVERTEX)
																					with: (Smalltalk at: #Alien)].
	^winTriVertex! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiWINDOWPOS

	winWindowPos isNil
		ifTrue: [winWindowPos := self combine: (Smalltalk at: #Win32apiWINDOWPOS)
																					with: (Smalltalk at: #Alien)].
	^winWindowPos! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiWNDCLASS
	wndClass isNil
		ifTrue: [wndClass := self combine: (Smalltalk at: #Win32apiWNDCLASS)
																					with: (Smalltalk at: #Alien)].
	^wndClass! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
Win32apiWindowProc
	windowProc isNil
		ifTrue: [windowProc := self combine: (Smalltalk at: #Win32apiWindowProc)
																					with: (Smalltalk at: #Alien)].
	^windowProc! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'classes' !
combine: subclass with: superclass

| mirror class |
mirror := (Mirror on: subclass) mixin |> (Mirror on: superclass).
class := mirror reflectee.
class mixinMetadata: subclass metadata.
class enclosingObjects: (Array with: nil).
^class
		! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Win32APIPackage) methodsFor: 'private-initialization' !
platform: aPlatform

	platform := aPlatform! !

"September 28, 2010 -> 23:11:29"!

Delta define: #WorldState as: (
(Class subclassOf: 'Object' instanceVariables: '')) !


"September 28, 2010 -> 23:11:29"!

(Delta mirrorFor: #WorldState)
comment: 
''!


"September 28, 2010 -> 23:11:29"!

Delta define: #Brazil as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' TimeStamp Brazil_ContainerClasses_slot SmallInteger GradientFillStyle lastVisitedDirectoryS Brazil_ManipulationClasses_slot Dictionary Brazil_MenuClasses_slot SeqCltnReadStream MorphicAgentFactory WeakArray Brazil_MappingClasses_slot text MorphicFontMapper Rectangle theDesktopS Brazil_ToolClasses_slot abilities plumbing visuals Brazil_AbilityClasses_slot WorldState CharacterReadWriteStream SystemScope Brazil_AreaClasses_slot ZeroDivide BrazilMappingForWin32 Brazil_VisualClasses_slot World DosFileDirectory Transcript defaultFontMapperS IdentityDictionary areas Brazil_WidgetClasses_slot Brazil_TextClasses_slot Brazil_PlumbingClasses_slot BlackMarket mapping menus widgets manipulation tools Color OrderedCollection FileDirectory containers') classVariables: 'MixinMetadata_Brazil EnclosingObjects_Brazil') !


"September 28, 2010 -> 23:11:29"!

(Delta mirrorFor: #Brazil)
comment: 
'Brazil, which is the foundation of Newspeak UI (and is indeed named after the movie), could be best described as a multi-platform logical UI and layout framework. It provides the familiar widgets (''visuals'') such as Labels, Buttons, and ListBoxes, and container visuals for combining widgets and managing their layout. Unlike the UI frameworks of Squeak or VisualWorks, Brazil does not attempt to actually implement the widgets by emulating them. Instead it functions as a ''logical UI'' layer that builds and drives the equivalent ''physical UI'' made of native artifacts of the host platform.

Copyright 2008 Cadence Design Systems, Inc.
Copyright 2009 Ryan Macnak and other contributors.
   
Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
theDesktop 
 self  theDesktopS ifNil:[ 
 self  theDesktopS: self  createTheDesktop.
].
^ self  theDesktopS.

! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
IdentityDictionary: IdentityDictionary_val IdentityDictionary := IdentityDictionary_val! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
createTheDesktop 
^ self  containers Desktop withMapping: self  currentMappingClass new.

! !

"September 28, 2010 -> 23:11:29"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
abilities: abilities_val abilities := abilities_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
lastVisitedDirectoryS ^lastVisitedDirectoryS! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
WorldState: WorldState_val WorldState := WorldState_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
text: text_val text := text_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Dictionary ^Dictionary! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
newMorphicDesktop 
^ self  containers Desktop withMapping: self  MorphicAgentFactory new.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
MorphicAgentFactory ^MorphicAgentFactory! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
WeakArray ^WeakArray! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Color ^Color! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
MappingClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MappingClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_MappingClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MappingClasses_slot := myNested.
		].
	^Brazil_MappingClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
FileDirectory ^FileDirectory! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
theDesktopS ^theDesktopS! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
SeqCltnReadStream: SeqCltnReadStream_val SeqCltnReadStream := SeqCltnReadStream_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
plumbing: plumbing_val plumbing := plumbing_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
SmallInteger: SmallInteger_val SmallInteger := SmallInteger_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
WeakArray: WeakArray_val WeakArray := WeakArray_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
AreaClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_AreaClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_slot := myNested.
		].
	^Brazil_AreaClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
WorldState ^WorldState! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
MorphicFontMapper ^MorphicFontMapper! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
SystemScope: SystemScope_val SystemScope := SystemScope_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
manipulation: manipulation_val manipulation := manipulation_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
lastVisitedDirectory 
^ self  lastVisitedDirectoryS.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Dictionary: Dictionary_val Dictionary := Dictionary_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
areas: areas_val areas := areas_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
BlackMarket: BlackMarket_val BlackMarket := BlackMarket_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
theDesktop: aDesktop 
 self  theDesktopS: aDesktop.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
MenuClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MenuClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_MenuClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MenuClasses_slot := myNested.
		].
	^Brazil_MenuClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
World ^World! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Transcript ^Transcript! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
IdentityDictionary ^IdentityDictionary! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
TimeStamp: TimeStamp_val TimeStamp := TimeStamp_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
defaultFontMapper 
 self  defaultFontMapperS ifNil:[ 
 self  defaultFontMapperS: self  MorphicFontMapper new.
].
^ self  defaultFontMapperS.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
menus: menus_val menus := menus_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
menus ^menus! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
DosFileDirectory ^DosFileDirectory! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
DosFileDirectory: DosFileDirectory_val DosFileDirectory := DosFileDirectory_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
FileDirectory: FileDirectory_val FileDirectory := FileDirectory_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
lastVisitedDirectory: aString 
 self  lastVisitedDirectoryS: aString.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
AbilityClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_AbilityClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_slot := myNested.
		].
	^Brazil_AbilityClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
GradientFillStyle: GradientFillStyle_val GradientFillStyle := GradientFillStyle_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
OrderedCollection ^OrderedCollection! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
WidgetClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_WidgetClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_slot := myNested.
		].
	^Brazil_WidgetClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
ManipulationClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_ManipulationClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_slot := myNested.
		].
	^Brazil_ManipulationClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
mapping ^mapping! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
theDesktopS: theDesktopS_val theDesktopS := theDesktopS_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
containers ^containers! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
mapping: mapping_val mapping := mapping_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
TimeStamp ^TimeStamp! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
World: World_val World := World_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
areas ^areas! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Brazil_1_init: platform 
 self defaultFontMapperS:nil.
 self theDesktopS:nil.
 self lastVisitedDirectoryS:nil.
 self Dictionary: platform collections Dictionary.
 self OrderedCollection: platform collections OrderedCollection.
 self IdentityDictionary: platform collections IdentityDictionary.
 self SeqCltnReadStream: platform streams SeqCltnReadStream.
 self CharacterReadWriteStream: platform streams CharacterReadWriteStream.
 self Transcript: platform streams TempTranscript new.
 self SmallInteger: platform blackMarket Kernel SmallInteger.
 self Rectangle: platform blackMarket Graphics Rectangle.
 self WeakArray: platform blackMarket Collections WeakArray.
 self GradientFillStyle: platform blackMarket Balloon GradientFillStyle.
 self Color: platform blackMarket Graphics Color.
 self FileDirectory: platform blackMarket Files FileDirectory.
 self DosFileDirectory: platform blackMarket Files DosFileDirectory.
 self TimeStamp: platform blackMarket Kernel TimeStamp.
 self SystemScope: platform blackMarket SystemScope SystemScope.
 self ZeroDivide: platform blackMarket Exceptions ZeroDivide.
 self MorphicFontMapper: platform blackMarket BrazilForMorphic MorphicFontMapper.
 self WorldState: platform blackMarket Morphic WorldState.
 self World: platform blackMarket World.
 self BlackMarket: platform blackMarket.
 self MorphicAgentFactory: platform blackMarket BrazilForMorphic MorphicAgentFactory.
 self BrazilMappingForWin32: platform blackMarket BrazilForWindows BrazilMappingForWin32.
 self plumbing: self  PlumbingClasses new.
 self areas: self  AreaClasses new.
 self abilities: self  AbilityClasses new.
 self manipulation: self  ManipulationClasses new.
 self mapping: self  MappingClasses new.
 self menus: self  MenuClasses new.
 self text: self  TextClasses new.
 self visuals: self  VisualClasses new.
 self widgets: self  WidgetClasses new.
 self containers: self  ContainerClasses new.
 self tools: self  ToolClasses new.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
ZeroDivide: ZeroDivide_val ZeroDivide := ZeroDivide_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
usingPlatform: platform 
 self Brazil_superInit_usingPlatform: platform.
 self Brazil_1_init: platform.
 self  visuals postInit.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
ToolClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_ToolClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_slot := myNested.
		].
	^Brazil_ToolClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
SeqCltnReadStream ^SeqCltnReadStream! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
plumbing ^plumbing! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
TextClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_TextClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_TextClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_TextClasses_slot := myNested.
		].
	^Brazil_TextClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
resetDesktop 
 self  theDesktop:nil.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
text ^text! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
GradientFillStyle ^GradientFillStyle! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
currentMappingClass 
^ self  MorphicAgentFactory.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Rectangle ^Rectangle! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
MorphicAgentFactory: MorphicAgentFactory_val MorphicAgentFactory := MorphicAgentFactory_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Brazil_superInit_usingPlatform: platform 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
ZeroDivide ^ZeroDivide! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
visuals: visuals_val visuals := visuals_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
error: str 
 self Error signal: str.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Color: Color_val Color := Color_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
flushDefaultFontMapper 
 self  defaultFontMapperS:nil.
^ self.

! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
CharacterReadWriteStream: CharacterReadWriteStream_val CharacterReadWriteStream := CharacterReadWriteStream_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
SystemScope ^SystemScope! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
abilities ^abilities! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
BrazilMappingForWin32 ^BrazilMappingForWin32! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
ContainerClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_ContainerClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_slot := myNested.
		].
	^Brazil_ContainerClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
visuals ^visuals! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
widgets ^widgets! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
CharacterReadWriteStream ^CharacterReadWriteStream! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
widgets: widgets_val widgets := widgets_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
defaultFontMapperS ^defaultFontMapperS! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
defaultFontMapperS: defaultFontMapperS_val defaultFontMapperS := defaultFontMapperS_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
VisualClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_VisualClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_slot := myNested.
		].
	^Brazil_VisualClasses_slot! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
MorphicFontMapper: MorphicFontMapper_val MorphicFontMapper := MorphicFontMapper_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
OrderedCollection: OrderedCollection_val OrderedCollection := OrderedCollection_val! !

"September 28, 2010 -> 23:11:30"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
BlackMarket ^BlackMarket! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
PlumbingClasses
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil 
			nestedMixins at: #Brazil_PlumbingClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_slot := myNested.
		].
	^Brazil_PlumbingClasses_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
lastVisitedDirectoryS: lastVisitedDirectoryS_val lastVisitedDirectoryS := lastVisitedDirectoryS_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
containers: containers_val containers := containers_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Transcript: Transcript_val Transcript := Transcript_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
manipulation ^manipulation! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
tools ^tools! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
BrazilMappingForWin32: BrazilMappingForWin32_val BrazilMappingForWin32 := BrazilMappingForWin32_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
SmallInteger ^SmallInteger! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
newWindowsDesktop 
|  mapping |
 mapping := self  BrazilMappingForWin32 platform: self  BlackMarket.
 mapping useDoubleBuffering:true.
^ self  containers Desktop withMapping: mapping agentFactory.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
Rectangle: Rectangle_val Rectangle := Rectangle_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) methodsFor: 'unclassified' !
tools: tools_val tools := tools_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil := eos ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil := mmd ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil) classSide methodsFor: 'unclassified' !
usingPlatform: platform 
^ self basicNew usingPlatform: platform.

! !

"September 28, 2010 -> 23:11:31"!

Delta define: #Brazil_ManipulationClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Brazil_ManipulationClasses_DragDropDispatcher_slot Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_slot Brazil_ManipulationClasses_AdHocMessageReceiver_slot Brazil_ManipulationClasses_DragDropSession_slot Brazil_ManipulationClasses_DropTarget_slot Brazil_ManipulationClasses_AssociationDragSource_slot Brazil_ManipulationClasses_DragSource_slot Brazil_ManipulationClasses_DragDropTracker_slot') classVariables: 'MixinMetadata_Brazil_ManipulationClasses EnclosingObjects_Brazil_ManipulationClasses') !


"September 28, 2010 -> 23:11:31"!

(Delta mirrorFor: #Brazil_ManipulationClasses)
comment: 
''!


"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
AdHocMessageReceiver
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_AdHocMessageReceiver_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_AdHocMessageReceiver.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_AdHocMessageReceiver_slot := myNested.
		].
	^Brazil_ManipulationClasses_AdHocMessageReceiver_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
DragDropDispatcher
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_DragDropDispatcher_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_DragDropDispatcher.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_DragDropDispatcher_slot := myNested.
		].
	^Brazil_ManipulationClasses_DragDropDispatcher_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
DropTarget
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_DropTarget_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_DropTarget.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_DropTarget_slot := myNested.
		].
	^Brazil_ManipulationClasses_DropTarget_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
DragDropTracker
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_DragDropTracker_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_DragDropTracker.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_DragDropTracker_slot := myNested.
		].
	^Brazil_ManipulationClasses_DragDropTracker_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
AssociationDragSource
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_AssociationDragSource_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_AssociationDragSource.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self  DragSource)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_AssociationDragSource_slot := myNested.
		].
	^Brazil_ManipulationClasses_AssociationDragSource_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
ArbitraryArityBlockWrapper
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_slot := myNested.
		].
	^Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
DragDropSession
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_DragDropSession_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_DragDropSession.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_DragDropSession_slot := myNested.
		].
	^Brazil_ManipulationClasses_DragDropSession_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
DragSource
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ManipulationClasses_DragSource_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ManipulationClasses 
			nestedMixins at: #Brazil_ManipulationClasses_DragSource.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ManipulationClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ManipulationClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ManipulationClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ManipulationClasses_DragSource_slot := myNested.
		].
	^Brazil_ManipulationClasses_DragSource_slot! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_superInit_new.
 self Brazil_ManipulationClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses := eos ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses := mmd ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:31"!

Delta define: #Brazil_ManipulationClasses_AssociationDragSource as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' association') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_AssociationDragSource EnclosingObjects_Brazil_ManipulationClasses_AssociationDragSource') !


"September 28, 2010 -> 23:11:31"!

(Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource)
comment: 
''!


"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
association ^association! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
draggedKey: newKey 
 self  association key: newKey.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
draggedKey 
^ self  association key.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
draggedValue 
^ self  association value.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_AssociationDragSource_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
draggedValue: newValue 
 self  association value: newValue.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
association: association_val association := association_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_AssociationDragSource_1_init 
 self association:(nil ->nil).
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
identifyPayloadTo: identificationReceiver 
^ identificationReceiver  try:[ 
 identificationReceiver draggingAssociation: self  association.
] or:[ 
super  identifyPayloadTo: identificationReceiver.
].

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_AssociationDragSource_superInit_new.
 self Brazil_ManipulationClasses_AssociationDragSource_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_AssociationDragSource := eos ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_AssociationDragSource := mmd ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AssociationDragSource) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:31"!

Delta define: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' block') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_ArbitraryArityBlockWrapper EnclosingObjects_Brazil_ManipulationClasses_ArbitraryArityBlockWrapper') !


"September 28, 2010 -> 23:11:31"!

(Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper)
comment: 
''!


"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
value: arg1 value: arg2 
^ self  block value:(( self Array new:2)  at:1 put: arg1; 
  at:2 put: arg2; 
 yourself).

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
valueWithArguments: arguments 
^ self  block value: arguments.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 
^ self  block value:(( self Array new:3)  at:1 put: arg1; 
  at:2 put: arg2; 
  at:3 put: arg3; 
 yourself).

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 
^ self  block value:(( self Array new:4)  at:1 put: arg1; 
  at:2 put: arg2; 
  at:3 put: arg3; 
  at:4 put: arg4; 
 yourself).

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
value: arg1 
^ self  block value:(( self Array new:1)  at:1 put: arg1; 
 yourself).

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
value 
^ self  block value:( self Array new:0).

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_1_init 
 self block:nil.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
block: block_val block := block_val! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
block ^block! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_superInit_new.
 self Brazil_ManipulationClasses_ArbitraryArityBlockWrapper_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_ArbitraryArityBlockWrapper := eos ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_ArbitraryArityBlockWrapper := mmd ! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) classSide methodsFor: 'unclassified' !
block: b 
^ self  new block: b; 
 yourself.

! !

"September 28, 2010 -> 23:11:31"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_ArbitraryArityBlockWrapper) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:32"!

Delta define: #Brazil_ManipulationClasses_DropTarget as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' entryAction exitAction dropAction visual isActive stepAction') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_DropTarget EnclosingObjects_Brazil_ManipulationClasses_DropTarget') !


"September 28, 2010 -> 23:11:32"!

(Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget)
comment: 
''!


"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
isActive: isActive_val isActive := isActive_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
exitAction: exitAction_val exitAction := exitAction_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
dropAction: dropAction_val dropAction := dropAction_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
exitAction ^exitAction! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
stepAction ^stepAction! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
entryAction: entryAction_val entryAction := entryAction_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DropTarget_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
visual ^visual! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DropTarget_1_init 
 self isActive:false.
 self visual:nil.
 self entryAction:nil.
 self exitAction:nil.
 self stepAction:nil.
 self dropAction:nil.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
dragExitFrom: source 
 self  isActive:true.
 self  exitAction ifNotNil:[ : it | 
 it reentrant value: source.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_DropTarget_superInit_new.
 self Brazil_ManipulationClasses_DropTarget_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
entryAction ^entryAction! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
dragDropFrom: source 
 self  isActive ifTrue:[ 
 self  isActive:false.
].
 self  dropAction ifNotNil:[ : it | 
 it reentrant value: source.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
stepAction: stepAction_val stepAction := stepAction_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
dragStepFrom: source 
 self  stepAction ifNotNil:[ : it | 
 it reentrant value: source.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
dragEnterFrom: source 
 self  isActive:true.
 self  entryAction ifNotNil:[ : it | 
 it reentrant value: source.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
visual: visual_val visual := visual_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
isActive ^isActive! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
dropAction ^dropAction! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) methodsFor: 'unclassified' !
cleanup 
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_DropTarget := eos ! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_DropTarget := mmd ! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DropTarget) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:32"!

Delta define: #Brazil_ManipulationClasses_DragDropSession as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' targetRegistry tracker source') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_DragDropSession EnclosingObjects_Brazil_ManipulationClasses_DragDropSession') !


"September 28, 2010 -> 23:11:32"!

(Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession)
comment: 
''!


"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
forTracker: client 
 self Brazil_ManipulationClasses_DragDropSession_superInit_forTracker: client.
 self Brazil_ManipulationClasses_DragDropSession_1_init: client.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
targetRegistry: targetRegistry_val targetRegistry := targetRegistry_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
tracker: tracker_val tracker := tracker_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragDropSession_1_init: client 
 self tracker: client.
 self source:nil.
 self targetRegistry: (EnclosingObjects_Brazil_ManipulationClasses_DragDropSession at: 2)  IdentityDictionary new.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
targetAt: key ifAbsentPut: absentBlock 
^ self  targetRegistry  at: key ifPresent:[ : e | 
nil.
] ifAbsentPut: absentBlock.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
source ^source! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
source: source_val source := source_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
targetRegistry ^targetRegistry! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragDropSession_superInit_forTracker: client 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
cleanup 
 self  targetRegistry do:[ : each | 
 each cleanup.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) methodsFor: 'unclassified' !
tracker ^tracker! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_DragDropSession := eos ! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_DragDropSession := mmd ! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropSession) classSide methodsFor: 'unclassified' !
forTracker: client 
^ self basicNew forTracker: client.

! !

"September 28, 2010 -> 23:11:32"!

Delta define: #Brazil_ManipulationClasses_DragDropTracker as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' visual currentTarget dragOrigin currentSession sourceCreationBlock') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_DragDropTracker EnclosingObjects_Brazil_ManipulationClasses_DragDropTracker') !


"September 28, 2010 -> 23:11:32"!

(Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker)
comment: 
''!


"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
startDragging 
 self  createSession.
 self  setDraggedImage.
 self  establishTarget.
 self  deliverDragStepNotification.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
dragSource 
^ self  currentSession source.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
deliverDragStepNotification 
 self  currentTarget  ifNotNil:[ : it | 
 it dragStepFrom: self  dragSource.
] ifNil:[ 
 self  dragSource dragStepOverWasteland.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
findTargetAtMousePoint 
|  where  window |
 where := self  desktop mousePoint.
 window := self  desktop windowAtPoint: where.
^ window ifNotNil:[ 
 window  findTargetForDragAt: where forSession: self  currentSession.
].

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
updateDraggedImage 
 self  visual desktop updateDraggedImagePosition.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
respondToMouseMove 
 self  dragOrigin notNil ifTrue:[ 
 self  isDragging  ifFalse:[ 
( self  isOutsideDragThreshold: self  visual mousePoint) ifTrue:[ 
 self  startDragging.
].
] ifTrue:[ 
 self  continueDragging.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
currentSession: currentSession_val currentSession := currentSession_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
visual: visual_val visual := visual_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragDropTracker_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
continueDragging 
 self  updateDraggedImage.
 self  establishTarget.
 self  deliverDragStepNotification.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
currentTarget: currentTarget_val currentTarget := currentTarget_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
respondToMouseDown 
 self  dragOrigin: self  visual mousePoint.
 self  visual grabMouse.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
dragOrigin: dragOrigin_val dragOrigin := dragOrigin_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
sourceCreationBlock: sourceCreationBlock_val sourceCreationBlock := sourceCreationBlock_val! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_DragDropTracker_superInit_new.
 self Brazil_ManipulationClasses_DragDropTracker_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragDropTracker_1_init 
 self visual:nil.
 self sourceCreationBlock:[ 
 (EnclosingObjects_Brazil_ManipulationClasses_DragDropTracker at: 1)  DragSource new.
].
 self dragOrigin:nil.
 self currentSession:nil.
 self currentTarget:nil.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
isOutsideDragThreshold: aPoint 
|  delta |
 delta := aPoint -  self  dragOrigin.
^ delta x abs > self  dragThreshold or:[ 
 delta y abs > self  dragThreshold.
].

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
respondToMouseUp 
 self  dragOrigin isNil ifFalse:[ 
 self  visual releaseMouse.
 self  isDragging ifTrue:[ 
 self  stopDragging.
].
].
 self  dragOrigin:nil.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
currentTarget ^currentTarget! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
dragOrigin ^dragOrigin! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
attachTo: aVisual 
 self  visual: aVisual.
 self  visual mouseDownAction:[ 
 self  respondToMouseDown.
]; 
 mouseMovedAction:[ 
 self  respondToMouseMove.
]; 
 mouseUpAction:[ 
 self  respondToMouseUp.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
establishTarget 
|  newTarget |
 newTarget := self  findTargetAtMousePoint.
 newTarget = self  currentTarget ifTrue:[ 
^ self.
].
 self  currentTarget ifNotNil:[ : it | 
 it dragExitFrom: self  dragSource.
].
 self  currentTarget: newTarget.
 self  currentTarget ifNotNil:[ : it | 
 it dragEnterFrom: self  dragSource.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
sourceCreationBlock ^sourceCreationBlock! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
visual ^visual! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
dragThreshold 
^5.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
clearDraggedImage 
 self  visual desktop clearDraggedImage.
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
setDraggedImage 
 self  dragSource draggedImage ifNotNil:[ : it | 
 self  visual desktop setDraggedImage: it.
].
^ self.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
isDragging 
^ self  currentSession notNil.

! !

"September 28, 2010 -> 23:11:32"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
desktop 
^ self  visual desktop.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
stopDragging 
 self  establishTarget.
 self  clearDraggedImage.
 self  currentTarget  ifNotNil:[ : it | 
 it dragDropFrom: self  dragSource.
] ifNil:[ 
 self  dragSource dragDropOverWasteland.
].
 self  currentTarget:nil.
 self  currentSession cleanup.
 self  currentSession:nil.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
currentSession ^currentSession! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) methodsFor: 'unclassified' !
createSession 
|  source |
 source := self  sourceCreationBlock value.
 source visual: self  visual.
 self  currentSession:( (EnclosingObjects_Brazil_ManipulationClasses_DragDropTracker at: 1)  DragDropSession forTracker: self).
 self  currentSession source: source.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_DragDropTracker := eos ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_DragDropTracker := mmd ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropTracker) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:33"!

Delta define: #Brazil_ManipulationClasses_DragDropDispatcher as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' targetsX') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_DragDropDispatcher EnclosingObjects_Brazil_ManipulationClasses_DragDropDispatcher') !


"September 28, 2010 -> 23:11:33"!

(Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher)
comment: 
''!


"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
includes: target 
^ self  targetsX includes: target.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
add: target 
^ self  targetsX add: target.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
findTargetForDragAt: windowRelativePoint forSession: session 
^ self  targetsX  detect:[ : each | 
 each visual windowRelativeBounds containsPoint: windowRelativePoint.
] ifNone:[ 
nil.
].

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragDropDispatcher_1_init 
 self targetsX: (EnclosingObjects_Brazil_ManipulationClasses_DragDropDispatcher at: 2)  OrderedCollection new.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragDropDispatcher_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
remove: target 
^ self  targetsX remove: target.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
targetsX: targetsX_val targetsX := targetsX_val! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
targetsX ^targetsX! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_DragDropDispatcher_superInit_new.
 self Brazil_ManipulationClasses_DragDropDispatcher_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_DragDropDispatcher := eos ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_DragDropDispatcher := mmd ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragDropDispatcher) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:33"!

Delta define: #Brazil_ManipulationClasses_DragSource as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' visualX draggedImage wastelandTarget') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_DragSource EnclosingObjects_Brazil_ManipulationClasses_DragSource') !


"September 28, 2010 -> 23:11:33"!

(Delta mirrorFor: #Brazil_ManipulationClasses_DragSource)
comment: 
''!


"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
wastelandTarget: wastelandTarget_val wastelandTarget := wastelandTarget_val! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
visualX ^visualX! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
dragStepOverWasteland 
 self  wastelandTarget ifNotNil:[ : it | 
 it dragStepFrom: self.
].
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
dragDropOverWasteland 
 self  wastelandTarget ifNotNil:[ : it | 
 it dropFrom: self.
].
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
wastelandTarget ^wastelandTarget! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
draggedImage: draggedImage_val draggedImage := draggedImage_val! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragSource_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
visual: sourceVisual 
 self  visualX: sourceVisual.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
draggedImage ^draggedImage! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
visual 
^ self  visualX.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_DragSource_1_init 
 self visualX:nil.
 self wastelandTarget:nil.
 self draggedImage:nil.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
identifyPayloadTo: identificationReceiver 
^ identificationReceiver  try:[ 
 identificationReceiver draggingGenericData: self.
] or:[ 
nil.
].

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
visualX: visualX_val visualX := visualX_val! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_DragSource_superInit_new.
 self Brazil_ManipulationClasses_DragSource_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_DragSource := eos ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_DragSource := mmd ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_DragSource) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:33"!

Delta define: #Brazil_ManipulationClasses_AdHocMessageReceiver as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' dispatchAlternative understoodSelectors') classVariables: 'MixinMetadata_Brazil_ManipulationClasses_AdHocMessageReceiver EnclosingObjects_Brazil_ManipulationClasses_AdHocMessageReceiver') !


"September 28, 2010 -> 23:11:33"!

(Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver)
comment: 
''!


"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_AdHocMessageReceiver_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
Brazil_ManipulationClasses_AdHocMessageReceiver_1_init 
 self understoodSelectors: (EnclosingObjects_Brazil_ManipulationClasses_AdHocMessageReceiver at: 2)  Dictionary new.
 self dispatchAlternative:nil.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
dispatchAlternative ^dispatchAlternative! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
try: dispatchBlock or: alternativeBlock 
 self  dispatchAlternative: alternativeBlock.
^ dispatchBlock ensure:[ 
 self  dispatchAlternative:nil.
].

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
receive: selector using: block 
( block class == (EnclosingObjects_Brazil_ManipulationClasses_AdHocMessageReceiver at: 1)  ArbitraryArityBlockWrapper or:[ 
 selector numArgs = block numArgs.
]) ifFalse:[ 
^ self Error new signal:'selector and block arity mismatch'.
].
 self  understoodSelectors  at: selector put: block.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
doesNotUnderstand: message 
|  handler |
 handler := self  understoodSelectors  at: message selector ifAbsent:[ 
^ self  dispatchAlternative  ifNotNil:[ : it | 
 self  dispatchAlternative:nil.
 it value.
] ifNil:[ 
super  doesNotUnderstand: message.
].
].
^ handler valueWithArguments: message arguments.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
understoodSelectors: understoodSelectors_val understoodSelectors := understoodSelectors_val! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
dispatchAlternative: dispatchAlternative_val dispatchAlternative := dispatchAlternative_val! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
understoodSelectors ^understoodSelectors! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) methodsFor: 'unclassified' !
new 
 self Brazil_ManipulationClasses_AdHocMessageReceiver_superInit_new.
 self Brazil_ManipulationClasses_AdHocMessageReceiver_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ManipulationClasses_AdHocMessageReceiver := eos ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ManipulationClasses_AdHocMessageReceiver := mmd ! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_ManipulationClasses_AdHocMessageReceiver) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:33"!

Delta define: #Brazil_TextClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Brazil_TextClasses_MarkedUpString_slot Brazil_TextClasses_Markup_slot Brazil_TextClasses_RangeMap_slot') classVariables: 'MixinMetadata_Brazil_TextClasses EnclosingObjects_Brazil_TextClasses') !


"September 28, 2010 -> 23:11:33"!

(Delta mirrorFor: #Brazil_TextClasses)
comment: 
'This module contains the framework for defining and working with marked-up (stylized) text, to end Brazil''s dependence on the Text class from Smalltalk.'!


"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_TextClasses) methodsFor: 'unclassified' !
Markup
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_TextClasses_Markup_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_TextClasses 
			nestedMixins at: #Brazil_TextClasses_Markup.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_TextClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_TextClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_TextClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_TextClasses_Markup_slot := myNested.
		].
	^Brazil_TextClasses_Markup_slot! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_TextClasses) methodsFor: 'unclassified' !
RangeMap
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_TextClasses_RangeMap_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_TextClasses 
			nestedMixins at: #Brazil_TextClasses_RangeMap.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_TextClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_TextClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_TextClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_TextClasses_RangeMap_slot := myNested.
		].
	^Brazil_TextClasses_RangeMap_slot! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_TextClasses) methodsFor: 'unclassified' !
Brazil_TextClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_TextClasses) methodsFor: 'unclassified' !
MarkedUpString
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_TextClasses_MarkedUpString_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_TextClasses 
			nestedMixins at: #Brazil_TextClasses_MarkedUpString.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_TextClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_TextClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_TextClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_TextClasses_MarkedUpString_slot := myNested.
		].
	^Brazil_TextClasses_MarkedUpString_slot! !

"September 28, 2010 -> 23:11:33"!

! (Delta mirrorFor: #Brazil_TextClasses) methodsFor: 'unclassified' !
Brazil_TextClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses) methodsFor: 'unclassified' !
new 
 self Brazil_TextClasses_superInit_new.
 self Brazil_TextClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_TextClasses := eos ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_TextClasses := mmd ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:34"!

Delta define: #Brazil_TextClasses_MarkedUpString as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' string markups') classVariables: 'MixinMetadata_Brazil_TextClasses_MarkedUpString EnclosingObjects_Brazil_TextClasses_MarkedUpString') !


"September 28, 2010 -> 23:11:34"!

(Delta mirrorFor: #Brazil_TextClasses_MarkedUpString)
comment: 
'This class defines String-like behavior, however the instance also keeps track of Markups associated with itself. The receiver is intended to be used as an immutable string, with the contents and the markups specified at instance creation time and never changed afterwards.'!


"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
markupsAt: index 
^ self  markups select:[ : some | 
 some includes: index.
].

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
asString 
^ self  string.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
rangesDo: block 
|  map |
 map := (EnclosingObjects_Brazil_TextClasses_MarkedUpString at: 1)  RangeMap  markups: self  markups totalSize: self  string size.
^ map rangesDo: block.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
Brazil_TextClasses_MarkedUpString_superInit_contents: theContents markups: theMarkups 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
markupsAt: index do: block 
 self  markups do:[ : each | 
( each includes: index) ifTrue:[ 
 block value: each.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
markups: markups_val markups := markups_val! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
string ^string! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
string: string_val string := string_val! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
markupChangesDo: block 
|  map |
 map := (EnclosingObjects_Brazil_TextClasses_MarkedUpString at: 1)  RangeMap  markups: self  markups totalSize: self  string size.
^ map markupChangesDo: block.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
at: index 
^ self  string at: index.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
contents: theContents markups: theMarkups 
 self  Brazil_TextClasses_MarkedUpString_superInit_contents: theContents markups: theMarkups.
 self  Brazil_TextClasses_MarkedUpString_1_init_contents: theContents markups: theMarkups.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
Brazil_TextClasses_MarkedUpString_1_init_contents: theContents markups: theMarkups 
 self string: theContents.
 self markups: theMarkups.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
markups ^markups! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) methodsFor: 'unclassified' !
size 
^ self  string size.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_TextClasses_MarkedUpString := eos ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_TextClasses_MarkedUpString := mmd ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) classSide methodsFor: 'unclassified' !
contents: string allMarkedAs: markupClass 
^ self   contents: string markups:(( self Array new:1)  at:1 put:( markupClass  from:1 size: string size); 
 yourself).

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_MarkedUpString) classSide methodsFor: 'unclassified' !
contents: theContents markups: theMarkups 
^ self basicNew  contents: theContents markups: theMarkups.

! !

"September 28, 2010 -> 23:11:34"!

Delta define: #Brazil_TextClasses_RangeMap as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' totalSize markupChangeMap markups') classVariables: 'MixinMetadata_Brazil_TextClasses_RangeMap EnclosingObjects_Brazil_TextClasses_RangeMap') !


"September 28, 2010 -> 23:11:34"!

(Delta mirrorFor: #Brazil_TextClasses_RangeMap)
comment: 
'Given a collection of markups, calculates the ranges such that the set of markups effective within each range is the same. The instances are supposed to be single-use: they compute the map as part of initialization, then only report the map (see #rangesDo:). If a map needs to be updated, create a new instance.'!


"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
populateMarkupChangeMap 
|  sentinel  starts  ends |
 self markupChangeMap: (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  OrderedCollection new.
 sentinel := (EnclosingObjects_Brazil_TextClasses_RangeMap at: 1)  Markup  from: (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  SmallInteger maxVal size:0.
 starts := (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  SeqCltnReadStream on:( self  markupStarts copyWith: sentinel).
 ends := (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  SeqCltnReadStream on:( self  markupEnds copyWith: sentinel).
1  to: self  totalSize +1 do:[ : index | 
( starts peek firstIndex = index or:[ 
 ends peek nextIndex = index.
]) ifTrue:[ 
|  added  removed |
 added := (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  OrderedCollection new.
 removed := (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  OrderedCollection new.
[ 
 starts peek firstIndex = index.
] whileTrue:[ 
 added add: starts next.
].
[ 
 ends peek nextIndex = index.
] whileTrue:[ 
 removed add: ends next.
].
 self  markupChangeMap add:(( self Array new:3)  at:1 put: index; 
  at:2 put: added asArray; 
  at:3 put: removed asArray; 
 yourself).
].
].
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
rangesDo: block 
|  start  effectiveMarkups |
 start :=1.
 effectiveMarkups := (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  OrderedCollection new.
 self  markupChangesDo:[ : index : added : removed | 
 index =1 ifFalse:[ 
 block  value: start value: index -  start value: effectiveMarkups asArray.
].
 start := index.
 effectiveMarkups addAll: added.
( added select:[ : any | 
 removed includes: any.
]) isEmpty not ifTrue:[ 
 block  value: start value:0 value: effectiveMarkups asArray.
].
 effectiveMarkups removeAll: removed.
].
 start <= self  totalSize ifTrue:[ 
 block  value: start value: self  totalSize -  start +1 value: effectiveMarkups asArray.
].
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markupChangeMap: markupChangeMap_val markupChangeMap := markupChangeMap_val! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markups: markups_val markups := markups_val! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
totalSize ^totalSize! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
Brazil_TextClasses_RangeMap_1_init_markups: theMarkups totalSize: theTotalSize 
 self markups: theMarkups.
 self totalSize: theTotalSize.
 self markupChangeMap: (EnclosingObjects_Brazil_TextClasses_RangeMap at: 2)  OrderedCollection new.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markups ^markups! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markups: theMarkups totalSize: theTotalSize 
 self  Brazil_TextClasses_RangeMap_superInit_markups: theMarkups totalSize: theTotalSize.
 self  Brazil_TextClasses_RangeMap_1_init_markups: theMarkups totalSize: theTotalSize.
 self  populateMarkupChangeMap.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markupEnds 
^ self  markups asSortedCollection:[ : a : b | 
 a nextIndex <= b nextIndex.
].

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markupChangeMap ^markupChangeMap! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
Brazil_TextClasses_RangeMap_superInit_markups: theMarkups totalSize: theTotalSize 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
totalSize: totalSize_val totalSize := totalSize_val! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markupChangesDo: block 
 self  markupChangeMap do:[ : each | 
 block valueWithArguments: each.
].
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) methodsFor: 'unclassified' !
markupStarts 
^ self  markups asSortedCollection:[ : a : b | 
 a firstIndex <= b firstIndex.
].

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_TextClasses_RangeMap := eos ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_TextClasses_RangeMap := mmd ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_RangeMap) classSide methodsFor: 'unclassified' !
markups: theMarkups totalSize: theTotalSize 
^ self basicNew  markups: theMarkups totalSize: theTotalSize.

! !

"September 28, 2010 -> 23:11:34"!

Delta define: #Brazil_TextClasses_Markup as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' firstIndex size') classVariables: 'MixinMetadata_Brazil_TextClasses_Markup EnclosingObjects_Brazil_TextClasses_Markup') !


"September 28, 2010 -> 23:11:34"!

(Delta mirrorFor: #Brazil_TextClasses_Markup)
comment: 
'This is the superclass of markups, defining the common behavior of keeping track of the character range the markup applies to. The range is usually specified as the index of the first character and the number of characters included in the range. This is the method preferred to using the first and last indices, to avoid ambiguities over whether the last index is included in the range or not. However, last index-based creation is supported as well. The class is not abstract, however it defines no useful behavior other than range tracking.'!


"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
includes: index 
^ index -  self  firstIndex  between:0 and: self  size - 1.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
Brazil_TextClasses_Markup_1_init_from: theFirstIndex size: theSize 
 self firstIndex: theFirstIndex.
 self size: theSize.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
firstIndex: firstIndex_val firstIndex := firstIndex_val! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
firstIndex ^firstIndex! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
from: theFirstIndex size: theSize 
 self  Brazil_TextClasses_Markup_superInit_from: theFirstIndex size: theSize.
 self  Brazil_TextClasses_Markup_1_init_from: theFirstIndex size: theSize.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
contains: another 
^( self  includes: another firstIndex) and:[ 
 self  includes: another lastIndex.
].

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
nextIndex 
^ self  firstIndex + self  size.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
hash 
^ self  firstIndex hash bitXor: self  size hash.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
isEmpty 
^ self  size =0.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
lastIndex 
^ self  firstIndex + self  size - 1.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
size: size_val size := size_val! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
printOn: aStream 
 aStream nextPutAll:'<'; 
 nextPutAll: self class name; 
 nextPutAll:' '; 
 print: self  firstIndex; 
 nextPutAll:'-'; 
 print: self  lastIndex; 
 nextPutAll:'>'.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
size ^size! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
Brazil_TextClasses_Markup_superInit_from: theFirstIndex size: theSize 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) methodsFor: 'unclassified' !
= another 
^ self class = another class and:[ 
 self  firstIndex = another firstIndex and:[ 
 self  size = another size.
].
].

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_TextClasses_Markup := eos ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_TextClasses_Markup := mmd ! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) classSide methodsFor: 'unclassified' !
from: startIndex to: endIndexExclusive 
^ self  from: startIndex size: endIndexExclusive -  startIndex.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) classSide methodsFor: 'unclassified' !
from: theFirstIndex size: theSize 
^ self basicNew  from: theFirstIndex size: theSize.

! !

"September 28, 2010 -> 23:11:34"!

! (Delta mirrorFor: #Brazil_TextClasses_Markup) classSide methodsFor: 'unclassified' !
from: startIndex through: endIndexInclusive 
^ self  from: startIndex size: endIndexInclusive -  startIndex +1.

! !

"September 28, 2010 -> 23:11:35"!

Delta define: #Brazil_MenuClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Brazil_MenuClasses_SeparatorItem_slot Brazil_MenuClasses_SubmenuItem_slot Brazil_MenuClasses_Menu_slot Brazil_MenuClasses_MenuItem_slot') classVariables: 'MixinMetadata_Brazil_MenuClasses EnclosingObjects_Brazil_MenuClasses') !


"September 28, 2010 -> 23:11:35"!

(Delta mirrorFor: #Brazil_MenuClasses)
comment: 
''!


"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) methodsFor: 'unclassified' !
MenuItem
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MenuClasses_MenuItem_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_MenuClasses 
			nestedMixins at: #Brazil_MenuClasses_MenuItem.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_MenuClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_MenuClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_MenuClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MenuClasses_MenuItem_slot := myNested.
		].
	^Brazil_MenuClasses_MenuItem_slot! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) methodsFor: 'unclassified' !
SeparatorItem
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MenuClasses_SeparatorItem_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_MenuClasses 
			nestedMixins at: #Brazil_MenuClasses_SeparatorItem.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_MenuClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_MenuClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_MenuClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MenuClasses_SeparatorItem_slot := myNested.
		].
	^Brazil_MenuClasses_SeparatorItem_slot! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) methodsFor: 'unclassified' !
Brazil_MenuClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) methodsFor: 'unclassified' !
Menu
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MenuClasses_Menu_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_MenuClasses 
			nestedMixins at: #Brazil_MenuClasses_Menu.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_MenuClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_MenuClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_MenuClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MenuClasses_Menu_slot := myNested.
		].
	^Brazil_MenuClasses_Menu_slot! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) methodsFor: 'unclassified' !
SubmenuItem
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MenuClasses_SubmenuItem_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_MenuClasses 
			nestedMixins at: #Brazil_MenuClasses_SubmenuItem.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_MenuClasses Mirror on: self  MenuItem)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_MenuClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_MenuClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MenuClasses_SubmenuItem_slot := myNested.
		].
	^Brazil_MenuClasses_SubmenuItem_slot! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) methodsFor: 'unclassified' !
Brazil_MenuClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) methodsFor: 'unclassified' !
new 
 self Brazil_MenuClasses_superInit_new.
 self Brazil_MenuClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MenuClasses := eos ! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MenuClasses := mmd ! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:35"!

Delta define: #Brazil_MenuClasses_Menu as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' ownerVisual items agent') classVariables: 'MixinMetadata_Brazil_MenuClasses_Menu EnclosingObjects_Brazil_MenuClasses_Menu') !


"September 28, 2010 -> 23:11:35"!

(Delta mirrorFor: #Brazil_MenuClasses_Menu)
comment: 
''!


"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
add: newItem before: existingItem 
 self  items  add: newItem before: existingItem.
 newItem menu: self.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
add: newItem afterKey: key 
|  item |
 item := self  at: key ifAbsent:[ 
nil.
].
 item isNil  ifTrue:[ 
 self  add: newItem.
] ifFalse:[ 
 self   add: newItem after: item.
].
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
respondToItemChange: anItem 
 self  agent ifNotNil:[ 
 self  agent respondToMenuChange.
].
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
items: items_val items := items_val! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 self  agent:( aMapping createAgentForMenu: self).
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
items ^items! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
agent: agent_val agent := agent_val! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
ownerVisual ^ownerVisual! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
dispatchTo: client 
 self  items do:[ : each | 
 each dispatchTo: client.
].
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
addFirst: newItem 
 self  items addFirst: newItem.
 newItem menu: self.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
detect: aBlock ifNone: failureBlock 
^ self  items  detect: aBlock ifNone: failureBlock.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
includes: anItem 
^ self  items includes: anItem.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
add: newItem 
 self  items add: newItem.
 newItem menu: self.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
add: newItem beforeKey: key 
|  item |
 item := self  at: key ifAbsent:[ 
nil.
].
 item isNil  ifTrue:[ 
 self  addFirst: newItem.
] ifFalse:[ 
 self   add: newItem before: item.
].
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
add: newItem after: existingItem 
 self  items  add: newItem after: existingItem.
 newItem menu: self.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
Brazil_MenuClasses_Menu_1_init: v 
 self ownerVisual: v.
 self items: (EnclosingObjects_Brazil_MenuClasses_Menu at: 2)  OrderedCollection new.
 self agent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
mapUsing: aMapping 
 self  agent:( aMapping createAgentForMenu: self).
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
openIn: desktop above: window 
 self  openIn: desktop at: desktop mousePoint above: window.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
at: key 
^ self  items detect:[ : some | 
 some key = key.
].

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
submenuItemsDo: aBlock 
 self  items do:[ : each | 
 each isSubmenuItem ifTrue:[ 
 aBlock value: each.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
Brazil_MenuClasses_Menu_superInit_forVisual: v 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
remove: anItem 
^ self  items remove: anItem.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
includesKey: key 
 self   detect:[ : some | 
 some key = key.
] ifNone:[ 
^false.
].
^true.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
forVisual: v 
 self Brazil_MenuClasses_Menu_superInit_forVisual: v.
 self Brazil_MenuClasses_Menu_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
remove: anItem ifAbsent: failureBlock 
^ self  items  remove: anItem ifAbsent: failureBlock.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
isMapped 
^ self  agent notNil.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
openIn: desktop at: globalTopLeft above: window 
 self  isMapped ifFalse:[ 
 self  mapUsing: desktop mapping.
].
 self  agent  openAt: globalTopLeft above: window.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
openIn: desktop at: globalTopLeft 
 self  isMapped ifFalse:[ 
 self  mapUsing: desktop mapping.
].
 self  agent openAt: globalTopLeft.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
detect: aBlock 
^ self  items detect: aBlock.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
ownerVisual: ownerVisual_val ownerVisual := ownerVisual_val! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
openIn: desktop 
 self  openIn: desktop at: desktop mousePoint.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
agent ^agent! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) methodsFor: 'unclassified' !
at: key ifAbsent: failureBlock 
^ self  items  detect:[ : some | 
 some key = key.
] ifNone: failureBlock.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MenuClasses_Menu := eos ! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MenuClasses_Menu := mmd ! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_Menu) classSide methodsFor: 'unclassified' !
new 
^ self  forVisual:nil.

! !

"September 28, 2010 -> 23:11:35"!

Delta define: #Brazil_MenuClasses_SeparatorItem as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' menu key') classVariables: 'MixinMetadata_Brazil_MenuClasses_SeparatorItem EnclosingObjects_Brazil_MenuClasses_SeparatorItem') !


"September 28, 2010 -> 23:11:35"!

(Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem)
comment: 
''!


"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
menu: menu_val menu := menu_val! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
Brazil_MenuClasses_SeparatorItem_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
menu ^menu! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
key ^key! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
key: key_val key := key_val! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
Brazil_MenuClasses_SeparatorItem_1_init 
 self menu:nil.
 self key:nil.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
isSubmenuItem 
^false.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
dispatchTo: client 
 client visitSeparatorItem: self.
^ self.

! !

"September 28, 2010 -> 23:11:35"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) methodsFor: 'unclassified' !
new 
 self Brazil_MenuClasses_SeparatorItem_superInit_new.
 self Brazil_MenuClasses_SeparatorItem_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MenuClasses_SeparatorItem := eos ! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MenuClasses_SeparatorItem := mmd ! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SeparatorItem) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:36"!

Delta define: #Brazil_MenuClasses_SubmenuItem as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' submenu') classVariables: 'MixinMetadata_Brazil_MenuClasses_SubmenuItem EnclosingObjects_Brazil_MenuClasses_SubmenuItem') !


"September 28, 2010 -> 23:11:36"!

(Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem)
comment: 
''!


"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) methodsFor: 'unclassified' !
isSubmenuItem 
^true.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) methodsFor: 'unclassified' !
submenu: submenu_val submenu := submenu_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) methodsFor: 'unclassified' !
submenu ^submenu! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) methodsFor: 'unclassified' !
dispatchTo: client 
 client visitSubmenuItem: self.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) methodsFor: 'unclassified' !
Brazil_MenuClasses_SubmenuItem_superInit_key: aSymbol label: aString action: aBlock 
super   key: aSymbol label: aString action: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) methodsFor: 'unclassified' !
Brazil_MenuClasses_SubmenuItem_1_init_key: aSymbol label: aString action: aBlock 
 self submenu:nil.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) methodsFor: 'unclassified' !
key: aSymbol label: aString action: aBlock 
 self  Brazil_MenuClasses_SubmenuItem_superInit_key: aSymbol label: aString action: aBlock.
 self  Brazil_MenuClasses_SubmenuItem_1_init_key: aSymbol label: aString action: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MenuClasses_SubmenuItem := eos ! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MenuClasses_SubmenuItem := mmd ! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) classSide methodsFor: 'unclassified' !
label: aString submenu: sm 
^( self  key:nil label: aString action:[ 
nil.
]) submenu: sm.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_SubmenuItem) classSide methodsFor: 'unclassified' !
key: aSymbol label: aString action: aBlock 
^ self basicNew  key: aSymbol label: aString action: aBlock.

! !

"September 28, 2010 -> 23:11:36"!

Delta define: #Brazil_MenuClasses_MenuItem as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' actionS labelS iconS enabled visible menu key') classVariables: 'MixinMetadata_Brazil_MenuClasses_MenuItem EnclosingObjects_Brazil_MenuClasses_MenuItem') !


"September 28, 2010 -> 23:11:36"!

(Delta mirrorFor: #Brazil_MenuClasses_MenuItem)
comment: 
''!


"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
labelS ^labelS! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
actionS ^actionS! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
key ^key! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
dispatchTo: client 
 client visitMenuItem: self.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
key: aSymbol label: aString action: aBlock 
 self  Brazil_MenuClasses_MenuItem_superInit_key: aSymbol label: aString action: aBlock.
 self  Brazil_MenuClasses_MenuItem_1_init_key: aSymbol label: aString action: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
icon: newIcon 
 self  iconS: newIcon.
 self  informMenuOfChange.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
Brazil_MenuClasses_MenuItem_1_init_key: aSymbol label: aString action: aBlock 
 self menu:nil.
 self iconS:nil.
 self key: aSymbol.
 self labelS: aString.
 self actionS: aBlock.
 self enabled:true.
 self visible:true.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
visible: visible_val visible := visible_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
action 
^ self  actionS.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
labelS: labelS_val labelS := labelS_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
icon 
^ self  iconS.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
iconS: iconS_val iconS := iconS_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
menu: menu_val menu := menu_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
enabled ^enabled! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
visible ^visible! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
enabled: enabled_val enabled := enabled_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
informMenuOfChange 
 self  menu ifNotNil:[ 
 self  menu respondToItemChange: self.
].
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
actionS: actionS_val actionS := actionS_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
key: key_val key := key_val! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
isSubmenuItem 
^false.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
label 
^ self  labelS.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
Brazil_MenuClasses_MenuItem_superInit_key: aSymbol label: aString action: aBlock 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
iconS ^iconS! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
label: newLabel 
 self  labelS: newLabel.
 self  informMenuOfChange.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) methodsFor: 'unclassified' !
menu ^menu! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MenuClasses_MenuItem := eos ! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MenuClasses_MenuItem := mmd ! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) classSide methodsFor: 'unclassified' !
label: aString action: aBlock 
^ self   key:nil label: aString action: aBlock.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_MenuClasses_MenuItem) classSide methodsFor: 'unclassified' !
key: aSymbol label: aString action: aBlock 
^ self basicNew  key: aSymbol label: aString action: aBlock.

! !

"September 28, 2010 -> 23:11:36"!

Delta define: #Brazil_PlumbingClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_slot Brazil_PlumbingClasses_ModifierKeyState_slot Brazil_PlumbingClasses_HierarchicalReporter_slot Brazil_PlumbingClasses_InformationRetriever_slot Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_slot Brazil_PlumbingClasses_Font_slot Brazil_PlumbingClasses_Outlet_slot Brazil_PlumbingClasses_BrazilWeakStorage_slot Brazil_PlumbingClasses_Gradient_slot Brazil_PlumbingClasses_Attribute_slot Brazil_PlumbingClasses_Duct_slot Brazil_PlumbingClasses_MappableHolder_slot Brazil_PlumbingClasses_MessageRecorder_slot Brazil_PlumbingClasses_Holder_slot') classVariables: 'MixinMetadata_Brazil_PlumbingClasses EnclosingObjects_Brazil_PlumbingClasses') !


"September 28, 2010 -> 23:11:36"!

(Delta mirrorFor: #Brazil_PlumbingClasses)
comment: 
''!


"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
MappableHolder
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_MappableHolder_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_MappableHolder.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self  Holder)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_MappableHolder_slot := myNested.
		].
	^Brazil_PlumbingClasses_MappableHolder_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
MessageRecorder
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_MessageRecorder_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_MessageRecorder.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_MessageRecorder_slot := myNested.
		].
	^Brazil_PlumbingClasses_MessageRecorder_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Outlet
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_Outlet_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_Outlet.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_Outlet_slot := myNested.
		].
	^Brazil_PlumbingClasses_Outlet_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Duct
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_Duct_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_Duct.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_Duct_slot := myNested.
		].
	^Brazil_PlumbingClasses_Duct_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
HierarchicalReporter
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_HierarchicalReporter_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_HierarchicalReporter.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_HierarchicalReporter_slot := myNested.
		].
	^Brazil_PlumbingClasses_HierarchicalReporter_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Gradient
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_Gradient_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_Gradient.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_Gradient_slot := myNested.
		].
	^Brazil_PlumbingClasses_Gradient_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
new 
 self Brazil_PlumbingClasses_superInit_new.
 self Brazil_PlumbingClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
InformationRetrieverUpwardInterceptor
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_slot := myNested.
		].
	^Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
InformationRetriever
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_InformationRetriever_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_InformationRetriever.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_InformationRetriever_slot := myNested.
		].
	^Brazil_PlumbingClasses_InformationRetriever_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
InformationRetrieverDownwardInterceptor
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_slot := myNested.
		].
	^Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Attribute
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_Attribute_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_Attribute.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self  MappableHolder)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_Attribute_slot := myNested.
		].
	^Brazil_PlumbingClasses_Attribute_slot! !

"September 28, 2010 -> 23:11:36"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
ModifierKeyState
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_ModifierKeyState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_ModifierKeyState.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_ModifierKeyState_slot := myNested.
		].
	^Brazil_PlumbingClasses_ModifierKeyState_slot! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
BrazilWeakStorage
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_BrazilWeakStorage_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_BrazilWeakStorage.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_BrazilWeakStorage_slot := myNested.
		].
	^Brazil_PlumbingClasses_BrazilWeakStorage_slot! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Font
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_Font_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_Font.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_Font_slot := myNested.
		].
	^Brazil_PlumbingClasses_Font_slot! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) methodsFor: 'unclassified' !
Holder
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_PlumbingClasses_Holder_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_PlumbingClasses 
			nestedMixins at: #Brazil_PlumbingClasses_Holder.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_PlumbingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_PlumbingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_PlumbingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_PlumbingClasses_Holder_slot := myNested.
		].
	^Brazil_PlumbingClasses_Holder_slot! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses := eos ! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses := mmd ! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:37"!

Delta define: #Brazil_PlumbingClasses_Outlet as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' ducts override response owner isExclusive') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_Outlet EnclosingObjects_Brazil_PlumbingClasses_Outlet') !


"September 28, 2010 -> 23:11:37"!

(Delta mirrorFor: #Brazil_PlumbingClasses_Outlet)
comment: 
''!


"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Outlet_1_init_response: aBlock owner: anObject 
 self owner: anObject.
 self ducts: (EnclosingObjects_Brazil_PlumbingClasses_Outlet at: 1)  BrazilWeakStorage new.
 self response: aBlock.
 self isExclusive:false.
 self override:nil.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Outlet_superInit_response: aBlock owner: anObject 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
detachFrom: aDuct 
 aDuct detach: self.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
addedToDuct: aDuct 
 self  ducts add: aDuct.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
override: override_val override := override_val! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
isExclusive: isExclusive_val isExclusive := isExclusive_val! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
ducts ^ducts! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
ducts: ducts_val ducts := ducts_val! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
response: response_val response := response_val! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
removedFromDuct: aDuct 
 self  ducts remove: aDuct.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
printOn: aStream 
super  printOn: aStream.
 self  owner ifNotNil:[ 
 aStream nextPutAll:' of: '; 
 print: self  owner.
].
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
overrideWith: anOutlet while: aBlock 
|  oldOverride |
 oldOverride := self  override.
 self  override: anOutlet.
^ aBlock ensure:[ 
 self  override: oldOverride.
].

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
response: aBlock owner: anObject 
 self  Brazil_PlumbingClasses_Outlet_superInit_response: aBlock owner: anObject.
 self  Brazil_PlumbingClasses_Outlet_1_init_response: aBlock owner: anObject.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
receive: packet 
|  originalOverride |
#'BOGUS' yourself.
 self  isExclusive  ifTrue:[ 
 self  override ==nil  ifTrue:[ 
 self  blockWhile:[ 
 self  response clone value: packet.
].
] ifFalse:[ 
 originalOverride := self  override.
 self  blockWhile:[ 
 originalOverride clone value: packet.
].
].
] ifFalse:[ 
 self  override ==nil  ifTrue:[ 
 self  response clone value: packet.
] ifFalse:[ 
 self  override clone value: packet.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
override ^override! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
response ^response! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
unblock 
 self  setOverride:nil.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
attachTo: aDuct 
 aDuct attach: self.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
beExclusive 
 self  isExclusive:true.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
isExclusive ^isExclusive! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
setOverride: another 
|  old |
 old := self  override.
 self  override: another.
^ old.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
block 
 self  setOverride:[ : x | 
nil.
].
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
gatherInto: gatherBlock while: aBlock 
|  received  result |
 received := (EnclosingObjects_Brazil_PlumbingClasses_Outlet at: 2)  OrderedCollection new.
 result := self  overrideWith:[ : a | 
 received add: a.
] while: aBlock.
 gatherBlock value: received.
^ result.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
blockWhile: aBlock 
^ self  overrideWith:[ : ignored | 
nil.
] while: aBlock.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
owner: owner_val owner := owner_val! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
detachFromAll 
 self  ducts copy do:[ : each | 
 self detachFrom: each.
].
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) methodsFor: 'unclassified' !
owner ^owner! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_Outlet := eos ! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_Outlet := mmd ! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) classSide methodsFor: 'unclassified' !
owner: obj 
^ self   response:[ : ignored | 
nil.
] owner: obj.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) classSide methodsFor: 'unclassified' !
response: aBlock owner: anObject 
^ self basicNew  response: aBlock owner: anObject.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Outlet) classSide methodsFor: 'unclassified' !
response: block 
^ self   response: block owner:nil.

! !

"September 28, 2010 -> 23:11:37"!

Delta define: #Brazil_PlumbingClasses_MessageRecorder as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' recordedMessages') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_MessageRecorder EnclosingObjects_Brazil_PlumbingClasses_MessageRecorder') !


"September 28, 2010 -> 23:11:37"!

(Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder)
comment: 
''!


"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) methodsFor: 'unclassified' !
recordedMessages: recordedMessages_val recordedMessages := recordedMessages_val! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) methodsFor: 'unclassified' !
doesNotUnderstand: aMessage 
 self  recordedMessages add: aMessage.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_MessageRecorder_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_MessageRecorder_1_init 
 self recordedMessages: (EnclosingObjects_Brazil_PlumbingClasses_MessageRecorder at: 2)  OrderedCollection new.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) methodsFor: 'unclassified' !
playRecordedMessagesTo: anObject 
 self  recordedMessages do:[ : each | 
 each sendTo: anObject.
].
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) methodsFor: 'unclassified' !
recordedMessages ^recordedMessages! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) methodsFor: 'unclassified' !
new 
 self Brazil_PlumbingClasses_MessageRecorder_superInit_new.
 self Brazil_PlumbingClasses_MessageRecorder_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_MessageRecorder := eos ! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_MessageRecorder := mmd ! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MessageRecorder) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:37"!

Delta define: #Brazil_PlumbingClasses_Attribute as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' defaultValue name') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_Attribute EnclosingObjects_Brazil_PlumbingClasses_Attribute') !


"September 28, 2010 -> 23:11:37"!

(Delta mirrorFor: #Brazil_PlumbingClasses_Attribute)
comment: 
''!


"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
defaultValue ^defaultValue! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Attribute_1_init_name: n value: v 
 self name: n.
 self defaultValue:nil.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
makeCurrentValueDefault 
 self  defaultValue: self value.
^ self.

! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
name: name_val name := name_val! !

"September 28, 2010 -> 23:11:37"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
isValueTheDefault 
^ self value = self  defaultValue.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
defaultValue: defaultValue_val defaultValue := defaultValue_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Attribute_superInit_name: n value: v 
super  with: v.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
name: n value: v 
 self  Brazil_PlumbingClasses_Attribute_superInit_name: n value: v.
 self  Brazil_PlumbingClasses_Attribute_1_init_name: n value: v.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) methodsFor: 'unclassified' !
name ^name! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_Attribute := eos ! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_Attribute := mmd ! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) classSide methodsFor: 'unclassified' !
name: n 
^ self   name: n value:nil.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Attribute) classSide methodsFor: 'unclassified' !
name: n value: v 
^ self basicNew  name: n value: v.

! !

"September 28, 2010 -> 23:11:38"!

Delta define: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' xyzzyParent xyzzyOwner') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor EnclosingObjects_Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor') !


"September 28, 2010 -> 23:11:38"!

(Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor)
comment: 
''!


"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_1_init 
 self xyzzyOwner:nil.
 self xyzzyParent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
 self  xyzzyOwner report:'<< childRequestsBoundsUpdate'.
^ self  xyzzyParent  child: child requestsBoundsUpdateUsing:[ : newBounds | 
 self  xyzzyOwner  report:'>> childRequestsBoundsUpdate' with: newBounds.
 continuation value: newBounds.
].

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
xyzzyOwner: xyzzyOwner_val xyzzyOwner := xyzzyOwner_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
doesNotUnderstand: aMessage 
^ aMessage sendTo: self  xyzzyParent.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
xyzzyParent ^xyzzyParent! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
xyzzyParent: xyzzyParent_val xyzzyParent := xyzzyParent_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
xyzzyOwner ^xyzzyOwner! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) methodsFor: 'unclassified' !
new 
 self Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_superInit_new.
 self Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor := eos ! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor := mmd ! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverUpwardInterceptor) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:38"!

Delta define: #Brazil_PlumbingClasses_Gradient as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' startOffsetY endFractionX startColor startFractionY startOffsetX endFractionY startFractionX endColor endOffsetX endOffsetY') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_Gradient EnclosingObjects_Brazil_PlumbingClasses_Gradient') !


"September 28, 2010 -> 23:11:38"!

(Delta mirrorFor: #Brazil_PlumbingClasses_Gradient)
comment: 
''!


"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
asFillStyleWithin: bounds 
|  start  end |
 start := self  startPointWithin: bounds.
 end := self  endPointWithin: bounds.
^( (EnclosingObjects_Brazil_PlumbingClasses_Gradient at: 2)  GradientFillStyle ramp:(( self Array new:2)  at:1 put:0 -> self  startColor; 
  at:2 put:1 -> self  endColor; 
 yourself)) radial:false; 
 origin: start; 
 direction:( end -  start).

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
from: startColorA to: endColorA 
 self  Brazil_PlumbingClasses_Gradient_superInit_from: startColorA to: endColorA.
 self  Brazil_PlumbingClasses_Gradient_1_init_from: startColorA to: endColorA.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
asColor 
^ self  startColor.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endOffsetY ^endOffsetY! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
hasTranslucentColor 
^ self  startColor isTranslucentColor or:[ 
 self  endColor isTranslucentColor.
].

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startFractionX: startFractionX_val startFractionX := startFractionX_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
beVerticalFrom: color1 to: color2 
 self  startColor: color1.
 self  startFractionX:0.
 self  startFractionY:0.
 self  startOffsetX:0.
 self  startOffsetY:0.
 self  endColor: color2.
 self  endFractionX:0.
 self  endOffsetX:0.
 self  endFractionY:1.
 self  endOffsetY:0.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endOffsetY: endOffsetY_val endOffsetY := endOffsetY_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startFractionX ^startFractionX! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endOffsetX ^endOffsetX! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startPointWithin: bounds 
|  x  y |
 x := bounds width * self  startFractionX + self  startOffsetX + bounds left.
 y := bounds height * self  startFractionY + self  startOffsetY + bounds top.
^ x rounded @ y rounded.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startColor: startColor_val startColor := startColor_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startColor ^startColor! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startFractionY ^startFractionY! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startOffsetY ^startOffsetY! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startFractionY: startFractionY_val startFractionY := startFractionY_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endFractionX ^endFractionX! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endOffsetX: endOffsetX_val endOffsetX := endOffsetX_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endColor: endColor_val endColor := endColor_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
isGradient 
^true.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endFractionX: endFractionX_val endFractionX := endFractionX_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startOffsetX ^startOffsetX! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endFractionY ^endFractionY! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
beHorizontalFrom: color1 to: color2 
 self  startColor: color1.
 self  startFractionX:0.
 self  startFractionY:0.
 self  startOffsetX:0.
 self  startOffsetY:0.
 self  endColor: color2.
 self  endFractionX:1.
 self  endOffsetX:0.
 self  endFractionY:0.
 self  endOffsetY:0.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endColor ^endColor! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Gradient_1_init_from: startColorA to: endColorA 
 self startColor: startColorA.
 self startFractionX:0.
 self startFractionY:0.
 self startOffsetX:0.
 self startOffsetY:0.
 self endColor: endColorA.
 self endFractionX:0.
 self endOffsetX:0.
 self endFractionY:1.
 self endOffsetY:0.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startOffsetX: startOffsetX_val startOffsetX := startOffsetX_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
startOffsetY: startOffsetY_val startOffsetY := startOffsetY_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endPointWithin: bounds 
|  x  y |
 x := bounds width * self  endFractionX + self  endOffsetX + bounds left.
 y := bounds height * self  endFractionY + self  endOffsetY + bounds top.
^ x rounded @ y rounded.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
endFractionY: endFractionY_val endFractionY := endFractionY_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Gradient_superInit_from: startColorA to: endColorA 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_Gradient := eos ! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_Gradient := mmd ! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) classSide methodsFor: 'unclassified' !
from: startColorA to: endColorA 
^ self basicNew  from: startColorA to: endColorA.

! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Gradient) classSide methodsFor: 'unclassified' !
new 
^ self   from: (EnclosingObjects_Brazil_PlumbingClasses_Gradient at: 2)  Color white to: (EnclosingObjects_Brazil_PlumbingClasses_Gradient at: 2)  Color black.

! !

"September 28, 2010 -> 23:11:38"!

Delta define: #Brazil_PlumbingClasses_ModifierKeyState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' altPressed controlPressed shiftPressed') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_ModifierKeyState EnclosingObjects_Brazil_PlumbingClasses_ModifierKeyState') !


"September 28, 2010 -> 23:11:38"!

(Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState)
comment: 
''!


"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
shiftPressed: shiftPressed_val shiftPressed := shiftPressed_val! !

"September 28, 2010 -> 23:11:38"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
altPressed ^altPressed! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
controlPressed: controlPressed_val controlPressed := controlPressed_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
controlPressed ^controlPressed! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
shiftPressed ^shiftPressed! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
altPressed: altPressed_val altPressed := altPressed_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_ModifierKeyState_1_init 
 self shiftPressed:false.
 self controlPressed:false.
 self altPressed:false.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
optionPressed 
^ self  altPressed.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_ModifierKeyState_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) methodsFor: 'unclassified' !
new 
 self Brazil_PlumbingClasses_ModifierKeyState_superInit_new.
 self Brazil_PlumbingClasses_ModifierKeyState_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_ModifierKeyState := eos ! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_ModifierKeyState := mmd ! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_ModifierKeyState) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:39"!

Delta define: #Brazil_PlumbingClasses_Duct as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' override owner isExclusive outlets') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_Duct EnclosingObjects_Brazil_PlumbingClasses_Duct') !


"September 28, 2010 -> 23:11:39"!

(Delta mirrorFor: #Brazil_PlumbingClasses_Duct)
comment: 
''!


"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
privateSendBlocked: packet 
 self  override ==nil  ifTrue:[ 
 self  blockWhile:[ 
 self  outlets copy do:[ : each | 
 each receive: packet.
].
].
] ifFalse:[ 
|  originalOverride |
 originalOverride := self  override.
 self  blockWhile:[ 
 originalOverride clone value: packet.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
override: override_val override := override_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
isOverridden 
^ self  override notNil.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
overrideWith: overrideBlock while: aBlock 
|  oldOverride |
 oldOverride := self  override.
 self  override: overrideBlock.
^ aBlock ensure:[ 
 self  override: oldOverride.
].

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
isExclusive: isExclusive_val isExclusive := isExclusive_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
detach: anOutlet 
 self  outlets remove: anOutlet.
 anOutlet removedFromDuct: self.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
beWeak 
 self  outlets: (EnclosingObjects_Brazil_PlumbingClasses_Duct at: 1)  BrazilWeakStorage new.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
=> block 
|  outlet |
 outlet := (EnclosingObjects_Brazil_PlumbingClasses_Duct at: 1)  Outlet response: block.
 self attach: outlet.
^ outlet.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
attachOutletsOf: anotherDuct 
 anotherDuct outlets do:[ : each | 
 self  attach: each.
].
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Duct_1_init 
 self owner:nil.
 self outlets: (EnclosingObjects_Brazil_PlumbingClasses_Duct at: 2)  OrderedCollection new.
 self isExclusive:false.
 self override:nil.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
printOn: aStream 
super  printOn: aStream.
 self  owner ifNotNil:[ 
 aStream nextPutAll:' of: '; 
 print: self  owner.
].
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
send: packet 
 self  isExclusive  ifTrue:[ 
 self  privateSendBlocked: packet.
] ifFalse:[ 
 self  privateSendUnblocked: packet.
].
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
block 
 self  setOverride:[ : x | 
nil.
].
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
privateSendUnblocked: packet 
 self  override ==nil  ifTrue:[ 
 self  outlets clone do:[ : each | 
 each receive: packet.
].
] ifFalse:[ 
 self  override clone value: packet.
].
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
new 
 self Brazil_PlumbingClasses_Duct_superInit_new.
 self Brazil_PlumbingClasses_Duct_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
owner: owner_val owner := owner_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
override ^override! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
outlets ^outlets! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
unblock 
 self  setOverride:nil.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
beExclusive 
 self  isExclusive:true.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
outlets: outlets_val outlets := outlets_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Duct_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
setOverride: aBlock 
|  original |
 original := self  override.
 self  override: aBlock.
^ original.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
attach: anOutlet 
 self  outlets add: anOutlet.
 anOutlet addedToDuct: self.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
detachAll 
 self  outlets copy do:[ : each | 
 self  detach: each.
].
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
gatherInto: summaryBlock while: aBlock 
|  things  blockResult |
 things := (EnclosingObjects_Brazil_PlumbingClasses_Duct at: 2)  OrderedCollection new.
 blockResult := self   overrideWith:[ : a | 
 things add: a.
] while: aBlock.
 summaryBlock value: things.
^ blockResult.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
blockWhile: aBlock 
^ self  overrideWith:[ : ignored | 
nil.
] while: aBlock.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
takeOverOutletsOf: anotherDuct 
 anotherDuct outlets do:[ : each | 
 self  attach: each.
].
 anotherDuct detachAll.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
isExclusive ^isExclusive! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
owner ^owner! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
on: expected do: aBlock 
#'BOGUS' yourself.
^ self =>[ : event | 
 event = expected ifTrue:[ 
 aBlock value.
].
].

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) methodsFor: 'unclassified' !
transformedUsing: transformerBlock 
|  duct |
 duct := (EnclosingObjects_Brazil_PlumbingClasses_Duct at: 1)  Duct new.
 duct owner:( self =>[ : sentValue | 
 duct send:( transformerBlock value: sentValue).
]).
^ duct.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_Duct := eos ! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_Duct := mmd ! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) classSide methodsFor: 'unclassified' !
owner: anObject 
^ self new owner: anObject.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Duct) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:39"!

Delta define: #Brazil_PlumbingClasses_InformationRetriever as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' downwardInterceptor upwardInterceptor') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_InformationRetriever EnclosingObjects_Brazil_PlumbingClasses_InformationRetriever') !


"September 28, 2010 -> 23:11:39"!

(Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever)
comment: 
''!


"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
upwardInterceptor: upwardInterceptor_val upwardInterceptor := upwardInterceptor_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
report: message with: arg 
 (EnclosingObjects_Brazil_PlumbingClasses_InformationRetriever at: 2)  Transcript cr; 
 nextPutAll: message; 
 nextPutAll:': '; 
 print: arg; 
 flush.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
upwardInterceptor ^upwardInterceptor! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
report: message 
 (EnclosingObjects_Brazil_PlumbingClasses_InformationRetriever at: 2)  Transcript cr; 
 nextPutAll: message; 
 flush.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_InformationRetriever_superInit_parent: parent child: child 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
downwardInterceptor ^downwardInterceptor! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
downwardInterceptor: downwardInterceptor_val downwardInterceptor := downwardInterceptor_val! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
parent: parent child: child 
 self  Brazil_PlumbingClasses_InformationRetriever_superInit_parent: parent child: child.
 self  Brazil_PlumbingClasses_InformationRetriever_1_init_parent: parent child: child.
 self  upwardInterceptor:( (EnclosingObjects_Brazil_PlumbingClasses_InformationRetriever at: 1)  InformationRetrieverUpwardInterceptor new xyzzyOwner: self; 
 xyzzyParent: parent).
 self  downwardInterceptor:( (EnclosingObjects_Brazil_PlumbingClasses_InformationRetriever at: 1)  InformationRetrieverDownwardInterceptor new xyzzyOwner: self; 
 xyzzyChild: child).
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_InformationRetriever_1_init_parent: parent child: child 
 self upwardInterceptor:nil.
 self downwardInterceptor:nil.
^ self.

! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_InformationRetriever := eos ! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_InformationRetriever := mmd ! !

"September 28, 2010 -> 23:11:39"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetriever) classSide methodsFor: 'unclassified' !
parent: parent child: child 
^ self basicNew  parent: parent child: child.

! !

"September 28, 2010 -> 23:11:40"!

Delta define: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' xyzzyChild xyzzzyOnwer') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor EnclosingObjects_Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor') !


"September 28, 2010 -> 23:11:40"!

(Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor)
comment: 
''!


"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
xyzzzyOnwer: xyzzzyOnwer_val xyzzzyOnwer := xyzzzyOnwer_val! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
doesNotUnderstand: aMessage 
^ aMessage sendTo: self  xyzzyChild.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
xyzzyChild: xyzzyChild_val xyzzyChild := xyzzyChild_val! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
xyzzyChild ^xyzzyChild! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_1_init 
 self xyzzzyOnwer:nil.
 self xyzzyChild:nil.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
xyzzzyOnwer ^xyzzzyOnwer! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) methodsFor: 'unclassified' !
new 
 self Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_superInit_new.
 self Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor := eos ! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor := mmd ! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_InformationRetrieverDownwardInterceptor) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:40"!

Delta define: #Brazil_PlumbingClasses_MappableHolder as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' mappingUpdateBlock updateInProgress') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_MappableHolder EnclosingObjects_Brazil_PlumbingClasses_MappableHolder') !


"September 28, 2010 -> 23:11:40"!

(Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder)
comment: 
''!


"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
unmap 
 self  mappingUpdateBlock:[ : newValue | 
nil.
].
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
updateInProgress: updateInProgress_val updateInProgress := updateInProgress_val! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
acceptValueFromMapping: anObject 
 self  updateInProgress ifFalse:[ 
 self changingS ifNotNil:[ 
 self changingS send: anObject.
].
].
 self valueS: anObject.
 self  updateInProgress ifFalse:[ 
 self changedS ifNotNil:[ 
 self changedS send: anObject.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_MappableHolder_superInit_with: obj 
super  with: obj.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
value: anObject 
 self changingS ifNotNil:[ 
 self changingS send: anObject.
].
 self valueS: anObject.
 self  updateMapping.
 self changedS ifNotNil:[ 
 self changedS send: anObject.
].
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
updateMapping 
|  oldState |
 oldState := self  updateInProgress.
 self  updateInProgress:true.
^[ 
 self  mappingUpdateBlock reentrant value: self valueS.
] ensure:[ 
 self  updateInProgress: oldState.
].

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
updateInProgress ^updateInProgress! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
mappingUpdateBlock: mappingUpdateBlock_val mappingUpdateBlock := mappingUpdateBlock_val! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
mapTo: aBlock 
 self  mappingUpdateBlock: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_MappableHolder_1_init: obj 
 self updateInProgress:false.
 self mappingUpdateBlock:[ : newValue | 
nil.
].
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
with: obj 
 self Brazil_PlumbingClasses_MappableHolder_superInit_with: obj.
 self Brazil_PlumbingClasses_MappableHolder_1_init: obj.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
mappingUpdateBlock ^mappingUpdateBlock! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) methodsFor: 'unclassified' !
value: anObject beforeChanged: aBlock 
 self changingS ifNotNil:[ 
 self changingS send: anObject.
].
 self valueS: anObject.
 self  updateMapping.
 aBlock value: anObject.
 self changedS ifNotNil:[ 
 self changedS send: anObject.
].
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_MappableHolder := eos ! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_MappableHolder := mmd ! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) classSide methodsFor: 'unclassified' !
with: obj 
^ self basicNew with: obj.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_MappableHolder) classSide methodsFor: 'unclassified' !
new 
^ self  with:nil.

! !

"September 28, 2010 -> 23:11:40"!

Delta define: #Brazil_PlumbingClasses_Font as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' sizeX') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_Font EnclosingObjects_Brazil_PlumbingClasses_Font') !


"September 28, 2010 -> 23:11:40"!

(Delta mirrorFor: #Brazil_PlumbingClasses_Font)
comment: 
''!


"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) methodsFor: 'unclassified' !
sizeX ^sizeX! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) methodsFor: 'unclassified' !
size: n 
 self Brazil_PlumbingClasses_Font_superInit_size: n.
 self Brazil_PlumbingClasses_Font_1_init: n.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Font_1_init: n 
 self sizeX: n.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) methodsFor: 'unclassified' !
sizeX: sizeX_val sizeX := sizeX_val! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Font_superInit_size: n 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_Font := eos ! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_Font := mmd ! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
large 
^ self  size:4.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
size: n 
^ self basicNew size: n.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
tiny 
^ self  size:1.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
small 
^ self  size:2.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
huge 
^ self  size:5.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Font) classSide methodsFor: 'unclassified' !
normal 
^ self  size:3.

! !

"September 28, 2010 -> 23:11:40"!

Delta define: #Brazil_PlumbingClasses_Holder as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' changingS valueS changedS') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_Holder EnclosingObjects_Brazil_PlumbingClasses_Holder') !


"September 28, 2010 -> 23:11:40"!

(Delta mirrorFor: #Brazil_PlumbingClasses_Holder)
comment: 
''!


"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
changingS: changingS_val changingS := changingS_val! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
changedS ^changedS! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
valueS: valueS_val valueS := valueS_val! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Holder_superInit_with: obj 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
changingS ^changingS! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
changed 
^ self  changedS ifNil:[ 
 self  changedS:( (EnclosingObjects_Brazil_PlumbingClasses_Holder at: 1)  Duct owner: self).
 self  changedS.
].

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
with: obj 
 self Brazil_PlumbingClasses_Holder_superInit_with: obj.
 self Brazil_PlumbingClasses_Holder_1_init: obj.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_Holder_1_init: obj 
 self valueS: obj.
 self changingS:nil.
 self changedS:nil.
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
valueS ^valueS! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
value: anObject 
 self  changingS ifNotNil:[ 
 self  changingS send: anObject.
].
 self  valueS: anObject.
 self  changedS ifNotNil:[ 
 self  changedS send: anObject.
].
^ self.

! !

"September 28, 2010 -> 23:11:40"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
changing 
^ self  changingS ifNil:[ 
 self  changingS:( (EnclosingObjects_Brazil_PlumbingClasses_Holder at: 1)  Duct owner: self).
 self  changingS.
].

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
value 
^ self  valueS.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
printOn: aStream 
super  printOn: aStream.
 aStream space; 
 print: self  value.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
changedS: changedS_val changedS := changedS_val! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
quietlySetValue: newValue 
 self  valueS: newValue.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) methodsFor: 'unclassified' !
value: anObject beforeChanged: aBlock 
 self  changingS ifNotNil:[ 
 self  changingS send: anObject.
].
 self  valueS: anObject.
 aBlock value.
 self  changedS ifNotNil:[ 
 self  changedS send: anObject.
].
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_Holder := eos ! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_Holder := mmd ! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) classSide methodsFor: 'unclassified' !
with: obj 
^ self basicNew with: obj.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_Holder) classSide methodsFor: 'unclassified' !
new 
^ self  with:nil.

! !

"September 28, 2010 -> 23:11:41"!

Delta define: #Brazil_PlumbingClasses_HierarchicalReporter as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' stream currentIndent') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_HierarchicalReporter EnclosingObjects_Brazil_PlumbingClasses_HierarchicalReporter') !


"September 28, 2010 -> 23:11:41"!

(Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter)
comment: 
''!


"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_HierarchicalReporter_1_init: stm 
 self stream: stm.
 self currentIndent:0.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
indentStep 
^1.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
contents 
^ self  stream contents.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
stream: stream_val stream := stream_val! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
decreaseIndent 
 self  currentIndent:( self  currentIndent -  self  indentStep).
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
space 
 self  stream space.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
print: anObject 
 self  stream print: anObject.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
currentIndent: currentIndent_val currentIndent := currentIndent_val! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
on: stm 
 self Brazil_PlumbingClasses_HierarchicalReporter_superInit_on: stm.
 self Brazil_PlumbingClasses_HierarchicalReporter_1_init: stm.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
cr 
 self  stream cr.
 self  printIndent.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
nextPutAll: aString 
 self  stream nextPutAll: aString.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
currentIndent ^currentIndent! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
stream ^stream! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
printIndent 
 self  stream  next: self  currentIndent put: self Character tab.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
increaseIndent 
 self  currentIndent:( self  currentIndent + self  indentStep).
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
flush 
 self  stream flush.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
nextPut: aCharacter 
 self  stream nextPutAll: aCharacter.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_HierarchicalReporter_superInit_on: stm 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_HierarchicalReporter := eos ! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_HierarchicalReporter := mmd ! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) classSide methodsFor: 'unclassified' !
on: stm 
^ self basicNew on: stm.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_HierarchicalReporter) classSide methodsFor: 'unclassified' !
new 
^ self  on:( (EnclosingObjects_Brazil_PlumbingClasses_HierarchicalReporter at: 2)  CharacterReadWriteStream on: self String new).

! !

"September 28, 2010 -> 23:11:41"!

Delta define: #Brazil_PlumbingClasses_BrazilWeakStorage as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' storage lastUsedIndex') classVariables: 'MixinMetadata_Brazil_PlumbingClasses_BrazilWeakStorage EnclosingObjects_Brazil_PlumbingClasses_BrazilWeakStorage') !


"September 28, 2010 -> 23:11:41"!

(Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage)
comment: 
''!


"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_BrazilWeakStorage_1_init 
 self storage:( (EnclosingObjects_Brazil_PlumbingClasses_BrazilWeakStorage at: 2)  WeakArray new:5).
 self lastUsedIndex:0.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
includes: anObject 
^( self  storage indexOf: anObject) >0.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
add: anObject 
 self  findAvailableIndex.
^ self  storage  at: self  lastUsedIndex put: anObject.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
lastUsedIndex ^lastUsedIndex! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
removeAll 
 self  storage:( (EnclosingObjects_Brazil_PlumbingClasses_BrazilWeakStorage at: 2)  WeakArray new:5).
 self  lastUsedIndex:0.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
lastUsedIndex: lastUsedIndex_val lastUsedIndex := lastUsedIndex_val! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
storage ^storage! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
storage: storage_val storage := storage_val! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
isEmpty 
^ self  size =0.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
remove: anObject 
|  index |
 index := self  storage indexOf: anObject.
 index >0 ifTrue:[ 
 self  storage  at: index put:nil.
].
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
findAvailableIndex 
|  limit  newStorage |
 self  lastUsedIndex:( self  lastUsedIndex +1).
( self  lastUsedIndex <= self  storage size and:[ 
( self  storage at: self  lastUsedIndex) isNil.
]) ifTrue:[ 
^ self  lastUsedIndex.
].
 self  lastUsedIndex:1.
 limit := self  storage size.
[ 
 self  lastUsedIndex <= limit.
] whileTrue:[ 
( self  storage at: self  lastUsedIndex) isNil ifTrue:[ 
^ self  lastUsedIndex.
].
 self  lastUsedIndex:( self  lastUsedIndex +1).
].
 newStorage := (EnclosingObjects_Brazil_PlumbingClasses_BrazilWeakStorage at: 2)  WeakArray new:( self  storage size +( self  storage size min:100)).
 newStorage  replaceFrom:1 to: self  storage size with: self  storage startingAt:1.
 self  storage: newStorage.
^ self  lastUsedIndex.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
do: aBlock 
 self  storage do:[ : each | 
 each ifNotNil:[ 
 aBlock value: each.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
size 
^ self  storage  inject:0 into:[ : size : each | 
 size +( each isNil  ifTrue:[ 
0.
] ifFalse:[ 
1.
]).
].

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
Brazil_PlumbingClasses_BrazilWeakStorage_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) methodsFor: 'unclassified' !
new 
 self Brazil_PlumbingClasses_BrazilWeakStorage_superInit_new.
 self Brazil_PlumbingClasses_BrazilWeakStorage_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_PlumbingClasses_BrazilWeakStorage := eos ! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_PlumbingClasses_BrazilWeakStorage := mmd ! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_PlumbingClasses_BrazilWeakStorage) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:41"!

Delta define: #Brazil_ToolClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Menu ListBox Button CellWidthEqualizer Brazil_ToolClasses_FilePickerDirectoryPanel_slot Blank Brazil_ToolClasses_FilePicker_slot Label TextView Brazil_ToolClasses_MessageBox_slot VerticalViewport Row Brazil_ToolClasses_AbstractFileDialog_slot Column Brazil_ToolClasses_DirectoryPicker_slot HorizontalViewport Holder Window MenuItem Desktop TextDisplay Brazil_ToolClasses_BrazilDirectorySelector_slot Brazil_ToolClasses_BrazilInspector_slot Brazil_ToolClasses_BrazilFileSelector_slot Brazil_ToolClasses_NewFilePicker_slot Brazil_ToolClasses_Prompter_slot Brazil_ToolClasses_FilePickerFilePanel_slot') classVariables: 'MixinMetadata_Brazil_ToolClasses EnclosingObjects_Brazil_ToolClasses') !


"September 28, 2010 -> 23:11:41"!

(Delta mirrorFor: #Brazil_ToolClasses)
comment: 
''!


"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Label: Label_val Label := Label_val! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
ListBox ^ListBox! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
MessageBox
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_MessageBox_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_MessageBox.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_MessageBox_slot := myNested.
		].
	^Brazil_ToolClasses_MessageBox_slot! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Menu: Menu_val Menu := Menu_val! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
CellWidthEqualizer ^CellWidthEqualizer! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
FilePicker
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_FilePicker_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_FilePicker.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self  AbstractFileDialog)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_FilePicker_slot := myNested.
		].
	^Brazil_ToolClasses_FilePicker_slot! !

"September 28, 2010 -> 23:11:41"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
ListBox: ListBox_val ListBox := ListBox_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
MenuItem: MenuItem_val MenuItem := MenuItem_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Label ^Label! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Column: Column_val Column := Column_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Row ^Row! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Prompter
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_Prompter_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_Prompter.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self  MessageBox)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_Prompter_slot := myNested.
		].
	^Brazil_ToolClasses_Prompter_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_superInit_new.
 self Brazil_ToolClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
TextView: TextView_val TextView := TextView_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
TextDisplay: TextDisplay_val TextDisplay := TextDisplay_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
DirectoryPicker
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_DirectoryPicker_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_DirectoryPicker.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self  AbstractFileDialog)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_DirectoryPicker_slot := myNested.
		].
	^Brazil_ToolClasses_DirectoryPicker_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
AbstractFileDialog
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_AbstractFileDialog_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_AbstractFileDialog.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_AbstractFileDialog_slot := myNested.
		].
	^Brazil_ToolClasses_AbstractFileDialog_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Menu ^Menu! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
BrazilDirectorySelector
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_BrazilDirectorySelector_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_BrazilDirectorySelector.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self  BrazilFileSelector)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_BrazilDirectorySelector_slot := myNested.
		].
	^Brazil_ToolClasses_BrazilDirectorySelector_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Window: Window_val Window := Window_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
BrazilFileSelector
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_BrazilFileSelector_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_BrazilFileSelector.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_BrazilFileSelector_slot := myNested.
		].
	^Brazil_ToolClasses_BrazilFileSelector_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Row: Row_val Row := Row_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Holder: Holder_val Holder := Holder_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
MenuItem ^MenuItem! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Button ^Button! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Desktop ^Desktop! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
FilePickerFilePanel
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_FilePickerFilePanel_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_FilePickerFilePanel.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_FilePickerFilePanel_slot := myNested.
		].
	^Brazil_ToolClasses_FilePickerFilePanel_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Brazil_ToolClasses_1_init 
 self Button: (EnclosingObjects_Brazil_ToolClasses at: 1)  widgets Button.
 self Menu: (EnclosingObjects_Brazil_ToolClasses at: 1)  menus Menu.
 self MenuItem: (EnclosingObjects_Brazil_ToolClasses at: 1)  menus MenuItem.
 self Desktop: (EnclosingObjects_Brazil_ToolClasses at: 1)  containers Desktop.
 self Row: (EnclosingObjects_Brazil_ToolClasses at: 1)  containers Row.
 self CellWidthEqualizer: (EnclosingObjects_Brazil_ToolClasses at: 1)  areas CellWidthEqualizer.
 self Column: (EnclosingObjects_Brazil_ToolClasses at: 1)  containers Column.
 self HorizontalViewport: (EnclosingObjects_Brazil_ToolClasses at: 1)  containers HorizontalViewport.
 self TextView: (EnclosingObjects_Brazil_ToolClasses at: 1)  widgets TextView.
 self Window: (EnclosingObjects_Brazil_ToolClasses at: 1)  containers Window.
 self Holder: (EnclosingObjects_Brazil_ToolClasses at: 1)  plumbing Holder.
 self ListBox: (EnclosingObjects_Brazil_ToolClasses at: 1)  widgets ListBox.
 self Label: (EnclosingObjects_Brazil_ToolClasses at: 1)  widgets Label.
 self VerticalViewport: (EnclosingObjects_Brazil_ToolClasses at: 1)  containers VerticalViewport.
 self Blank: (EnclosingObjects_Brazil_ToolClasses at: 1)  widgets Blank.
 self TextDisplay: (EnclosingObjects_Brazil_ToolClasses at: 1)  widgets TextDisplay.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
FilePickerDirectoryPanel
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_FilePickerDirectoryPanel_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_FilePickerDirectoryPanel.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_FilePickerDirectoryPanel_slot := myNested.
		].
	^Brazil_ToolClasses_FilePickerDirectoryPanel_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Blank ^Blank! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
VerticalViewport ^VerticalViewport! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
TextView ^TextView! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
CellWidthEqualizer: CellWidthEqualizer_val CellWidthEqualizer := CellWidthEqualizer_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Column ^Column! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Desktop: Desktop_val Desktop := Desktop_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
HorizontalViewport ^HorizontalViewport! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Holder ^Holder! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Window ^Window! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
HorizontalViewport: HorizontalViewport_val HorizontalViewport := HorizontalViewport_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Blank: Blank_val Blank := Blank_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
VerticalViewport: VerticalViewport_val VerticalViewport := VerticalViewport_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
TextDisplay ^TextDisplay! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Button: Button_val Button := Button_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
NewFilePicker
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_NewFilePicker_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_NewFilePicker.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self  AbstractFileDialog)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_NewFilePicker_slot := myNested.
		].
	^Brazil_ToolClasses_NewFilePicker_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
BrazilInspector
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ToolClasses_BrazilInspector_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ToolClasses 
			nestedMixins at: #Brazil_ToolClasses_BrazilInspector.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ToolClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ToolClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ToolClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ToolClasses_BrazilInspector_slot := myNested.
		].
	^Brazil_ToolClasses_BrazilInspector_slot! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) methodsFor: 'unclassified' !
Brazil_ToolClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses := eos ! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses := mmd ! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:42"!

Delta define: #Brazil_ToolClasses_FilePickerDirectoryPanel as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' includeFiles directory list fileFilterX') classVariables: 'MixinMetadata_Brazil_ToolClasses_FilePickerDirectoryPanel EnclosingObjects_Brazil_ToolClasses_FilePickerDirectoryPanel') !


"September 28, 2010 -> 23:11:42"!

(Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
includeFiles ^includeFiles! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
selectEntryNamed: name 
|  entry |
 entry := self  list list  detect:[ : some | 
 some name = name.
] ifNone:[ 
^ self.
].
 self  list select: entry.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
doubleClickAction: aBlock 
 self  list doubleClickAction: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
fileFilter: newFilter 
 self  fileFilterX: newFilter.
 self  list ifNotNil:[ 
 self  populateList.
].
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
createVisual 
 self  list: (EnclosingObjects_Brazil_ToolClasses_FilePickerDirectoryPanel at: 1)  ListBox new.
 self  list displayBlock: self  fileDisplayBlock.
 self  populateList.
^ self  list.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
Brazil_ToolClasses_FilePickerDirectoryPanel_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
fileFilter 
^ self  fileFilterX.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
Brazil_ToolClasses_FilePickerDirectoryPanel_1_init 
 self directory:nil.
 self fileFilterX:nil.
 self includeFiles:nil.
 self list:nil.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
list: list_val list := list_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
includeFiles: includeFiles_val includeFiles := includeFiles_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
visual 
 self  list isNil ifTrue:[ 
 self  createVisual.
].
^ self  list.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
directory ^directory! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_FilePickerDirectoryPanel_superInit_new.
 self Brazil_ToolClasses_FilePickerDirectoryPanel_1_init.
 self  fileFilterX:'*'.
 self  includeFiles:true.
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
populateList 
|  directories  files  sortBlock |
 directories := (EnclosingObjects_Brazil_ToolClasses_FilePickerDirectoryPanel at: 2)  OrderedCollection new.
 files := (EnclosingObjects_Brazil_ToolClasses_FilePickerDirectoryPanel at: 2)  OrderedCollection new.
 self  directory entries do:[ : each | 
( each isDirectory  ifTrue:[ 
 directories.
] ifFalse:[ 
 files.
]) add: each.
].
 files := files select:[ : each | 
 self  fileFilter match: each name.
].
 sortBlock :=[ : a : b | 
 a name < b name.
].
 self  list list:( self  includeFiles  ifTrue:[ 
( directories asSortedList: sortBlock) concatenate:( files asSortedList: sortBlock).
] ifFalse:[ 
 directories asSortedList: sortBlock.
]).
^ self.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
selection 
^ self  list selection.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
selectionChannel 
^ self  visual selectionChanged.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
list ^list! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
fileDisplayBlock 
^[ : entry | 
 entry isDirectory  ifTrue:[ 
'[ ' , entry name ,' ]'.
] ifFalse:[ 
 entry name.
].
].

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
desiredWidth 
^200.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
directory: directory_val directory := directory_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
fileFilterX: fileFilterX_val fileFilterX := fileFilterX_val! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
isDirectoryPanel 
^true.

! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) methodsFor: 'unclassified' !
fileFilterX ^fileFilterX! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_FilePickerDirectoryPanel := eos ! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_FilePickerDirectoryPanel := mmd ! !

"September 28, 2010 -> 23:11:42"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerDirectoryPanel) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:43"!

Delta define: #Brazil_ToolClasses_FilePicker as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' selectedPath fileFilter filterField') classVariables: 'MixinMetadata_Brazil_ToolClasses_FilePicker EnclosingObjects_Brazil_ToolClasses_FilePicker') !


"September 28, 2010 -> 23:11:43"!

(Delta mirrorFor: #Brazil_ToolClasses_FilePicker)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
defaultOKButtonLabel 
^'Open'.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
defaultWindowLabel 
^'Open File'.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
filterField: filterField_val filterField := filterField_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
selectedPath: selectedPath_val selectedPath := selectedPath_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
fileFilter: fileFilter_val fileFilter := fileFilter_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
enableOrDisableOKForSelection: item 
 self okButton enabled:( item notNil and:[ 
 item isDirectory not.
]).
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
setupNewDirectoryPanel: panel 
 panel fileFilter: self  fileFilter.
super  setupNewDirectoryPanel: panel.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
selectedPath ^selectedPath! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
respondToCancel 
 self  selectedPath:nil.
super  respondToCancel.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
buildButtons 
|  row |
 row :=super  buildButtons.
 self  enableOrDisableOKForSelection:nil.
^ row.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
respondToSelection: item in: panel 
super   respondToSelection: item in: panel.
 self  selectedPath:( item ifNotNil:[ 
 self hereDirectory fullNameFor: item name.
]).
 self  enableOrDisableOKForSelection: item.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
Brazil_ToolClasses_FilePicker_1_init 
 self fileFilter:nil.
 self filterField:nil.
 self selectedPath:nil.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_FilePicker_superInit_new.
 self Brazil_ToolClasses_FilePicker_1_init.
 self showNewFolderButton:false.
 self  fileFilter:'*'.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
fileFilter ^fileFilter! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
buildFilterField 
 self  filterField:( (EnclosingObjects_Brazil_ToolClasses_FilePicker at: 1)  TextView new text: self  fileFilter).
 self  filterField hasEditsFromUserChannel =>[ : a | 
 self newFilterTyped: a.
].
 self  filterField enterKeyResponse:[ : defaultResponse | 
nil.
].
^ self  filterField.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
Brazil_ToolClasses_FilePicker_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
buildTopRow 
|  row |
 row :=super  buildTopRow.
 row addBlankSize:10; 
 add:( (EnclosingObjects_Brazil_ToolClasses_FilePicker at: 1)  Label new text:'Filter:') wrapped beCentered; 
 addBlankSize:10; 
 add: self  buildFilterField.
 self  filterField area width:100.
^ row.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
newFilterTyped: ignored 
 self  fileFilter: self  filterField text asString.
 self panels last fileFilter: self  fileFilter.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) methodsFor: 'unclassified' !
filterField ^filterField! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_FilePicker := eos ! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_FilePicker := mmd ! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePicker) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:43"!

Delta define: #Brazil_ToolClasses_NewFilePicker as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' nameField fileNameX') classVariables: 'MixinMetadata_Brazil_ToolClasses_NewFilePicker EnclosingObjects_Brazil_ToolClasses_NewFilePicker') !


"September 28, 2010 -> 23:11:43"!

(Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
defaultOKButtonLabel 
^'Save'.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
buildNameField 
|  row |
 self  nameField: (EnclosingObjects_Brazil_ToolClasses_NewFilePicker at: 1)  TextView new.
 self  nameField hasEditsFromUserChannel =>[ : x | 
 self  enableOrDisableOK.
].
 self  nameField text: self  fileName; 
 enterKeyResponse:[ : defaultResponse | 
 self okButton enabled ifTrue:[ 
 self respondToOK.
].
].
^ self  nameField.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
Brazil_ToolClasses_NewFilePicker_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
fileName: newName 
 self  fileNameX: newName.
 self  nameField ifNotNil:[ 
 self  nameField text: newName.
].
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
nameField ^nameField! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
fileName 
^ self  fileNameX.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
selectedPath 
^( self  nameField notNil and:[ 
 self  nameField text notEmpty.
])  ifTrue:[ 
 self hereDirectory fullNameFor: self  nameField text.
] ifFalse:[ 
nil.
].

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
fileNameX: fileNameX_val fileNameX := fileNameX_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
defaultWindowLabel 
^'Save File'.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
buildButtons 
|  buttons |
 buttons := (EnclosingObjects_Brazil_ToolClasses_NewFilePicker at: 1)  Row new.
 self showNewFolderButton ifTrue:[ 
 buttons add: self buildNewFolderButton.
].
 buttons addElasticBlank; 
 add:( (EnclosingObjects_Brazil_ToolClasses_NewFilePicker at: 1)  Label new text:'Save as:') wrapped beCentered; 
 addBlankSize:10; 
 add: self  buildNameField; 
 addBlankSize:10.
 self  nameField area width:200; 
 elasticity:2.
 self okButton:( buttons  addNew: (EnclosingObjects_Brazil_ToolClasses_NewFilePicker at: 1)  Button setup:[ : button | 
 button label: self okButtonLabel; 
 action:[ 
 self respondToOK.
].
]).
 self  enableOrDisableOK.
 buttons addBlankSize:10.
 self cancelButton:( buttons  addNew: (EnclosingObjects_Brazil_ToolClasses_NewFilePicker at: 1)  Button setup:[ : button | 
 button label:'Cancel'; 
 action:[ 
 self respondToCancel.
].
]).
 (EnclosingObjects_Brazil_ToolClasses_NewFilePicker at: 1)  CellWidthEqualizer equalizeRowElements:(( self Array new:2)  at:1 put: self okButton; 
  at:2 put: self cancelButton; 
 yourself).
^ buttons.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
fileNameX ^fileNameX! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
enableOrDisableOK 
nil = self okButton ifTrue:[ 
^ self.
].
 self okButton enabled: self  nameField text isEmpty not.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
respondToSelection: item in: panel 
( item notNil and:[ 
 item isDirectory not.
]) ifTrue:[ 
 self  nameField text: item name.
].
 self  enableOrDisableOK.
super   respondToSelection: item in: panel.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
nameField: nameField_val nameField := nameField_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
Brazil_ToolClasses_NewFilePicker_1_init 
 self fileNameX: self String new.
 self nameField:nil.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_NewFilePicker_superInit_new.
 self Brazil_ToolClasses_NewFilePicker_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_NewFilePicker := eos ! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_NewFilePicker := mmd ! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_NewFilePicker) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:43"!

Delta define: #Brazil_ToolClasses_AbstractFileDialog as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' upButton locationButton window okButton showNewFolderButton okButtonLabel locationField shouldClose cancelButton closedWithOK panels viewport') classVariables: 'MixinMetadata_Brazil_ToolClasses_AbstractFileDialog EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog') !


"September 28, 2010 -> 23:11:43"!

(Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog)
comment: 
'NOTE: Should eventually remove the locationButton field and related stuff.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
panels: panels_val panels := panels_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
defaultWindowLabel 
^'Select a File'.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
viewport ^viewport! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildLocationMenu 
|  menu |
 menu := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Menu forVisual: self  window.
 self  directoriesFromHereToRootDo:[ : each | 
|  label |
 label := each localName isEmpty  ifTrue:[ 
 self  drivesPseudoDirectoryName.
] ifFalse:[ 
 each localName.
].
 menu add:( (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  MenuItem  label: label action:[ 
 self  retargetAt: each.
] fixTemps).
].
^ menu.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildButtons 
|  buttons |
 buttons := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Row new.
 self  showNewFolderButton ifTrue:[ 
 buttons add: self  buildNewFolderButton.
].
 buttons addElasticBlank.
 self  okButton:( buttons  addNew: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Button setup:[ : button | 
 button label: self  okButtonLabel; 
 action:[ 
 self  respondToOK.
].
]).
 buttons addBlankSize:10.
 self  cancelButton:( buttons  addNew: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Button setup:[ : button | 
 button label:'Cancel'; 
 action:[ 
 self  respondToCancel.
].
]).
 (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  CellWidthEqualizer equalizeRowElements:(( self Array new:2)  at:1 put: self  okButton; 
  at:2 put: self  cancelButton; 
 yourself).
^ buttons.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
closedWithOK: closedWithOK_val closedWithOK := closedWithOK_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
respondToSelection: item in: panel 
 self removePanelsAfter: panel.
 item notNil ifTrue:[ 
 item isDirectory  ifTrue:[ 
|  newDirectory |
 newDirectory := self  hereDirectory / item name.
^ self  addNewPanel:( self  createPanelFor: newDirectory).
] ifFalse:[ 
|  newFile |
 newFile := self  hereDirectory directoryEntryFor: item name.
^ self  addNewPanel:( self   createFilePanelFor: newFile in: self  hereDirectory).
].
].
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_AbstractFileDialog_superInit_new.
 self Brazil_ToolClasses_AbstractFileDialog_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
baseDirectoryDelimitedPathName 
|  base  baseName |
 base := self  baseDirectory.
 baseName := base pathName.
^ baseName isEmpty  ifTrue:[ 
#''.
] ifFalse:[ 
 baseName copyWith: base pathNameDelimiter.
].

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
Brazil_ToolClasses_AbstractFileDialog_1_init 
 self okButtonLabel: self  defaultOKButtonLabel.
 self showNewFolderButton:true.
 self window:nil.
 self locationButton:nil.
 self locationField:nil.
 self upButton:nil.
 self viewport:nil.
 self panels: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  OrderedCollection new.
 self okButton:nil.
 self cancelButton:nil.
 self shouldClose:false.
 self closedWithOK:false.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
respondToUpButtonClick 
 self  retargetAt: self  baseDirectory containingDirectory.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildNewFolderButton 
|  button |
 button := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Button new.
 button label:'New Folder...'; 
 action:[ 
 self  respondToNewFolder.
].
^ button.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
navigateToLocationInField 
|  target |
 target := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  FileDirectory on: self  locationField text asString.
 target exists  ifFalse:[ 
 self  locationField flash.
] ifTrue:[ 
 self  retargetAt: target.
].
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
window: window_val window := window_val! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
removePanelsAfter: panel 
|  index |
 index := self  panels indexOf: panel.
( self  panels size  to: index +1 by:-1) do:[ : indexToRemove | 
|  toRemove |
 toRemove := self  panels at: indexToRemove.
 self  viewport remove: toRemove visual.
 self  panels remove: toRemove.
].
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
Brazil_ToolClasses_AbstractFileDialog_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildWindow 
 self  window: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Window new.
 self  window title: self  defaultWindowLabel.
^ self.

! !

"September 28, 2010 -> 23:11:43"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
refreshUpButton 
|  directoryName |
 directoryName := self  baseDirectory localName.
 self  upButton enabled: directoryName isEmpty not.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
viewport: viewport_val viewport := viewport_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
okButtonLabel ^okButtonLabel! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
locationField ^locationField! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
respondToCancel 
 self  closedWithOK:false.
 self  shouldClose:true.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
showNewFolderButton: showNewFolderButton_val showNewFolderButton := showNewFolderButton_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildTopRow 
|  row |
 row := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Row new.
 row  add: self  buildLocationField setup:[ : field | 
 field area elasticity:1.
]; 
 addBlankSize:5; 
 add: self  buildUpButton.
^ row.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
afterOpen 
 self  retargetAt: self  initialDirectory.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
refreshLocationField 
 self  locationField text: self  baseDirectoryDelimitedPathName.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
okButtonLabel: okButtonLabel_val okButtonLabel := okButtonLabel_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
drivesPseudoDirectoryName 
^'<Drives>'.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
upButton ^upButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildCenterColumn 
|  column |
 column := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Column new.
 column add: self  buildTopRow; 
 addBlankSize:5.
 self  viewport:( column  addNew: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  HorizontalViewport setup:[ : it | 
 it color:( (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  Color gray:9/10).
 it area elasticity:1.
]).
 column addBlankSize:10; 
  add: self  buildButtons setup:[ : it | 
 it area height:26.
]; 
 addBlankSize:5.
^ column.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
shouldClose ^shouldClose! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
cancelButton ^cancelButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
populateWindow 
 self  window content: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Row new.
 self  window content addBlankSize:5; 
  add: self  buildCenterColumn setup:[ : it | 
 it area elasticity:1.
]; 
 addBlankSize:5.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
locationField: locationField_val locationField := locationField_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
lastDirectoryPanel 
 self  panels reverseDo:[ : each | 
 each isDirectoryPanel ifTrue:[ 
^ each.
].
].
 (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  error:'invalid state - no directory panels'.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
directoriesFromHereToRootDo: aBlock 
|  here |
 here := self  baseDirectory containingDirectory.
[ 
 here localName isEmpty.
] whileFalse:[ 
 aBlock value: here.
 here := here containingDirectory.
].
( here isKindOf: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  DosFileDirectory) ifTrue:[ 
 aBlock value: here.
].
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
okButton ^okButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
selectedPath 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
open 
|  windowSize |
 windowSize :=700 @500.
 self  buildWindow.
 self  populateWindow.
 self  window bounds:( (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  theDesktop bounds center - ( windowSize //2) extent: windowSize); 
  openModalWhileFalse:[ 
 self  shouldClose.
] afterOpening:[ 
 self  afterOpen.
].
^ self  closedWithOK.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
shouldClose: shouldClose_val shouldClose := shouldClose_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
panels ^panels! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
hereDirectory 
^ self  panels last directory.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
closedWithOK ^closedWithOK! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
defaultDirectory 
^ (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  FileDirectory default.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
initialDirectory 
|  lastDirectoryPath  lastDirectory |
 lastDirectoryPath := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  lastVisitedDirectory.
 lastDirectoryPath isNil ifTrue:[ 
^ self  defaultDirectory.
].
 lastDirectory := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  FileDirectory on: lastDirectoryPath.
^ lastDirectory exists  ifTrue:[ 
 lastDirectory.
] ifFalse:[ 
 self  defaultDirectory.
].

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
showNewFolderButton ^showNewFolderButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
baseDirectorySummaryString 
|  base  delimiter  parts |
 base := self  baseDirectory.
 delimiter := self String with: base pathNameDelimiter.
 parts := base pathParts.
^ parts size <3  ifTrue:[ 
 base pathName , delimiter.
] ifFalse:[ 
 parts first ,'...' , delimiter , parts last , delimiter.
].

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
respondToLocationClick 
|  menu |
 menu := self  buildLocationMenu.
 menu  openIn: self  window desktop above: self  window.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
okButton: okButton_val okButton := okButton_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
cancelButton: cancelButton_val cancelButton := cancelButton_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
respondToDoubleClickIn: panel 
 panel selection ifNotNil:[ : item | 
 item isDirectory ifTrue:[ 
 self  retargetAt:( panel directory / item name).
].
].
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildUpButton 
 self  upButton:( (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Button new label:'Up').
 self  upButton action:[ 
 self  respondToUpButtonClick.
].
^ self  upButton.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
retargetAt: directory 
|  seed |
 self  panels do:[ : each | 
 self  viewport remove: each visual.
].
 seed := self  createPanelFor: directory.
 self  panels:( (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  OrderedCollection with: seed).
 self  viewport  add: seed visual setup:[ : it | 
 it area width:200.
].
 self  refreshLocationField.
 self  refreshUpButton.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
respondToOK 
 (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 2)  lastVisitedDirectory: self  hereDirectory pathName.
 self  closedWithOK:true.
 self  shouldClose:true.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
setupNewDirectoryPanel: panel 
 panel selectionChannel =>[ : selection | 
 self   respondToSelection: selection in: panel.
].
 panel doubleClickAction:[ 
 self  respondToDoubleClickIn: panel.
].
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
addNewPanel: panel 
 self  panels add: panel.
 self  viewport  add: panel visual setup:[ : it | 
 it area width: panel desiredWidth.
].
 self  scrollViewportToEnd.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
locationButton ^locationButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
window ^window! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildLocationField 
 self  locationField: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  TextView new.
 self  locationField enterKeyResponse:[ : defaultResponse | 
 self  navigateToLocationInField.
].
^ self  locationField.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
respondToNewFolder 
|  newName |
 newName := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Prompter new title:'New Folder Name'; 
 open.
 newName isNil ifTrue:[ 
^ self.
].
 newName := newName withBlanksTrimmed.
 newName isEmpty ifTrue:[ 
^ self.
].
( self  hereDirectory fileOrDirectoryExists: newName) ifFalse:[ 
 self  hereDirectory createDirectory: newName.
].
 self  lastDirectoryPanel populateList; 
 selectEntryNamed: newName.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
defaultOKButtonLabel 
^'OK'.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
buildLocationButton 
 self  locationButton: (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  Button new.
 self  locationButton action:[ 
 self  respondToLocationClick.
].
^ self  locationButton.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
createFilePanelFor: entry in: directory 
|  panel |
 panel := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  FilePickerFilePanel new fileEntry: entry; 
 directory: directory.
^ panel.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
upButton: upButton_val upButton := upButton_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
locationButton: locationButton_val locationButton := locationButton_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
createPanelFor: directory 
|  panel |
 panel := (EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog at: 1)  FilePickerDirectoryPanel new directory: directory.
 self  setupNewDirectoryPanel: panel.
^ panel.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
scrollViewportToEnd 
|  lastPanelEnd  targetPosition  overshoot |
 overshoot :=5.
 lastPanelEnd := self  panels last visual bounds right.
 targetPosition := lastPanelEnd -  self  viewport innerExtent x + overshoot.
 targetPosition > self  viewport scrollPosition x ifTrue:[ 
 self  viewport scrollPosition:(( targetPosition max:0) @0).
].
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) methodsFor: 'unclassified' !
baseDirectory 
^ self  panels first directory.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_AbstractFileDialog := eos ! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_AbstractFileDialog := mmd ! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_AbstractFileDialog) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:44"!

Delta define: #Brazil_ToolClasses_BrazilFileSelector as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' upButton window fileFilterHolder okAction selectedName okButton directory cancelButton filterInput fileList') classVariables: 'MixinMetadata_Brazil_ToolClasses_BrazilFileSelector EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector') !


"September 28, 2010 -> 23:11:44"!

(Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector)
comment: 
'A BrazilFileSelector is a dialog box-like application with a list box and two buttons that allows to navigate the file system and select an existing file.

In the current incarnation, the selector opens modelessly and is configured with an action block that gets invoked when the user clicks the OK button. Usage example:

	| fileSelector |
	fileSelector:: BrazilFileSelector new
		fileFilter: ''*.st'';
		okAction: 
			[:filename |
			Cursor wait showWhile: [doStuffWith: filename]].
	fileSelector open

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
createUI 
|  top  middle  bottom |
 self  createWindow.
 self  window content:( (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Column new gap:5).
 top := self  createTopPanel.
 middle := self  createMiddlePanel.
 bottom := self  createBottomPanel.
 self  window content add: top; 
 add: middle; 
 add: bottom.
 middle area elasticity:1.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
windowTitle 
^'Select a File'.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileList: fileList_val fileList := fileList_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
activate: entry 
 entry isDirectory  ifTrue:[ 
 self  enterDirectory: entry.
] ifFalse:[ 
 self  finalSelection: entry.
].
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
cancelButton ^cancelButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileFilter: filter 
 self  fileFilterHolder value: filter.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
okAction ^okAction! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileList ^fileList! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
open 
 self  createUI.
 self  refreshUI.
 self  window open.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileListDoubleClicked 
 self  fileList selectionDo:[ : selection | 
 self  activate: selection.
].
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
refreshUI 
 self  fileFilter: self  fileFilter.
 self  populateList.
 self  okButton enabled: self  fileList hasSelection.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
selectedName: selectedName_val selectedName := selectedName_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
selectFileNamed: name 
|  entry |
 entry := self  fileList list  detect:[ : some | 
 some name = name.
] ifNone:[ 
^ self.
].
 self  fileList select: entry.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
enterDirectory: entry 
 self  directory:( self  directory / entry name).
 self  refreshUI.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_BrazilFileSelector_superInit_new.
 self Brazil_ToolClasses_BrazilFileSelector_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
populateList 
|  directories  files  sortBlock |
 directories := (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 2)  OrderedCollection new.
 files := (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 2)  OrderedCollection new.
 self  directory entries do:[ : each | 
( each isDirectory  ifTrue:[ 
 directories.
] ifFalse:[ 
 files.
]) add: each.
].
 files := files select:[ : each | 
 self  fileFilter match: each name.
].
 sortBlock :=[ : a : b | 
 a name < b name.
].
 self  fileList list:(( directories sortBy: sortBlock) ,( files sortBy: sortBlock)).
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
okAction: okAction_val okAction := okAction_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
okButton ^okButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
filterInput: filterInput_val filterInput := filterInput_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
cancelClicked 
 self  selectedName:nil.
 self  window close.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
okClicked 
 self  activate: self  fileList selection.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
newFilterTyped: ignored 
 self  fileFilter: self  filterInput text asString.
 self  refreshUI.
^ self.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
window: window_val window := window_val! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
createTopPanel 
|  panel |
 panel := (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Row new gap:5.
 self  filterInput:( (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  TextView new text: self  fileFilter).
 self  filterInput hasEditsFromUserChannel =>[ : a | 
 self newFilterTyped: a.
].
 self  upButton:( (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Button new label:'Up'; 
 action:[ 
 self  upClicked.
]).
 panel add: self  filterInput; 
 add: self  upButton.
 self  filterInput area elasticity:1.
 panel area height:25.
^ panel.

! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileFilterHolder ^fileFilterHolder! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
upButton ^upButton! !

"September 28, 2010 -> 23:11:44"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
cancelButton: cancelButton_val cancelButton := cancelButton_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
window ^window! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
createWindow 
 self  window:( (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Window new title: self  windowTitle).
 self  window bounds:(300 @300 extent:(200 @300)).
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
directory: directory_val directory := directory_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
Brazil_ToolClasses_BrazilFileSelector_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileFilter 
^ self  fileFilterHolder value.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
Brazil_ToolClasses_BrazilFileSelector_1_init 
 self directory:nil.
 self fileFilterHolder:nil.
 self window:nil.
 self filterInput:nil.
 self upButton:nil.
 self fileList:nil.
 self okButton:nil.
 self cancelButton:nil.
 self selectedName:nil.
 self okAction:nil.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
directory ^directory! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
upClicked 
|  last |
 last := self  directory.
 self  directory: self  directory containingDirectory.
 self  refreshUI.
 self  selectFileNamed: last localName.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
createBottomPanel 
|  panel |
 panel := (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Row new.
 self  okButton:( (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Button new label:'OK'; 
 action:[ 
 self  okClicked.
]).
 self  cancelButton:( (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Button new label:'Cancel'; 
 action:[ 
 self  cancelClicked.
]).
 panel add: self  okButton; 
 addBlankSize:5; 
 add: self  cancelButton.
 self  okButton area elasticity:1.
 self  cancelButton area elasticity:1.
^ panel.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
finalSelection: entry 
 self  selectedName:( self  directory fullNameFor: entry name).
 self  window close.
 self  okAction ifNotNil:[ 
 self  okAction value: self  selectedName.
].
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
okButton: okButton_val okButton := okButton_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
selectedName ^selectedName! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
initialize 
 self  directory: (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 2)  FileDirectory default.
 self  fileFilterHolder:( (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  Holder with:'*').
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileDisplayBlock 
^[ : entry | 
 entry isDirectory  ifTrue:[ 
'[-' , entry name ,'-]'.
] ifFalse:[ 
 entry name.
].
].

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
upButton: upButton_val upButton := upButton_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
createMiddlePanel 
 self  fileList: (EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector at: 1)  ListBox new.
 self  fileList displayBlock: self  fileDisplayBlock; 
 doubleClickAction:[ 
 self  fileListDoubleClicked.
].
 self  fileList selectionChanged =>[ : selection | 
 self  okButton enabled: selection notNil.
].
^ self  fileList.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
fileFilterHolder: fileFilterHolder_val fileFilterHolder := fileFilterHolder_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) methodsFor: 'unclassified' !
filterInput ^filterInput! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_BrazilFileSelector := eos ! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_BrazilFileSelector := mmd ! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilFileSelector) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:45"!

Delta define: #Brazil_ToolClasses_BrazilInspector as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' window subject') classVariables: 'MixinMetadata_Brazil_ToolClasses_BrazilInspector EnclosingObjects_Brazil_ToolClasses_BrazilInspector') !


"September 28, 2010 -> 23:11:45"!

(Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
setup: label toInspect: object 
 label mouseUpAction:[ 
 object explore.
].
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
window ^window! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
subject: subject_val subject := subject_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
window: window_val window := window_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
createWindow 
 self  window: (EnclosingObjects_Brazil_ToolClasses_BrazilInspector at: 1)  Window new.
 self  window title: self  subject printString; 
 content: (EnclosingObjects_Brazil_ToolClasses_BrazilInspector at: 1)  VerticalViewport new.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
subject ^subject! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
Brazil_ToolClasses_BrazilInspector_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
buildIn: container 
 self  addSelfLineTo: container.
 self  subject class allInstVarNames keysAndValuesDo:[ : index : name | 
 self   addInstVarNamed: name value:( self  subject instVarAt: index) to: container.
].
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
addInstVarNamed: name value: value to: container 
 container  addNew: (EnclosingObjects_Brazil_ToolClasses_BrazilInspector at: 1)  Label setup:[ : label | 
 label label:( name ,': ' , value printString).
 self   setup: label toInspect: value.
].
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
open 
 self  createWindow.
 self  buildIn: self  window content.
 self  window open.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
Brazil_ToolClasses_BrazilInspector_1_init 
 self subject:nil.
 self window:nil.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
addSelfLineTo: container 
 container  addNew: (EnclosingObjects_Brazil_ToolClasses_BrazilInspector at: 1)  Label setup:[ : label | 
 label label:('self: ' , self  subject printString).
 self   setup: label toInspect: self  subject.
].
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_BrazilInspector_superInit_new.
 self Brazil_ToolClasses_BrazilInspector_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_BrazilInspector := eos ! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_BrazilInspector := mmd ! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilInspector) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:45"!

Delta define: #Brazil_ToolClasses_Prompter as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' initialText textView cancelled') classVariables: 'MixinMetadata_Brazil_ToolClasses_Prompter EnclosingObjects_Brazil_ToolClasses_Prompter') !


"September 28, 2010 -> 23:11:45"!

(Delta mirrorFor: #Brazil_ToolClasses_Prompter)
comment: 
'A utility dialog with a one-line text view that allows entering a short text and an OK and Cancel buttons.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
Brazil_ToolClasses_Prompter_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
textView: textView_val textView := textView_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
respondToOK 
 self  cancelled:false.
 self shouldClose:true.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
initialText: initialText_val initialText := initialText_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
cancelled: cancelled_val cancelled := cancelled_val! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
createButtons 
|  row  buttons |
 buttons := (EnclosingObjects_Brazil_ToolClasses_Prompter at: 2)  OrderedCollection new.
 row := (EnclosingObjects_Brazil_ToolClasses_Prompter at: 1)  Row new addElasticBlank; 
  addNew: (EnclosingObjects_Brazil_ToolClasses_Prompter at: 1)  Button setup:[ : button | 
 buttons add: button.
 button label:'OK'; 
 action:[ 
 self  respondToOK.
].
]; 
 addBlankSize:5; 
  addNew: (EnclosingObjects_Brazil_ToolClasses_Prompter at: 1)  Button setup:[ : button | 
 buttons add: button.
 button label:'Cancel'; 
 action:[ 
 self  respondToCancel.
].
]; 
 addBlankSize:5; 
 yourself.
 (EnclosingObjects_Brazil_ToolClasses_Prompter at: 1)  CellWidthEqualizer equalizeRowElements: buttons.
^ row.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
Brazil_ToolClasses_Prompter_1_init 
 self initialText:nil.
 self textView:nil.
 self cancelled:nil.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
open 
 self  createUI.
 self dialog  openModalWhileFalse:[ 
 self shouldClose.
] afterOpening:[ 
 self setWindowBounds.
].
^( self  cancelled isNil or:[ 
 self  cancelled.
])  ifTrue:[ 
nil.
] ifFalse:[ 
 self  textView text asString.
].

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
initialText ^initialText! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
initialize 
super  initialize.
 self  initialText: self String new.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_Prompter_superInit_new.
 self Brazil_ToolClasses_Prompter_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
createTextView 
 self  textView: (EnclosingObjects_Brazil_ToolClasses_Prompter at: 1)  TextView new.
 self  textView text: self  initialText; 
 enterKeyResponse:[ : defaultResponse | 
 self  respondToOK.
]; 
 escapeKeyResponse:[ : defaultResponse | 
 self  respondToCancel.
].
^ self  textView.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
text 
^ self  textView text asString.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
respondToCancel 
 self  cancelled:true.
 self shouldClose:true.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
createUI 
 self dialog:( (EnclosingObjects_Brazil_ToolClasses_Prompter at: 1)  Window new title: self title).
 self dialog content: (EnclosingObjects_Brazil_ToolClasses_Prompter at: 1)  Column new.
 self dialog content addBlankSize:5; 
 add: self  createTextView; 
 addBlankSize:5.
 self dialog content children last area elasticity:1.
 self dialog content add: self  createButtons; 
 addBlankSize:5.
 self  textView area height:25.
^ self.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
textView ^textView! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) methodsFor: 'unclassified' !
cancelled ^cancelled! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_Prompter := eos ! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_Prompter := mmd ! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_Prompter) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:45"!

Delta define: #Brazil_ToolClasses_FilePickerFilePanel as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' fileEntry visualX directory') classVariables: 'MixinMetadata_Brazil_ToolClasses_FilePickerFilePanel EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel') !


"September 28, 2010 -> 23:11:45"!

(Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
visualX ^visualX! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
timestampString 
^( (EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel at: 2)  TimeStamp fromSeconds: self  fileEntry modificationTime) printString.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
fileSizeString 
|  size  k  m  g |
 size := self  fileEntry fileSize.
 k :=1024.
 m :=1024 * k.
 g :=1024 * m.
 size < k ifTrue:[ 
^ size printString ,' bytes'.
].
 size < m ifTrue:[ 
^( self   rounded: size in: k) printString ,' K'.
].
 size < g ifTrue:[ 
^( self   rounded: size in: m) printString ,' M'.
].
^( self   rounded: size in: g) printString ,' G'.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
createVisual 
 self  visualX: (EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel at: 1)  Row new.
 self  visualX addBlankSize:4; 
 add: self  createBlurb.
^ self  visualX.

! !

"September 28, 2010 -> 23:11:45"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
createBlurb 
|  blurb |
 blurb := (EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel at: 1)  Column new.
 blurb add:( (EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel at: 1)  Label new text: self  fileEntry name); 
 add:( (EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel at: 1)  Label new text:('Size: ' , self  fileSizeString)); 
 add:( (EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel at: 1)  Label new text: self  timestampString).
^ blurb.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
isDirectoryPanel 
^false.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
fileEntry ^fileEntry! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
visual 
 self  visualX isNil ifTrue:[ 
 self  createVisual.
].
^ self  visualX.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
directory ^directory! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_FilePickerFilePanel_superInit_new.
 self Brazil_ToolClasses_FilePickerFilePanel_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
directory: directory_val directory := directory_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
Brazil_ToolClasses_FilePickerFilePanel_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
rounded: size in: divisor 
^( size *10 / divisor) rounded asFloat /10.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
desiredWidth 
^nil.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
fileEntry: fileEntry_val fileEntry := fileEntry_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
visualX: visualX_val visualX := visualX_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) methodsFor: 'unclassified' !
Brazil_ToolClasses_FilePickerFilePanel_1_init 
 self directory:nil.
 self fileEntry:nil.
 self visualX:nil.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_FilePickerFilePanel := eos ! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_FilePickerFilePanel := mmd ! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_FilePickerFilePanel) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:46"!

Delta define: #Brazil_ToolClasses_MessageBox as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' buttonLabels selection message title buttons shouldClose dialog messageArea width buttonSelections') classVariables: 'MixinMetadata_Brazil_ToolClasses_MessageBox EnclosingObjects_Brazil_ToolClasses_MessageBox') !


"September 28, 2010 -> 23:11:46"!

(Delta mirrorFor: #Brazil_ToolClasses_MessageBox)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
createUI 
|  column |
 self  dialog:( (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  Window new title: self  title).
 self  dialog content: (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  Row new.
 self  dialog content addBlankSize:10.
 column := (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  Column new.
 column addBlankSize:5.
 column add:( (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  TextDisplay new text: self  message asString).
 column addBlankSize:15.
 column children last area elasticity:1.
 column add: self  createButtonRow.
 column addBlankSize:10.
 self  dialog content add: column.
 column area elasticity:1.
 self  dialog content addBlankSize:10.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
ok: text 
 self  message: text.
 self   buttonLabels:(( self Array new:1)  at:1 put:'OK'; 
 yourself) selections:(( self Array new:1)  at:1 put:#'ok'; 
 yourself).
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
buttons ^buttons! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
open 
 self  createUI.
 self  dialog  openModalWhileFalse:[ 
 self  shouldClose.
] afterOpening:[ 
 self  setWindowBounds.
].
^ self  selection.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
dialog ^dialog! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
shouldClose: shouldClose_val shouldClose := shouldClose_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_MessageBox_superInit_new.
 self Brazil_ToolClasses_MessageBox_1_init.
 self  ok:'<no message provided>'.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
title ^title! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
message ^message! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
yesNo: text 
 self  message: text.
 self   buttonLabels:(( self Array new:2)  at:1 put:'Yes'; 
  at:2 put:'No'; 
 yourself) selections:(( self Array new:2)  at:1 put:#'yes'; 
  at:2 put:#'no'; 
 yourself).
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
buttonLabels: labels selections: selections 
 self  buttonLabels: labels.
 self  buttonSelections: selections.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
yesNoCancel: text 
 self  message: text.
 self   buttonLabels:(( self Array new:3)  at:1 put:'Yes'; 
  at:2 put:'No'; 
  at:3 put:'Cancel'; 
 yourself) selections:(( self Array new:3)  at:1 put:#'yes'; 
  at:2 put:#'no'; 
  at:3 put:#'cancel'; 
 yourself).
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
messageArea ^messageArea! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
width ^width! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
buttons: buttons_val buttons := buttons_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
buttonSelections: buttonSelections_val buttonSelections := buttonSelections_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
Brazil_ToolClasses_MessageBox_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
selection ^selection! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
message: message_val message := message_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
selection: selection_val selection := selection_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
oldInitialize 
 self  width:400.
 self  title: (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 2)  SystemScope soleInstance systemName.
 self  shouldClose:false.
 self  ok:'<no message provided>'.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
setWindowBounds 
|  extent  bounds |
 extent := self  width isNil  ifTrue:[ 
 self  dialog content naturalExtent +(10 @0).
] ifFalse:[ 
 self  width @( self  dialog naturalHeightForWidth: self  width).
].
 bounds := self  dialog desktop centeredRectangleOfExtent: extent.
 self  dialog area bounds: bounds.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
Brazil_ToolClasses_MessageBox_1_init 
 self title: (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 2)  SystemScope soleInstance systemName.
 self shouldClose:false.
 self width:400.
 self buttonLabels:nil.
 self buttonSelections:nil.
 self dialog:nil.
 self message:nil.
 self messageArea:nil.
 self buttons:nil.
 self selection:nil.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
createButtonLabelled: label selection: tag 
|  button |
 button := (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  Button new label: label.
 button action:[ 
 self  selection: tag.
 self  shouldClose:true.
].
^ button.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
buttonLabels ^buttonLabels! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
messageArea: messageArea_val messageArea := messageArea_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
dialog: dialog_val dialog := dialog_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
okCancel: text 
 self  message: text.
 self   buttonLabels:(( self Array new:2)  at:1 put:'OK'; 
  at:2 put:'Cancel'; 
 yourself) selections:(( self Array new:2)  at:1 put:#'ok'; 
  at:2 put:#'cancel'; 
 yourself).
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
shouldClose ^shouldClose! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
buttonSelections ^buttonSelections! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
width: width_val width := width_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
title: title_val title := title_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
createButtonRow 
|  buttonsOnly |
 self  buttons:( (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  Row new gap:5).
 buttonsOnly := (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 2)  OrderedCollection new.
 self  buttons add: (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  Blank new.
 self  buttons children last area elasticity:1.
 self  buttonLabels  with: self  buttonSelections do:[ : label : tag | 
|  button |
 button := self   createButtonLabelled: label selection: tag.
 buttonsOnly add: button.
 self  buttons add: button.
].
 self  buttons add: (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  Blank new.
 (EnclosingObjects_Brazil_ToolClasses_MessageBox at: 1)  CellWidthEqualizer equalizeRowElements: buttonsOnly.
 self  buttons children last area elasticity:1.
^ self  buttons.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) methodsFor: 'unclassified' !
buttonLabels: buttonLabels_val buttonLabels := buttonLabels_val! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_MessageBox := eos ! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_MessageBox := mmd ! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_MessageBox) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:46"!

Delta define: #Brazil_ToolClasses_DirectoryPicker as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_ToolClasses_DirectoryPicker EnclosingObjects_Brazil_ToolClasses_DirectoryPicker') !


"September 28, 2010 -> 23:11:46"!

(Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
defaultWindowLabel 
^'Select a Folder'.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
selectedPath 
^( self closedWithOK and:[ 
 self panels size >1.
])  ifTrue:[ 
 self hereDirectory fullName.
] ifFalse:[ 
nil.
].

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
Brazil_ToolClasses_DirectoryPicker_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
setupNewDirectoryPanel: panel 
 panel includeFiles:false.
super  setupNewDirectoryPanel: panel.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
buildButtons 
|  buttons |
 buttons :=super  buildButtons.
 self okButton enabled:false.
^ buttons.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
Brazil_ToolClasses_DirectoryPicker_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
afterOpen 
|  current  parent  entry |
 parent := self initialDirectory containingDirectory.
 parent fullName = self initialDirectory fullName ifTrue:[ 
^super  afterOpen.
].
 entry := self initialDirectory directoryEntry.
 self retargetAt: parent.
 self   respondToSelection: entry in: self panels first.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
respondToSelection: item in: panel 
super   respondToSelection: item in: panel.
 self okButton enabled:( self panels size >1).
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_DirectoryPicker_superInit_new.
 self Brazil_ToolClasses_DirectoryPicker_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_DirectoryPicker := eos ! !

"September 28, 2010 -> 23:11:46"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_DirectoryPicker := mmd ! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_DirectoryPicker) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:47"!

Delta define: #Brazil_ToolClasses_BrazilDirectorySelector as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_ToolClasses_BrazilDirectorySelector EnclosingObjects_Brazil_ToolClasses_BrazilDirectorySelector') !


"September 28, 2010 -> 23:11:47"!

(Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector)
comment: 
'A dialog box-like application that presents a list of subdirectories of a given directory and allows to navigate in the directory tree.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) methodsFor: 'unclassified' !
Brazil_ToolClasses_BrazilDirectorySelector_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) methodsFor: 'unclassified' !
windowTitle 
^'Select a Directory'.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) methodsFor: 'unclassified' !
Brazil_ToolClasses_BrazilDirectorySelector_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) methodsFor: 'unclassified' !
populateList 
|  directories  sortBlock |
 directories := (EnclosingObjects_Brazil_ToolClasses_BrazilDirectorySelector at: 2)  OrderedCollection new.
 self directory entries do:[ : each | 
 each isDirectory ifTrue:[ 
 directories add: each.
].
].
 sortBlock :=[ : a : b | 
 a name < b name.
].
 self fileList list:( directories sortBy: sortBlock).
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) methodsFor: 'unclassified' !
new 
 self Brazil_ToolClasses_BrazilDirectorySelector_superInit_new.
 self Brazil_ToolClasses_BrazilDirectorySelector_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ToolClasses_BrazilDirectorySelector := eos ! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ToolClasses_BrazilDirectorySelector := mmd ! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_ToolClasses_BrazilDirectorySelector) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:47"!

Delta define: #Brazil_VisualClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' MappableHolder Brazil_VisualClasses_HorizontalVisualSequence_slot Anchor FutureArea Brazil_VisualClasses_LeafVisual_slot Blank Brazil_VisualClasses_Visual_slot RowCell Brazil_VisualClasses_BoxShape_slot Brazil_VisualClasses_VisualSequence_slot Brazil_VisualClasses_ContainerVisual_slot ColumnCell Duct Brazil_VisualClasses_Shape_slot Frame InformationRetriever ShapeArea Attribute Wrapper Brazil_VisualClasses_VisualCollection_slot GridRowCell HierarchicalReporter Brazil_VisualClasses_VerticalVisualSequence_slot') classVariables: 'MixinMetadata_Brazil_VisualClasses EnclosingObjects_Brazil_VisualClasses') !


"September 28, 2010 -> 23:11:47"!

(Delta mirrorFor: #Brazil_VisualClasses)
comment: 
''!


"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
postInit 
 self  Attribute: (EnclosingObjects_Brazil_VisualClasses at: 1)  plumbing Attribute.
 self  ShapeArea: (EnclosingObjects_Brazil_VisualClasses at: 1)  areas ShapeArea.
 self  Duct: (EnclosingObjects_Brazil_VisualClasses at: 1)  plumbing Duct.
 self  FutureArea: (EnclosingObjects_Brazil_VisualClasses at: 1)  areas FutureArea.
 self  MappableHolder: (EnclosingObjects_Brazil_VisualClasses at: 1)  plumbing MappableHolder.
 self  InformationRetriever: (EnclosingObjects_Brazil_VisualClasses at: 1)  plumbing InformationRetriever.
 self  Frame: (EnclosingObjects_Brazil_VisualClasses at: 1)  areas Frame.
 self  Anchor: (EnclosingObjects_Brazil_VisualClasses at: 1)  areas Anchor.
 self  GridRowCell: (EnclosingObjects_Brazil_VisualClasses at: 1)  areas GridRowCell.
 self  RowCell: (EnclosingObjects_Brazil_VisualClasses at: 1)  areas RowCell.
 self  ColumnCell: (EnclosingObjects_Brazil_VisualClasses at: 1)  areas ColumnCell.
 self  HierarchicalReporter: (EnclosingObjects_Brazil_VisualClasses at: 1)  plumbing HierarchicalReporter.
 self  Wrapper: (EnclosingObjects_Brazil_VisualClasses at: 1)  containers Wrapper.
 self  Blank: (EnclosingObjects_Brazil_VisualClasses at: 1)  widgets Blank.
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
HierarchicalReporter: HierarchicalReporter_val HierarchicalReporter := HierarchicalReporter_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
GridRowCell ^GridRowCell! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Attribute: Attribute_val Attribute := Attribute_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
GridRowCell: GridRowCell_val GridRowCell := GridRowCell_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
FutureArea: FutureArea_val FutureArea := FutureArea_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Anchor: Anchor_val Anchor := Anchor_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
RowCell ^RowCell! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Wrapper: Wrapper_val Wrapper := Wrapper_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Duct ^Duct! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Brazil_VisualClasses_1_init 
 self Attribute:nil.
 self ShapeArea:nil.
 self Duct:nil.
 self FutureArea:nil.
 self MappableHolder:nil.
 self InformationRetriever:nil.
 self Frame:nil.
 self Anchor:nil.
 self GridRowCell:nil.
 self RowCell:nil.
 self ColumnCell:nil.
 self HierarchicalReporter:nil.
 self Wrapper:nil.
 self Blank:nil.
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
MappableHolder: MappableHolder_val MappableHolder := MappableHolder_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_superInit_new.
 self Brazil_VisualClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
VisualCollection
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_VisualCollection_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_VisualCollection.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  ContainerVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_VisualCollection_slot := myNested.
		].
	^Brazil_VisualClasses_VisualCollection_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
ColumnCell: ColumnCell_val ColumnCell := ColumnCell_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
ShapeArea: ShapeArea_val ShapeArea := ShapeArea_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Wrapper ^Wrapper! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Shape
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_Shape_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_Shape.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_Shape_slot := myNested.
		].
	^Brazil_VisualClasses_Shape_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
InformationRetriever ^InformationRetriever! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
HorizontalVisualSequence
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_HorizontalVisualSequence_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_HorizontalVisualSequence.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  VisualSequence)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_HorizontalVisualSequence_slot := myNested.
		].
	^Brazil_VisualClasses_HorizontalVisualSequence_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
MappableHolder ^MappableHolder! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Brazil_VisualClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Anchor ^Anchor! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
FutureArea ^FutureArea! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
LeafVisual
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_LeafVisual_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_LeafVisual.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  Visual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_LeafVisual_slot := myNested.
		].
	^Brazil_VisualClasses_LeafVisual_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
ColumnCell ^ColumnCell! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
ContainerVisual
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_ContainerVisual_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_ContainerVisual.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  Visual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_ContainerVisual_slot := myNested.
		].
	^Brazil_VisualClasses_ContainerVisual_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Frame: Frame_val Frame := Frame_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
BoxShape
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_BoxShape_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_BoxShape.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  Shape)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_BoxShape_slot := myNested.
		].
	^Brazil_VisualClasses_BoxShape_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
VisualSequence
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_VisualSequence_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_VisualSequence.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  VisualCollection)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_VisualSequence_slot := myNested.
		].
	^Brazil_VisualClasses_VisualSequence_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
VerticalVisualSequence
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_VerticalVisualSequence_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_VerticalVisualSequence.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self  VisualSequence)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_VerticalVisualSequence_slot := myNested.
		].
	^Brazil_VisualClasses_VerticalVisualSequence_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Blank: Blank_val Blank := Blank_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
ShapeArea ^ShapeArea! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Attribute ^Attribute! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
RowCell: RowCell_val RowCell := RowCell_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Duct: Duct_val Duct := Duct_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
HierarchicalReporter ^HierarchicalReporter! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Frame ^Frame! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Visual
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_VisualClasses_Visual_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_VisualClasses 
			nestedMixins at: #Brazil_VisualClasses_Visual.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_VisualClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_VisualClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_VisualClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_VisualClasses_Visual_slot := myNested.
		].
	^Brazil_VisualClasses_Visual_slot! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
InformationRetriever: InformationRetriever_val InformationRetriever := InformationRetriever_val! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) methodsFor: 'unclassified' !
Blank ^Blank! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses := eos ! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses := mmd ! !

"September 28, 2010 -> 23:11:47"!

! (Delta mirrorFor: #Brazil_VisualClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:47"!

Delta define: #Brazil_VisualClasses_Visual as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' parent owner visibleA updateLockLevel duct agent currentNaturalExtent area boundsH') classVariables: 'MixinMetadata_Brazil_VisualClasses_Visual EnclosingObjects_Brazil_VisualClasses_Visual') !


"September 28, 2010 -> 23:11:48"!

(Delta mirrorFor: #Brazil_VisualClasses_Visual)
comment: 
''!


"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
createAgentSubtreeUsing: agentFactory 
 self createAgentUsing: agentFactory.
 self  childrenDo:[ : each | 
 each createAgentSubtreeUsing: agentFactory.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
finishedMapping 
 self  childrenDo:[ : each | 
 each finishedMapping.
].
 self  agent finishedMapping.
 self  updateGeometricProperties.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
announceLayoutChange 
 self  notifications send:#'layoutChanged'.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
isBlank 
^false.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
legalAreaClassesInVerticalVisualSequence 
^( self Array new:1)  at:1 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  ColumnCell; 
 yourself.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForWindow 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Frame visual: self) fullyCoverParent.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
reiterateBounds 
 self  setBounds: self  bounds.
 self  childrenDo:[ : each | 
 each reiterateBounds.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
Brazil_VisualClasses_Visual_1_init 
 self parent:nil.
 self agent:nil.
 self owner:nil.
 self visibleA:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Attribute  name:#'visible' value:true).
 self duct:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Duct owner: self).
 self area: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  FutureArea new.
 self boundsH:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  MappableHolder with:(0 @0 corner:(0 @0))).
 self updateLockLevel:1.
 self currentNaturalExtent:(0 @0).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
isAreaClassLegalForSelf: aClass 
^ self  parent isNil or:[ 
(( self  parent legalAreaClassesFor: self) select:[ : some | 
 aClass includesBehavior: some.
]) isEmpty not.
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
duct: duct_val duct := duct_val! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
area: area_val area := area_val! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
blockIncrementalLayoutUpdatesWhile: aBlock 
|  result |
 result := self blockIncrementalLayoutUpdatesSilentlyWhile: aBlock.
 self  updateLockLevel <1 ifTrue:[ 
 self  flushLayoutCaches.
 self  requestBoundsUpdateUsing:[ : newBounds | 
 self  forceBounds: newBounds.
].
].
^ result.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_Visual_superInit_new.
 self Brazil_VisualClasses_Visual_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
childrenReverseDo: action 
^ self  children reverseDo: action.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
mousePoint 
^ self  agent  ifNil:[ 
0 @0.
] ifNotNil:[ : it | 
 it mousePoint.
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
origin 
^ self  bounds origin.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
areUpdatesLocked 
^ self  updateLockLevel >0.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
windowRelativeBounds 
^ self  localBounds translateBy:( self globalOrigin -  self  window globalOrigin).

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
wrapped 
^ (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Wrapper with: self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setArea: newArea 
|  oldArea |
 oldArea := self  area.
 self  area: newArea.
 oldArea notNil ifTrue:[ 
 oldArea copyConfigurationTo: self  area.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
requestBoundsUpdate 
 self  requestBoundsUpdateUsing:[ : newBounds | 
 self  occupyBounds: newBounds.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  area flushLayoutCaches.
 self  agent ifNotNil:[ : it | 
 it flushLayoutCaches.
].
 self  childrenDo:[ : each | 
 each flushLayoutCaches.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
mapSubtree 
 self  mapSubtreeUsing: self  desktop mapping.
 self  requestBoundsUpdateUsing:[ : newBounds | 
 self  forceBounds: newBounds.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
printHierarchyLayoutReportOn: aStream 
 self printLayoutReportOn: aStream.
 self  parent ifNotNil:[ : it | 
 aStream cr.
 it printHierarchyLayoutReportOn: aStream.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
reportNaturalExtentChange 
 self  flushLayoutCaches.
#'BOGUS' yourself.
 self  requestBoundsUpdate.
 self  announceNaturalExtentChange.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
duct ^duct! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
addTo: parent 
 parent add: self.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
legalAreaClassesInGridRow 
^( self Array new:1)  at:1 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  GridRowCell; 
 yourself.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
owner ^owner! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
releaseMouse 
 self  agent ifNotNil:[ : it | 
 it releaseMouse.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
childrenDo: aBlock 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
ensureUpToDateAppearance 
 self  agent ifNotNil:[ : it | 
 it ensureUpToDateAppearance.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
refreshLayout 
 self  flushLayoutCaches.
 self  requestBoundsUpdateUsing:[ : newBounds | 
 self  forceBounds: newBounds.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
extent 
^ self  bounds extent.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
visibleA: visibleA_val visibleA := visibleA_val! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
unmapSubtree 
 self unmap.
 self  parent agent ifNotNil:[ : it | 
 it noticeChangeInChildAgentStructure.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForGridRow 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  GridRowCell visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
legalAreaClassesInFlow 
^( self Array new:2)  at:1 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Frame; 
  at:2 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Anchor; 
 yourself.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
parentMayAccommodateNaturalWidthChange 
^ self  hasParent and:[ 
 self  area mayAccommodateVisualsNaturalWidthChange.
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
parentMayAccommodateNaturalHeightChange 
^ self  hasParent and:[ 
 self  area mayAccommodateVisualsNaturalHeightChange.
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
effectivelyVisible 
^ self  visible and:[ 
 self  parent isNil or:[ 
 self  parent effectivelyVisible.
].
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForVerticalViewport 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  ColumnCell visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForFlow 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Anchor visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
updateGeometricProperties 
 self  currentNaturalExtent: self  computeNaturalExtent.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForColumn 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  ColumnCell visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
area ^area! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
unmap 
 self  agent notNil ifTrue:[ 
 self  agent destroy.
 self  agent:nil.
].
 self  childrenDo:[ : each | 
 each unmap.
].
 self  area flushLayoutCaches.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
legalAreaClassesInCompositeVisual 
^( self Array new:2)  at:1 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Frame; 
  at:2 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Anchor; 
 yourself.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
isSqueezing 
^ self  area isSqueezing.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
reportToTranscript: reportBlock 
 self  report: reportBlock using:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  HierarchicalReporter on: (EnclosingObjects_Brazil_VisualClasses_Visual at: 2)  Transcript).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
 self setBounds: newBounds.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForRow 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  RowCell visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
currentNaturalExtent: currentNaturalExtent_val currentNaturalExtent := currentNaturalExtent_val! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
printOn: aStream 
super  printOn: aStream.
 aStream space; 
 nextPutAll:'in '; 
 print: self  area class.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
window 
^ self  parent ifNotNil:[ 
 self  parent window.
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
boundsH: boundsH_val boundsH := boundsH_val! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
localBounds 
^0 @0 extent: self  extent.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
boundsH ^boundsH! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
bounds 
^ self  boundsH value.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
agent ^agent! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
computeNaturalExtent 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
boundsChangedChannel 
^ self  boundsH changed.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setBounds: newBounds 
 self  boundsH value: newBounds.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
Brazil_VisualClasses_Visual_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
reportGeometryToTranscript 
 self  reportToTranscript:[ : visual : reporter | 
 reporter print: visual; 
 nextPutAll:' ('; 
 print: visual bounds; 
 nextPutAll:') n.e.: '; 
 print: visual naturalExtent.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
 self  boundsH value: newBounds.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
allChildrenDo: aBlock 
 self  childrenDo:[ : each | 
 aBlock value: each.
 each allChildrenDo: aBlock.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
discardMappings 
 self  agent ifNotNil:[ 
 self  agent deactivate.
 self  agent:nil.
].
 self  childrenDo:[ : each | 
 each discardMappings.
].
 self  area flushLayoutCaches.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
unlinkFromParent 
 self  incrementUpdateLockLevelBy:1.
 self  unmapSubtree.
 self  parent:nil.
 self  flushLayoutCaches.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForHorizontalViewport 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  RowCell visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
createAgentUsing: agentFactory 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
visible: state 
 self  visibleA value: state.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
updateLockLevel ^updateLockLevel! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
agent: agent_val agent := agent_val! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
linkToParent: theParent 
 self  parent: theParent.
 self  area isFuture ifTrue:[ 
 self  parent setupAreaIn: self.
].
( self  isAreaClassLegalForSelf: self  area class) ifFalse:[ 
 (EnclosingObjects_Brazil_VisualClasses_Visual at: 2)  error:'the child was given an invalid area for this parent'.
].
 self  flushLayoutCaches.
 self  incrementUpdateLockLevelBy:( self  parent updateLockLevel -  self  updateLockLevel).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
hasParent 
^ self  parent notNil.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForWrapper 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Anchor visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
report: reportBlock using: aReporter 
 reportBlock  value: self value: aReporter.
 aReporter increaseIndent.
 self  childrenDo:[ : each | 
 aReporter cr.
 each  report: reportBlock using: aReporter.
].
 aReporter decreaseIndent.
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
blockIncrementalLayoutUpdatesSilentlyWhile: aBlock 
 self  incrementUpdateLockLevelBy:1.
^ aBlock ensure:[ 
 self  incrementUpdateLockLevelBy:-1.
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
setupAreaForCompositeVisual 
 self  setArea:( (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Frame visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
hierarchyLayoutReport 
|  stream |
 stream := (EnclosingObjects_Brazil_VisualClasses_Visual at: 2)  CharacterReadWriteStream on: self String new.
 self  printHierarchyLayoutReportOn: stream.
^ stream contents.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
owner: owner_val owner := owner_val! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
isSquishy 
^false.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
report: reportBlock 
|  reporter |
 reporter := (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  HierarchicalReporter new.
 self   report: reportBlock using: reporter.
^ reporter contents.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
requestBoundsUpdateUsing: aBlock 
 self  updateLockLevel <1 ifTrue:[ 
 self  area visualRequestsBoundsUpdateUsing: aBlock.
].
^ self.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
containsMouse 
^ self  localBounds containsPoint: self  mousePoint.

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
globalOrigin 
^ self  parent ==nil  ifTrue:[ 
 self  origin.
] ifFalse:[ 
 self  parent globalOriginForChildren + self  origin.
].

! !

"September 28, 2010 -> 23:11:48"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
updateLockLevel: updateLockLevel_val updateLockLevel := updateLockLevel_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
notifications 
^ self  duct.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
areaClass: aClass 
( self  isAreaClassLegalForSelf: aClass) ifFalse:[ 
 (EnclosingObjects_Brazil_VisualClasses_Visual at: 2)  error:'invalid area class for this parent-child combination'.
].
 self  setArea:( aClass visual: self).
 self  requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
parent: parent_val parent := parent_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
printLayoutReportOn: aStream 
 aStream print: self; 
 cr; 
 nextPutAll:'bounds: '; 
 print: self  bounds; 
 nextPutAll:' (extent: '; 
 print: self  extent; 
 nextPutAll:')'; 
 cr; 
 nextPutAll:'currentNE: '; 
 print: self  currentNaturalExtent; 
 cr.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
reportGeometry 
^ self  report:[ : visual : reporter | 
 reporter print: visual; 
 nextPutAll:' ('; 
 print: visual bounds; 
 nextPutAll:') n.e.: '; 
 print: visual naturalExtent.
].

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
installSpy 
|  spy |
 self  parent isNil ifTrue:[ 
^ (EnclosingObjects_Brazil_VisualClasses_Visual at: 2)  error:'no parent'.
].
( self  parent isKindOf: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Visual) ifFalse:[ 
^ (EnclosingObjects_Brazil_VisualClasses_Visual at: 2)  error:'already spying'.
].
 spy := (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  InformationRetriever  parent: self  parent child: self.
 self  parent  installInformationRetriever: spy on: self.
 self  parent: spy upwardInterceptor.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
isMapped 
^ self  agent ~~nil and:[ 
 self  agent fullyMapped.
].

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
legalAreaClassesInHorizontalVisualSequence 
^( self Array new:1)  at:1 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  RowCell; 
 yourself.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
flash 
 self  isMapped ifTrue:[ 
 self  agent flash.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
isDescendantOf: another 
^ self  parent == another or:[ 
 self  parent notNil and:[ 
 self  parent isDescendantOf: another.
].
].

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
incrementUpdateLockLevelBy: delta 
 self  withAllChildrenDo:[ : each | 
 each updateLockLevel:( each updateLockLevel + delta).
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
hasChildren 
 self  childrenDo:[ : any | 
^true.
].
^false.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
affectsNaturalExtent: attribute 
 attribute changed =>[ : ignored | 
 self  reportNaturalExtentChange.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
naturalHeightForWidth: width 
^ self  naturalExtent y.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
naturalExtent 
^ self  currentNaturalExtent.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
legalAreaClassesInWrapper 
^( self Array new:2)  at:1 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Frame; 
  at:2 put: (EnclosingObjects_Brazil_VisualClasses_Visual at: 1)  Anchor; 
 yourself.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
announceNaturalExtentChange 
 self  agent ifNotNil:[ : it | 
 it noticeChangeInNaturalExtent.
].
 self  notifications send:#'naturalExtentChanged'.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
parent ^parent! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
desktop 
^ self  parent ifNotNil:[ 
 self  parent desktop.
].

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
children 
|  result |
 result := (EnclosingObjects_Brazil_VisualClasses_Visual at: 2)  OrderedCollection new:10.
 self childrenDo:[ : each | 
 result add: each.
].
^ result.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
withAllChildrenDo: aBlock 
 aBlock value: self.
 self  allChildrenDo: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
visible 
^ self  visibleA value.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
grabMouse 
 self  agent ifNotNil:[ : it | 
 it grabMouse.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
occupyBounds: newBounds 
|  endK |
 endK := self  agent ifNotNil:[ : it | 
 it noteBeginningOfBoundsChangeAndProvideEndContinuation.
].
[ 
 self  occupyBoundsResponse: newBounds.
] ensure:[ 
 endK ifNotNil:[ : it | 
 it value.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
mapSubtreeUsing: agentFactory 
 self createAgentSubtreeUsing: agentFactory.
 self  agent createArtifactsForSubtree.
 self finishedMapping.
 self  parent agent noticeChangeInChildAgentStructure.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
visibleA ^visibleA! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
forceBounds: newBounds 
|  endK |
 endK := self  agent ifNotNil:[ : it | 
 it noteBeginningOfBoundsChangeAndProvideEndContinuation.
].
[ 
 self  forceBoundsResponse: newBounds.
] ensure:[ 
 endK ifNotNil:[ : it | 
 it value.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
currentNaturalExtent ^currentNaturalExtent! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) methodsFor: 'unclassified' !
on: expected do: action 
^ self  notifications =>[ : received | 
 received = expected ifTrue:[ 
 action value.
].
].

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_Visual := eos ! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_Visual := mmd ! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Visual) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:49"!

Delta define: #Brazil_VisualClasses_Shape as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' entryAction borderColorA exitAction mouseUpAction mouseDownAction mouseMovedAction colorA borderWidthA') classVariables: 'MixinMetadata_Brazil_VisualClasses_Shape EnclosingObjects_Brazil_VisualClasses_Shape') !


"September 28, 2010 -> 23:11:49"!

(Delta mirrorFor: #Brazil_VisualClasses_Shape)
comment: 
''!


"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
Brazil_VisualClasses_Shape_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseMovedAction ^mouseMovedAction! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseEntryResponse: response 
 self  entryAction: response.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
exitAction ^exitAction! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderWidth: width 
 self  borderWidthA value: width.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderWidthA: borderWidthA_val borderWidthA := borderWidthA_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
respondToMouseDownLeft 
 self  mouseDownAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
Brazil_VisualClasses_Shape_1_init 
 self colorA:( (EnclosingObjects_Brazil_VisualClasses_Shape at: 1)  Attribute  name:#'color' value: (EnclosingObjects_Brazil_VisualClasses_Shape at: 2)  Color black).
 self borderColorA:( (EnclosingObjects_Brazil_VisualClasses_Shape at: 1)  Attribute  name:#'borderColor' value: (EnclosingObjects_Brazil_VisualClasses_Shape at: 2)  Color black).
 self borderWidthA:( (EnclosingObjects_Brazil_VisualClasses_Shape at: 1)  Attribute  name:#'borderWidth' value:0).
 self entryAction:nil.
 self exitAction:nil.
 self mouseDownAction:nil.
 self mouseUpAction:nil.
 self mouseMovedAction:nil.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseDownAction ^mouseDownAction! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
color: aColor 
 self  colorA value: aColor.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_Shape_superInit_new.
 self Brazil_VisualClasses_Shape_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderColorA: borderColorA_val borderColorA := borderColorA_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseExitResponse: response 
 self  exitAction: response.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseUpAction ^mouseUpAction! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderWidth 
^ self  borderWidthA value.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseUpAction: mouseUpAction_val mouseUpAction := mouseUpAction_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
colorA ^colorA! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
setupAreaForCompositeVisual 
 self setArea:( (EnclosingObjects_Brazil_VisualClasses_Shape at: 1)  ShapeArea visual: self).
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderColorA ^borderColorA! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseMovedAction: mouseMovedAction_val mouseMovedAction := mouseMovedAction_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
respondToMouseUpLeft 
 self  mouseUpAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderColor 
^ self  borderColorA value.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
exitAction: exitAction_val exitAction := exitAction_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
respondToMouseEntry 
 self  entryAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
respondToMouseMove 
 self  mouseMovedAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
respondToMouseExit 
 self  exitAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
color 
^ self  colorA value.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderColor: aColor 
 self  borderColorA value: aColor.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseDownAction: mouseDownAction_val mouseDownAction := mouseDownAction_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
legalAreaClassesInCompositeVisual 
^(( self Array new:1)  at:1 put: (EnclosingObjects_Brazil_VisualClasses_Shape at: 1)  ShapeArea; 
 yourself) ,super  legalAreaClassesInCompositeVisual.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseUpLeftResponse: response 
 self  mouseUpAction: response.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
entryAction: entryAction_val entryAction := entryAction_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
colorA: colorA_val colorA := colorA_val! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseMoveResponse: response 
 self  mouseMovedAction: response.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
borderWidthA ^borderWidthA! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
mouseDownLeftResponse: response 
 self  mouseDownAction: response.
^ self.

! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) methodsFor: 'unclassified' !
entryAction ^entryAction! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_Shape := eos ! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_Shape := mmd ! !

"September 28, 2010 -> 23:11:49"!

! (Delta mirrorFor: #Brazil_VisualClasses_Shape) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:49"!

Delta define: #Brazil_VisualClasses_ContainerVisual as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' colorA') classVariables: 'MixinMetadata_Brazil_VisualClasses_ContainerVisual EnclosingObjects_Brazil_VisualClasses_ContainerVisual') !


"September 28, 2010 -> 23:11:50"!

(Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual)
comment: 
''!


"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
globalOriginForChildren 
^ self globalOrigin.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
color 
^ self  colorA value.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
Brazil_VisualClasses_ContainerVisual_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
innerExtent 
^ self  innerBounds extent.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
mayAccommodateNaturalWidthChangeOf: child 
^ self parentMayAccommodateNaturalWidthChange.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
innerBounds 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
color: newColor 
 self  colorA value: newColor.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
compositionExtent 
^ self  innerExtent.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_ContainerVisual_superInit_new.
 self Brazil_VisualClasses_ContainerVisual_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
setupAreaIn: child 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
restructuring: restructureBlock 
|  result |
 self notifications send:#'childrenChanging'.
 result := restructureBlock value.
 self notifications send:#'childrenChanged'.
^ result.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
compositionBounds 
^0 @0 extent: self  innerExtent.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
Brazil_VisualClasses_ContainerVisual_1_init 
 self colorA:( (EnclosingObjects_Brazil_VisualClasses_ContainerVisual at: 1)  Attribute  name:#'color' value: (EnclosingObjects_Brazil_VisualClasses_ContainerVisual at: 2)  Color transparent).
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
mayAccommodateNaturalHeightChangeOf: child 
^ self parentMayAccommodateNaturalHeightChange.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
colorA: colorA_val colorA := colorA_val! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) methodsFor: 'unclassified' !
colorA ^colorA! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_ContainerVisual := eos ! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_ContainerVisual := mmd ! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_ContainerVisual) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:50"!

Delta define: #Brazil_VisualClasses_VisualCollection as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' childrenX') classVariables: 'MixinMetadata_Brazil_VisualClasses_VisualCollection EnclosingObjects_Brazil_VisualClasses_VisualCollection') !


"September 28, 2010 -> 23:11:50"!

(Delta mirrorFor: #Brazil_VisualClasses_VisualCollection)
comment: 
''!


"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
add: newChild 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
childrenX: childrenX_val childrenX := childrenX_val! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
Brazil_VisualClasses_VisualCollection_1_init 
 self childrenX: (EnclosingObjects_Brazil_VisualClasses_VisualCollection at: 2)  OrderedCollection new.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
innerExtent 
^ self  innerBounds extent.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
addAtBack: newChild 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
remove: aChild 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
innerBounds 
^0 @0 extent: self extent.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
size 
^ self  children size.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_VisualCollection_superInit_new.
 self Brazil_VisualClasses_VisualCollection_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
add: newChild in: areaClass 
(( self legalAreaClassesFor: newChild) select:[ : some | 
 areaClass includesBehavior: some.
]) isEmpty not ifFalse:[ 
 (EnclosingObjects_Brazil_VisualClasses_VisualCollection at: 2)  error:'invalid area class for this child in this container'.
].
 newChild areaClass: areaClass.
 self add: newChild.
^ newChild.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
Brazil_VisualClasses_VisualCollection_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
childrenX ^childrenX! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
setupAreaForWrapper 
 self setArea:( (EnclosingObjects_Brazil_VisualClasses_VisualCollection at: 1)  Frame visual: self) fullyCoverParent.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
addNew: visualClass setup: setupBlock 
|  child |
 child := visualClass new.
 setupBlock value: child.
 self  add: child.
^ child.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
flushLayoutCaches 
super  flushLayoutCaches.
 self updateGeometricProperties.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
addNewWrapped: visualClass setup: setupBlock 
|  child  wrapper |
 child := visualClass new.
 wrapper := (EnclosingObjects_Brazil_VisualClasses_VisualCollection at: 1)  Wrapper with: child.
 setupBlock value: child.
 self  add: wrapper.
^ child.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
installInformationRetriever: spy on: child 
 self  children  at:( self  children indexOf: child) put: spy downwardInterceptor.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
children 
^ self  childrenX.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
add: newChild setup: setupBlock 
 self add: newChild.
 setupBlock value: newChild.
^ newChild.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) methodsFor: 'unclassified' !
childrenDo: aBlock 
 self  children do: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_VisualCollection := eos ! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_VisualCollection := mmd ! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualCollection) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:50"!

Delta define: #Brazil_VisualClasses_VerticalVisualSequence as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_VisualClasses_VerticalVisualSequence EnclosingObjects_Brazil_VisualClasses_VerticalVisualSequence') !


"September 28, 2010 -> 23:11:50"!

(Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence)
comment: 
''!


"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
computeNaturalHeightForWidth: width 
|  total |
 total :=0.
 self childrenDo:[ : each | 
 total := total +( each area naturalHeightForWidth: width).
].
^ total +(( self children size - 1 max:0) * self gap).

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenWithNoElasticityByForce: force 
|  base  across |
 base :=0.
 across := self  orthogonalOf: self innerExtent.
 self childrenDo:[ : each | 
|  allocated |
 allocated := each area naturalHeightForWidth: across.
 each area currentLayoutBasis: allocated.
 force  ifTrue:[ 
 each forceBounds:( self   childRectangleFrom: base size: allocated).
] ifFalse:[ 
 each occupyBounds:( self   childRectangleFrom: base size: allocated).
].
 base := base + allocated + self gap.
].
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
childInElasticLineup: child requestsBoundsUpdateUsing: continuation 
|  newDesiredHeight |
 newDesiredHeight := child area naturalHeightForWidth: self innerExtent x.
^ newDesiredHeight = child area currentLayoutBasis  ifTrue:[ 
 continuation value: child bounds.
] ifFalse:[ 
super   childInElasticLineup: child requestsBoundsUpdateUsing: continuation.
].

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenWithElasticityByForce: force 
|  excess  totalElasticity  elasticityFactor  base  across |
 across := self innerExtent x.
 excess := self innerExtent y - ( self naturalHeightForWidth: across).
 totalElasticity :=0.
 self childrenDo:[ : each | 
 totalElasticity := totalElasticity + each area elasticity.
].
 elasticityFactor := totalElasticity =0  ifTrue:[ 
0.
] ifFalse:[ 
 excess asFloat / totalElasticity.
].
 base :=0.
 self childrenDo:[ : each | 
|  requested  allocated |
 requested := each area naturalHeightForWidth: across.
 each area currentLayoutBasis: requested.
 allocated := requested +( each area elasticity * elasticityFactor) floor.
 force  ifTrue:[ 
 each forceBounds:( self   childRectangleFrom: base size: allocated).
] ifFalse:[ 
 each occupyBounds:( self   childRectangleFrom: base size: allocated).
].
 base := base + allocated + self gap.
].
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_VerticalVisualSequence_superInit_new.
 self Brazil_VisualClasses_VerticalVisualSequence_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
Brazil_VisualClasses_VerticalVisualSequence_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
pointPrincipal: y orthogonal: x 
^ x @ y.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForVerticalVisualSequence: self.
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
childInRigidSquishyLineup: child requestsBoundsUpdateUsing: continuation 
|  newDesiredHeight |
 newDesiredHeight := child area naturalHeightForWidth: self innerExtent x.
^ newDesiredHeight = child area currentLayoutBasis  ifTrue:[ 
 continuation value: child bounds.
] ifFalse:[ 
super   childInRigidSquishyLineup: child requestsBoundsUpdateUsing: continuation.
].

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
repositionChildrenStartingWith: child using: continuation 
|  index  boundsNow  base  size  shift |
 index := self indexOf: child.
 boundsNow := child bounds.
 base := boundsNow top.
 size := child area naturalHeightForWidth: self innerExtent x.
 child area currentLayoutBasis: size.
 shift := size -  boundsNow height.
 shift =0  ifTrue:[ 
 continuation value: child bounds.
] ifFalse:[ 
 continuation value:( self   childRectangleFrom: base size: size).
 index +1  to: self children size do:[ : i | 
|  each |
 each := self children at: i.
 each occupyBounds:( self   shiftRectangle: each bounds by: shift).
].
].
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
isSqueezing 
^true.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
^ child legalAreaClassesInVerticalVisualSequence.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
shiftRectangle: rect by: shift 
^ rect origin +(0 @ shift) extent: rect extent.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
principalOf: aPoint 
^ aPoint y.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
orthogonalOf: aPoint 
^ aPoint x.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
childRectangleFrom: base size: size 
|  box |
 box := self innerBounds.
^ box left @ base corner:( box right @( base + size)).

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
setPositionOfNewlyInserted: child 
|  index  base  childSize  shift |
 index := self children indexOf: child.
 base := index >1  ifTrue:[ 
( self children at:( index - 1)) bounds bottom + self gap.
] ifFalse:[ 
0.
].
 childSize := child area naturalHeightForWidth: self orthogonalSize.
 child area currentLayoutBasis: childSize.
 child occupyBounds:( self   childRectangleFrom: base size: childSize).
 shift := childSize + self gap.
 index +1  to: self children size do:[ : i | 
|  each |
 each := self children at: i.
 each occupyBounds:( self   shiftRectangle: each bounds by: shift).
].
^ self.

! !

"September 28, 2010 -> 23:11:50"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenByRequestFrom: child using: continuation 
|  across  excessY  totalElasticity  elasticityFactor  base |
 across := self innerExtent x.
 excessY := self innerExtent y - ( self naturalHeightForWidth: across).
 totalElasticity :=0.
 self childrenDo:[ : each | 
 totalElasticity := totalElasticity + each area elasticity.
].
 elasticityFactor := totalElasticity =0  ifTrue:[ 
0.
] ifFalse:[ 
 excessY asFloat / totalElasticity.
].
 base :=0.
 self childrenDo:[ : each | 
|  requested  allocated |
 requested := each area naturalHeightForWidth: across.
 each area currentLayoutBasis: requested.
 allocated := requested +( each area elasticity * elasticityFactor) floor.
 each == child  ifTrue:[ 
 continuation value:( self   childRectangleFrom: base size: allocated).
] ifFalse:[ 
 each occupyBounds:( self   childRectangleFrom: base size: allocated).
].
 base := base + allocated + self gap.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) methodsFor: 'unclassified' !
Brazil_VisualClasses_VerticalVisualSequence_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_VerticalVisualSequence := eos ! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_VerticalVisualSequence := mmd ! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VerticalVisualSequence) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:51"!

Delta define: #Brazil_VisualClasses_HorizontalVisualSequence as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_VisualClasses_HorizontalVisualSequence EnclosingObjects_Brazil_VisualClasses_HorizontalVisualSequence') !


"September 28, 2010 -> 23:11:51"!

(Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence)
comment: 
''!


"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
computeNaturalHeightForWidth: suggestedWidth 
|  excess  totalElasticity  elasticityFactor  base  across  maxHeight |
 excess := suggestedWidth - ( self  principalOf: self naturalExtent).
 totalElasticity :=0.
 self childrenDo:[ : each | 
 totalElasticity := totalElasticity + each area elasticity.
].
 elasticityFactor :=[ 
 excess asFloat / totalElasticity.
]  on: (EnclosingObjects_Brazil_VisualClasses_HorizontalVisualSequence at: 2)  ZeroDivide do:[ : ex | 
 ex return:0.
].
 base :=0.
 maxHeight :=0.
 self childrenDo:[ : each | 
|  allocated |
 allocated := each area principalSize +( each area elasticity * elasticityFactor) floor.
 maxHeight := maxHeight max:( each area naturalHeightForWidth: allocated).
].
^ maxHeight.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenWithNoElasticityByForce: force 
|  base |
 base :=0.
 self childrenDo:[ : each | 
|  allocated |
 allocated := each area principalSize.
 each area currentLayoutBasis: allocated.
 force  ifTrue:[ 
 each forceBounds:( self   childRectangleFrom: base size: allocated).
] ifFalse:[ 
 each occupyBounds:( self   childRectangleFrom: base size: allocated).
].
 base := base + allocated + self gap.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
setPositionOfNewlyInserted: child 
|  index  base  childSize  shift |
 index := self children indexOf: child.
 base := index >1  ifTrue:[ 
( self children at:( index - 1)) bounds right + self gap.
] ifFalse:[ 
0.
].
 childSize := child area principalSize.
 child area currentLayoutBasis: childSize.
 child occupyBounds:( self   childRectangleFrom: base size: childSize).
 shift := childSize + self gap.
 index +1  to: self children size do:[ : i | 
|  each |
 each := self children at: i.
 each occupyBounds:( self   shiftRectangle: each bounds by: shift).
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
childRectangleFrom: base size: size 
|  box |
 box := self innerBounds.
^ base @ box top corner:( base + size @ box bottom).

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
^ child legalAreaClassesInHorizontalVisualSequence.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
shiftRectangle: rect by: shift 
^ rect origin +( shift @0) extent: rect extent.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenWithElasticityByForce: force 
|  excess  totalElasticity  elasticityFactor  base |
 excess := self innerExtent x -  self naturalExtent x.
 totalElasticity :=0.
 self childrenDo:[ : each | 
 totalElasticity := totalElasticity + each area elasticity.
].
 elasticityFactor := totalElasticity =0  ifTrue:[ 
0.
] ifFalse:[ 
 excess asFloat / totalElasticity.
].
 base :=0.
 self childrenDo:[ : each | 
|  requested  allocated |
 requested := each area principalSize.
 each area currentLayoutBasis: requested.
 allocated := requested +( each area elasticity * elasticityFactor) floor.
 force  ifTrue:[ 
 each forceBounds:( self   childRectangleFrom: base size: allocated).
] ifFalse:[ 
 each occupyBounds:( self   childRectangleFrom: base size: allocated).
].
 base := base + allocated + self gap.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
pointPrincipal: x orthogonal: y 
^ x @ y.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
principalOf: aPoint 
^ aPoint x.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
orthogonalOf: aPoint 
^ aPoint y.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
Brazil_VisualClasses_HorizontalVisualSequence_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
repositionChildrenStartingWith: child using: continuation 
|  index  base  size  shift |
 index := self indexOf: child.
 base := child bounds origin x.
 size := child area principalSize.
 shift := size -  child extent x.
 shift =0  ifTrue:[ 
 continuation value: child bounds.
] ifFalse:[ 
 continuation value:( self   childRectangleFrom: base size: size).
 index +1  to: self children size do:[ : i | 
|  each |
 each := self children at: i.
 each occupyBounds:( self   shiftRectangle: each bounds by: shift).
].
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenByRequestFrom: child using: continuation 
|  excessX  totalElasticity  elasticityFactor  base |
 excessX := self innerExtent x -  self naturalExtent x.
 totalElasticity :=0.
 self childrenDo:[ : each | 
 totalElasticity := totalElasticity + each area elasticity.
].
 elasticityFactor := totalElasticity =0  ifTrue:[ 
0.
] ifFalse:[ 
 excessX asFloat / totalElasticity.
].
 base :=0.
 self childrenDo:[ : each | 
|  requested  allocatedX |
 requested := each area principalSize.
 each area currentLayoutBasis: requested.
 allocatedX := requested +( each area elasticity * elasticityFactor) floor.
 each == child  ifTrue:[ 
 continuation value:( self   childRectangleFrom: base size: allocatedX).
] ifFalse:[ 
 each occupyBounds:( self   childRectangleFrom: base size: allocatedX).
].
 base := base + allocatedX + self gap.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
Brazil_VisualClasses_HorizontalVisualSequence_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_HorizontalVisualSequence_superInit_new.
 self Brazil_VisualClasses_HorizontalVisualSequence_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_HorizontalVisualSequence := eos ! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_HorizontalVisualSequence := mmd ! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_HorizontalVisualSequence) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:51"!

Delta define: #Brazil_VisualClasses_VisualSequence as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' cachedNaturalHeightWidth gapA cachedNaturalHeightForWidth') classVariables: 'MixinMetadata_Brazil_VisualClasses_VisualSequence EnclosingObjects_Brazil_VisualClasses_VisualSequence') !


"September 28, 2010 -> 23:11:51"!

(Delta mirrorFor: #Brazil_VisualClasses_VisualSequence)
comment: 
''!


"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
orthogonalSize 
^ self  orthogonalOf: self extent.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
computeNaturalHeightForWidth: size 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
add: child before: existing 
^ self restructuring:[ 
 self   privateAdd: child using:[ 
 self children  add: child before: existing.
].
].

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
gap 
^ self  gapA value.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
principalSize 
^ self  principalOf: self extent.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
super  forceBoundsResponse: newBounds.
 self  repositionAllChildrenByForce:true.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
indexOf: child 
 self children keysAndValuesDo:[ : index : each | 
 each == child ifTrue:[ 
^ index.
].
].
 (EnclosingObjects_Brazil_VisualClasses_VisualSequence at: 2)  error:'the argument is not a child of the receiver'.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenWithElasticityByForce: force 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
cachedNaturalHeightWidth: cachedNaturalHeightWidth_val cachedNaturalHeightWidth := cachedNaturalHeightWidth_val! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
pointPrincipal: principalSize orthogonal: orthogonalSize 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
Brazil_VisualClasses_VisualSequence_1_init 
 self gapA:( (EnclosingObjects_Brazil_VisualClasses_VisualSequence at: 1)  Attribute  name:#'gap' value:0).
 self cachedNaturalHeightWidth:nil.
 self cachedNaturalHeightForWidth:nil.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
addAtBack: child 
^ self restructuring:[ 
 self  privateAdd: child using:[ 
 self children addFirst: child.
].
].

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForVisualSequence: self.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
shiftChildrenAtAndAfter: index by: shift 
 index  to: self children size do:[ : i | 
|  child |
 child := self children at: i.
 child occupyBounds:( self   shiftRectangle: child bounds by: shift).
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
privateAdd: child using: modifier 
 modifier value.
 child linkToParent: self.
 self  cachedNaturalHeightWidth:nil.
 self isMapped ifTrue:[ 
 self  updateGeometricProperties.
 self requestBoundsUpdateUsing:[ : newBounds | 
( self bounds = newBounds and:[ 
 self  hasElasticChildren not.
])  ifTrue:[ 
 self  setPositionOfNewlyInserted: child.
] ifFalse:[ 
 self boundsH value: newBounds.
 self  repositionAllChildrenByForce:false.
].
].
 child mapSubtree.
].
 self announceNaturalExtentChange.
^ child.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
hasElasticChildren 
 self childrenDo:[ : each | 
( each area isFuture not and:[ 
 each area isElastic.
]) ifTrue:[ 
^true.
].
].
^false.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_VisualSequence_superInit_new.
 self Brazil_VisualClasses_VisualSequence_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
gapA: gapA_val gapA := gapA_val! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
childInRigidFixedLineup: child requestsBoundsUpdateUsing: continuation 
|  oldNaturalExtent |
 oldNaturalExtent := self naturalExtent.
 self  updateGeometricProperties.
 self  cachedNaturalHeightWidth:nil.
 self naturalExtent = oldNaturalExtent  ifTrue:[ 
 self   repositionChildrenStartingWith: child using: continuation.
] ifFalse:[ 
 self requestBoundsUpdateUsing:[ : newBounds | 
|  crossSizeChanged |
 crossSizeChanged :=( self  orthogonalOf: self bounds extent) ~=( self  orthogonalOf: newBounds extent).
 self setBounds: newBounds.
 crossSizeChanged  ifTrue:[ 
 self   repositionAllChildrenByRequestFrom: child using: continuation.
] ifFalse:[ 
 self   repositionChildrenStartingWith: child using: continuation.
].
].
 self announceNaturalExtentChange.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
 self  hasElasticChildren  ifTrue:[ 
 self   childInElasticLineup: child requestsBoundsUpdateUsing: continuation.
] ifFalse:[ 
 self   childInRigidLineup: child requestsBoundsUpdateUsing: continuation.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
repositionChildrenStartingWith: child using: continuation 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
setPositionOfNewlyInserted: child 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
shiftRectangle: rect by: shift 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
childInRigidLineup: child requestsBoundsUpdateUsing: continuation 
( self isSqueezing and:[ 
 child area isVisualSquishy.
])  ifTrue:[ 
 self   childInRigidSquishyLineup: child requestsBoundsUpdateUsing: continuation.
] ifFalse:[ 
 self   childInRigidFixedLineup: child requestsBoundsUpdateUsing: continuation.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  cachedNaturalHeightWidth:nil.
 self children do:[ : each | 
 each area flushLayoutCaches.
].
super  flushLayoutCaches.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
gapA ^gapA! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
childInElasticLineup: child requestsBoundsUpdateUsing: continuation 
|  oldNaturalExtent |
 self  cachedNaturalHeightWidth:nil.
 oldNaturalExtent := self naturalExtent.
 self  updateGeometricProperties.
 self requestBoundsUpdateUsing:[ : newBounds | 
 self setBounds: newBounds.
 self   repositionAllChildrenByRequestFrom: child using: continuation.
 self currentNaturalExtent = self naturalExtent ifFalse:[ 
 self announceNaturalExtentChange.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
addFirst: newChild 
^ self addAtBack: newChild.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
privateSetChildren: newChildren 
 self childrenX: newChildren.
 self childrenX do:[ : each | 
 each linkToParent: self.
].
 self  cachedNaturalHeightWidth:nil.
 self isMapped ifTrue:[ 
 self  updateGeometricProperties.
 self requestBoundsUpdateUsing:[ : newBounds | 
 self boundsH value: newBounds.
 self  repositionAllChildrenByForce:true.
].
 self children do:[ : each | 
 each mapSubtree.
].
].
^ self childrenX.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
addBlank 
^ self  add: (EnclosingObjects_Brazil_VisualClasses_VisualSequence at: 1)  Blank new.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
add: child 
^ self restructuring:[ 
 self  privateAdd: child using:[ 
 self children add: child.
].
].

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenWithNoElasticityByForce: force 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
childRectangleFrom: base size: size 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
add: child after: existing 
^ self restructuring:[ 
 self   privateAdd: child using:[ 
 self children  add: child after: existing.
].
].

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
addElasticBlank 
^ self  addNew: (EnclosingObjects_Brazil_VisualClasses_VisualSequence at: 1)  Blank setup:[ : blank | 
 blank area elasticity:1.
].

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
childInRigidSquishyLineup: child requestsBoundsUpdateUsing: continuation 
|  oldNaturalExtent |
 self  cachedNaturalHeightWidth:nil.
 oldNaturalExtent := self naturalExtent.
 self  updateGeometricProperties.
 self requestBoundsUpdateUsing:[ : newBounds | 
|  crossSizeChanged |
 crossSizeChanged :=( self  orthogonalOf: self bounds extent) ~=( self  orthogonalOf: newBounds extent).
 self setBounds: newBounds.
 crossSizeChanged  ifTrue:[ 
 self   repositionAllChildrenByRequestFrom: child using: continuation.
] ifFalse:[ 
 self   repositionChildrenStartingWith: child using: continuation.
].
].
 self naturalExtent = oldNaturalExtent ifFalse:[ 
 self announceNaturalExtentChange.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
gap: newGap 
|  oldNaturalExtent |
 oldNaturalExtent := self naturalExtent.
 self  gapA value: newGap.
 self  cachedNaturalHeightWidth:nil.
 self  updateGeometricProperties.
 self  repositionAllChildrenByForce:false.
 oldNaturalExtent ~= self naturalExtent ifTrue:[ 
 self announceNaturalExtentChange.
].
^ self.

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
addBlankSize: size 
^ self  addNew: (EnclosingObjects_Brazil_VisualClasses_VisualSequence at: 1)  Blank setup:[ : blank | 
 blank area principalSize: size.
].

! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
cachedNaturalHeightWidth ^cachedNaturalHeightWidth! !

"September 28, 2010 -> 23:11:51"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
reorder: visuals 
( visuals reject:[ : ea | 
 self children includes: ea.
]) isEmpty ifFalse:[ 
 (EnclosingObjects_Brazil_VisualClasses_VisualSequence at: 2)  error:'bad argument'.
].
 self childrenX: visuals asMutableArrayList.
 self  repositionAllChildrenByForce:false.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
at: index 
^ self children at: index.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth ^cachedNaturalHeightForWidth! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
removeAt: index 
 self  remove:( self  at: index).
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
updateGeometricProperties 
 self  cachedNaturalHeightWidth:nil.
super  updateGeometricProperties.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenByRequestFrom: child using: continuation 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
children: newChildren 
 self restructuring:[ 
 self  privateRemoveAllChildren.
 self  privateSetChildren: newChildren.
].
 self announceNaturalExtentChange.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
add: child afterIndex: index 
^ self restructuring:[ 
 self   privateAdd: child using:[ 
 self children  add: child afterIndex: index.
].
].

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth: cachedNaturalHeightForWidth_val cachedNaturalHeightForWidth := cachedNaturalHeightForWidth_val! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
isSquishy 
 self childrenDo:[ : each | 
 each area isVisualSquishy ifTrue:[ 
^true.
].
].
^false.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
Brazil_VisualClasses_VisualSequence_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
computeNaturalExtent 
|  principalSum  gapSum  orthogonalMax |
 principalSum :=0.
 orthogonalMax :=0.
 self childrenDo:[ : each | 
|  eachTarget |
 eachTarget := each area naturalExtent.
 each area lastKnownNaturalExtent: eachTarget.
 principalSum := principalSum +( self  principalOf: eachTarget).
 orthogonalMax := orthogonalMax max:( self  orthogonalOf: eachTarget).
].
 gapSum :=( self children size - 1 max:0) * self  gap.
^ self   pointPrincipal: principalSum + gapSum orthogonal: orthogonalMax.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
|  oldExtent |
 oldExtent := self innerExtent.
super  occupyBoundsResponse: newBounds.
 oldExtent = self innerExtent  ifTrue:[ 
 self childrenDo:[ : each | 
 each reiterateBounds.
].
] ifFalse:[ 
 self  hasElasticChildren  ifTrue:[ 
 self  repositionAllChildrenWithElasticityByForce:false.
] ifFalse:[ 
( self  orthogonalOf: oldExtent) =( self  orthogonalOf: self innerExtent) ifFalse:[ 
 self  repositionAllChildrenWithNoElasticityByForce:false.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
privateRemoveAllChildren 
|  formerChildren |
 formerChildren := self childrenX.
 self childrenX: (EnclosingObjects_Brazil_VisualClasses_VisualSequence at: 2)  OrderedCollection new.
 formerChildren do:[ : each | 
 each unlinkFromParent.
].
 self  cachedNaturalHeightWidth:nil.
 self  updateGeometricProperties.
 self requestBoundsUpdateUsing:[ : newBounds | 
 self boundsH value: newBounds.
].
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
add: child beforeIndex: index 
^ self restructuring:[ 
 self   privateAdd: child using:[ 
 self children  add: child beforeIndex: index.
].
].

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
remove: aChild 
|  hadElasticChildren  index  shift |
 hadElasticChildren := self  hasElasticChildren.
 index := self  indexOf: aChild.
 shift :=( self  principalOf: aChild extent) + self  gap.
 self restructuring:[ 
 self children remove: aChild.
 aChild unlinkFromParent.
 self  cachedNaturalHeightWidth:nil.
 self  updateGeometricProperties.
 self requestBoundsUpdateUsing:[ : newBounds | 
( self bounds = newBounds and:[ 
 hadElasticChildren not.
])  ifTrue:[ 
 self   shiftChildrenAtAndAfter: index by: shift negated.
] ifFalse:[ 
 self boundsH value: newBounds.
 self  repositionAllChildrenByForce:false.
].
].
].
 self announceNaturalExtentChange.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
naturalHeightForWidth: width 
 self  cachedNaturalHeightWidth = width ifFalse:[ 
 self  cachedNaturalHeightWidth: width.
 self  cachedNaturalHeightForWidth:( self  computeNaturalHeightForWidth: width).
].
^ self  cachedNaturalHeightForWidth.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
principalOf: aPoint 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
orthogonalOf: aPoint 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
at: index put: child 
#'BOGUS' yourself.
 self  remove:( self  at: index).
^ self   add: child beforeIndex: index.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) methodsFor: 'unclassified' !
repositionAllChildrenByForce: force 
 self  hasElasticChildren  ifTrue:[ 
 self  repositionAllChildrenWithElasticityByForce: force.
] ifFalse:[ 
 self  repositionAllChildrenWithNoElasticityByForce: force.
].
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_VisualSequence := eos ! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_VisualSequence := mmd ! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_VisualSequence) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:52"!

Delta define: #Brazil_VisualClasses_BoxShape as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' sizeS') classVariables: 'MixinMetadata_Brazil_VisualClasses_BoxShape EnclosingObjects_Brazil_VisualClasses_BoxShape') !


"September 28, 2010 -> 23:11:52"!

(Delta mirrorFor: #Brazil_VisualClasses_BoxShape)
comment: 
''!


"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
size: newSize 
 self  sizeS: newSize.
 self reportNaturalExtentChange.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
sizeS ^sizeS! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
naturalExtent 
^ self  sizeS.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self  sizeS.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
sizeS: sizeS_val sizeS := sizeS_val! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
Brazil_VisualClasses_BoxShape_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
Brazil_VisualClasses_BoxShape_1_init 
 self sizeS:(0 @0).
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
size 
^ self  sizeS.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_BoxShape_superInit_new.
 self Brazil_VisualClasses_BoxShape_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_BoxShape := eos ! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_BoxShape := mmd ! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_BoxShape) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:52"!

Delta define: #Brazil_VisualClasses_LeafVisual as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_VisualClasses_LeafVisual EnclosingObjects_Brazil_VisualClasses_LeafVisual') !


"September 28, 2010 -> 23:11:52"!

(Delta mirrorFor: #Brazil_VisualClasses_LeafVisual)
comment: 
''!


"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) methodsFor: 'unclassified' !
Brazil_VisualClasses_LeafVisual_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) methodsFor: 'unclassified' !
children 
^ self Array new.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) methodsFor: 'unclassified' !
childrenDo: aBlock 
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) methodsFor: 'unclassified' !
hasChildren 
^false.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) methodsFor: 'unclassified' !
Brazil_VisualClasses_LeafVisual_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) methodsFor: 'unclassified' !
new 
 self Brazil_VisualClasses_LeafVisual_superInit_new.
 self Brazil_VisualClasses_LeafVisual_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_VisualClasses_LeafVisual := eos ! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_VisualClasses_LeafVisual := mmd ! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_VisualClasses_LeafVisual) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:52"!

Delta define: #Brazil_AreaClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Brazil_AreaClasses_GridRowCell_slot Brazil_AreaClasses_FutureArea_slot MessageRecorder Brazil_AreaClasses_Area_slot Brazil_AreaClasses_Frame_slot Brazil_AreaClasses_Anchor_slot Brazil_AreaClasses_RowCell_slot Brazil_AreaClasses_ColumnCell_slot Brazil_AreaClasses_PolygonArea_slot Brazil_AreaClasses_WidthEqualizingRowCell_slot Brazil_AreaClasses_LineArea_slot Brazil_AreaClasses_ShapeArea_slot Brazil_AreaClasses_SequenceCell_slot Brazil_AreaClasses_CellWidthEqualizer_slot') classVariables: 'MixinMetadata_Brazil_AreaClasses EnclosingObjects_Brazil_AreaClasses') !


"September 28, 2010 -> 23:11:52"!

(Delta mirrorFor: #Brazil_AreaClasses)
comment: 
''!


"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
ColumnCell
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_ColumnCell_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_ColumnCell.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  SequenceCell)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_ColumnCell_slot := myNested.
		].
	^Brazil_AreaClasses_ColumnCell_slot! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
Anchor
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_Anchor_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_Anchor.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  Area)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_Anchor_slot := myNested.
		].
	^Brazil_AreaClasses_Anchor_slot! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
MessageRecorder: MessageRecorder_val MessageRecorder := MessageRecorder_val! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
CellWidthEqualizer
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_CellWidthEqualizer_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_CellWidthEqualizer.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_CellWidthEqualizer_slot := myNested.
		].
	^Brazil_AreaClasses_CellWidthEqualizer_slot! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
LineArea
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_LineArea_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_LineArea.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  Area)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_LineArea_slot := myNested.
		].
	^Brazil_AreaClasses_LineArea_slot! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
MessageRecorder ^MessageRecorder! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
FutureArea
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_FutureArea_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_FutureArea.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  MessageRecorder)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_FutureArea_slot := myNested.
		].
	^Brazil_AreaClasses_FutureArea_slot! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
RowCell
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_RowCell_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_RowCell.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  SequenceCell)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_RowCell_slot := myNested.
		].
	^Brazil_AreaClasses_RowCell_slot! !

"September 28, 2010 -> 23:11:52"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
WidthEqualizingRowCell
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_WidthEqualizingRowCell_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_WidthEqualizingRowCell.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  RowCell)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_WidthEqualizingRowCell_slot := myNested.
		].
	^Brazil_AreaClasses_WidthEqualizingRowCell_slot! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
Frame
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_Frame_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_Frame.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  Area)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_Frame_slot := myNested.
		].
	^Brazil_AreaClasses_Frame_slot! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
Brazil_AreaClasses_1_init 
 self MessageRecorder: (EnclosingObjects_Brazil_AreaClasses at: 1)  plumbing MessageRecorder.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
Brazil_AreaClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
ShapeArea
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_ShapeArea_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_ShapeArea.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  Area)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_ShapeArea_slot := myNested.
		].
	^Brazil_AreaClasses_ShapeArea_slot! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
PolygonArea
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_PolygonArea_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_PolygonArea.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  Area)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_PolygonArea_slot := myNested.
		].
	^Brazil_AreaClasses_PolygonArea_slot! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
GridRowCell
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_GridRowCell_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_GridRowCell.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  RowCell)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_GridRowCell_slot := myNested.
		].
	^Brazil_AreaClasses_GridRowCell_slot! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_superInit_new.
 self Brazil_AreaClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
SequenceCell
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_SequenceCell_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_SequenceCell.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self  Area)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_SequenceCell_slot := myNested.
		].
	^Brazil_AreaClasses_SequenceCell_slot! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) methodsFor: 'unclassified' !
Area
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AreaClasses_Area_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AreaClasses 
			nestedMixins at: #Brazil_AreaClasses_Area.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AreaClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AreaClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AreaClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AreaClasses_Area_slot := myNested.
		].
	^Brazil_AreaClasses_Area_slot! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses := eos ! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses := mmd ! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:53"!

Delta define: #Brazil_AreaClasses_Anchor as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' yOffsetS xFractionS cachedSuggestedParentExtent yAnchorFractionS lastSuggestedExtentKnownToParent xOffsetS yFractionS xAnchorFractionS') classVariables: 'MixinMetadata_Brazil_AreaClasses_Anchor EnclosingObjects_Brazil_AreaClasses_Anchor') !


"September 28, 2010 -> 23:11:53"!

(Delta mirrorFor: #Brazil_AreaClasses_Anchor)
comment: 
''!


"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beTopCenter 
 self  xFractionS:1/2.
 self  yFractionS:0.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:1/2.
 self  yAnchorFractionS:0.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yOffset: offset 
 self  yOffsetS: offset.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yAnchorFraction: fraction 
 self  yAnchorFractionS: fraction.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beLeftCenter 
 self  xFractionS:0.
 self  yFractionS:1/2.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:0.
 self  yAnchorFractionS:1/2.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beRightCenter 
 self  xFractionS:1.
 self  yFractionS:1/2.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:1.
 self  yAnchorFractionS:1/2.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xOffset: offset 
 self  xOffsetS: offset.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalHeightChange 
^true.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xAnchorFraction: fraction 
 self  xAnchorFractionS: fraction.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yOffsetS: yOffsetS_val yOffsetS := yOffsetS_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
copyConfigurationTo: another 
 another copyConfigurationFromAnchor: self.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
anchorPosition: newOrigin 
 self  xFractionS:0.
 self  xOffsetS: newOrigin x.
 self  yFractionS:0.
 self  yOffsetS: newOrigin y.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_Anchor_superInit_new.
 self Brazil_AreaClasses_Anchor_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
suggestedParentHeightForWidth: width 
^ self  suggestedParentExtent y.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xFraction: fraction 
 self  xFractionS: fraction.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beCentered 
 self  xFractionS:1/2.
 self  yFractionS:1/2.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:1/2.
 self  yAnchorFractionS:1/2.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yFraction: fraction 
 self  yFractionS: fraction.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
Brazil_AreaClasses_Anchor_1_init 
 self xFractionS:nil.
 self xOffsetS:nil.
 self yFractionS:nil.
 self yOffsetS:nil.
 self xAnchorFractionS:nil.
 self yAnchorFractionS:nil.
 self cachedSuggestedParentExtent:nil.
 self lastSuggestedExtentKnownToParent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
copyConfigurationFromAnchor: another 
 self  xFraction: another xFraction.
 self  xOffset: another yOffset.
 self  yFraction: another yFraction.
 self  yOffset: another yOffset.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  cachedSuggestedParentExtent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yFraction 
^ self  yFractionS.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent: lastSuggestedExtentKnownToParent_val lastSuggestedExtentKnownToParent := lastSuggestedExtentKnownToParent_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yAnchorFraction 
^ self  yAnchorFractionS.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
origin: newOrigin 
 self  xFractionS:0.
 self  xOffsetS: newOrigin x.
 self  yFractionS:0.
 self  yOffsetS: newOrigin y.
 self  xAnchorFractionS:0.
 self  yAnchorFractionS:0.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent ^lastSuggestedExtentKnownToParent! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
cachedSuggestedParentExtent ^cachedSuggestedParentExtent! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xFraction 
^ self  xFractionS.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beBottomLeft 
 self  xFractionS:0.
 self  yFractionS:1.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:0.
 self  yAnchorFractionS:1.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xFractionS ^xFractionS! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xAnchorFraction 
^ self  xAnchorFractionS.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
isRelative 
^ self  xFraction ~=0 or:[ 
 self  yFraction ~=0.
].

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yFractionS ^yFractionS! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
cachedSuggestedParentExtent: cachedSuggestedParentExtent_val cachedSuggestedParentExtent := cachedSuggestedParentExtent_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yFractionS: yFractionS_val yFractionS := yFractionS_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
suggestedParentSizeForFraction: fraction offset: offset size: size anchorFraction: anchorFraction 
|  size1  size2 |
 size1 := fraction ~=1  ifTrue:[ 
1 -  anchorFraction * size + offset /(1 -  fraction).
] ifFalse:[ 
0.
].
 size2 := fraction ~=0  ifTrue:[ 
 anchorFraction * size -  offset / fraction.
] ifFalse:[ 
0.
].
^ size1 rounded max: size2 rounded.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xOffset 
^ self  xOffsetS.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
suggestedParentExtent 
 self  cachedSuggestedParentExtent ==nil ifTrue:[ 
 self  cachedSuggestedParentExtent: self  computeSuggestedParentExtent.
].
^ self  cachedSuggestedParentExtent.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beBottomCenter 
 self  xFractionS:1/2.
 self  yFractionS:1.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:1/2.
 self  yAnchorFractionS:1.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beTopLeft 
 self  xFractionS:0.
 self  yFractionS:0.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:0.
 self  yAnchorFractionS:0.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yOffset 
^ self  yOffsetS.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beBottomRight 
 self  xFractionS:1.
 self  yFractionS:1.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:1.
 self  yAnchorFractionS:1.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yOffsetS ^yOffsetS! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
beTopRight 
 self  xFractionS:1.
 self  yFractionS:0.
 self  xOffsetS:0.
 self  yOffsetS:0.
 self  xAnchorFractionS:1.
 self  yAnchorFractionS:0.
 self  flushLayoutCaches.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
Brazil_AreaClasses_Anchor_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
isSqueezing 
^false.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xAnchorFractionS: xAnchorFractionS_val xAnchorFractionS := xAnchorFractionS_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yAnchorFractionS ^yAnchorFractionS! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xOffsetS ^xOffsetS! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xOffsetS: xOffsetS_val xOffsetS := xOffsetS_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xAnchorFractionS ^xAnchorFractionS! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
xFractionS: xFractionS_val xFractionS := xFractionS_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
visual: aVisual 
super  visual: aVisual.
 self  resetLastSuggestedExtentKnownToParent.
 self  xFraction:0.
 self  yFraction:0.
 self  xOffset:0.
 self  yOffset:0.
 self  xAnchorFraction:0.
 self  yAnchorFraction:0.
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
resetLastSuggestedExtentKnownToParent 
 self  lastSuggestedExtentKnownToParent:(-1 @-1).
^ self.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
isVisualSquishy 
^false.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
yAnchorFractionS: yAnchorFractionS_val yAnchorFractionS := yAnchorFractionS_val! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
boundsWithin: referenceBounds 
|  parentOrigin  parentExtent  width  height  naturalExtent  anchorX  anchorY |
 parentExtent := referenceBounds extent.
 width := parentExtent x.
 height := parentExtent y.
 naturalExtent := self visual naturalExtent.
 anchorX := width * self  xFraction + self  xOffset - ( naturalExtent x * self  xAnchorFraction).
 anchorY := height * self  yFraction + self  yOffset - ( naturalExtent y * self  yAnchorFraction).
^ (EnclosingObjects_Brazil_AreaClasses_Anchor at: 2)  Rectangle  origin: anchorX rounded @ anchorY rounded + referenceBounds origin extent: naturalExtent.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalWidthChange 
^true.

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) methodsFor: 'unclassified' !
computeSuggestedParentExtent 
|  naturalExtent |
 naturalExtent := self visual naturalExtent.
^( self   suggestedParentSizeForFraction: self  xFraction offset: self  xOffset size: naturalExtent x anchorFraction: self  xAnchorFraction) @( self   suggestedParentSizeForFraction: self  yFraction offset: self  yOffset size: naturalExtent y anchorFraction: self  yAnchorFraction).

! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_Anchor := eos ! !

"September 28, 2010 -> 23:11:53"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_Anchor := mmd ! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_Anchor) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:54"!

Delta define: #Brazil_AreaClasses_SequenceCell as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' elasticityS principalSizeS lastKnownNaturalExtent currentLayoutBasis') classVariables: 'MixinMetadata_Brazil_AreaClasses_SequenceCell EnclosingObjects_Brazil_AreaClasses_SequenceCell') !


"September 28, 2010 -> 23:11:54"!

(Delta mirrorFor: #Brazil_AreaClasses_SequenceCell)
comment: 
''!


"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
naturalPrincipalSize 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
naturalHeightForWidth: size 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
naturalExtent 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
currentLayoutBasis ^currentLayoutBasis! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
lastKnownNaturalExtent: lastKnownNaturalExtent_val lastKnownNaturalExtent := lastKnownNaturalExtent_val! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
principalSize 
^ self  principalSizeS ifNil:[ 
 self  naturalPrincipalSize.
].

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
principalSizeS ^principalSizeS! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
currentLayoutBasis: currentLayoutBasis_val currentLayoutBasis := currentLayoutBasis_val! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
elasticity 
^ self  elasticityS.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
lastKnownNaturalExtent ^lastKnownNaturalExtent! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
elasticity: newElasticity 
|  oldElasticity |
 oldElasticity := self  elasticityS.
 self  elasticityS: newElasticity.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
printOn: aStream 
super  printOn: aStream.
 aStream nextPutAll:' size: '; 
 print: self  principalSizeS; 
 nextPutAll:' elasticity: '; 
 print: self  elasticityS.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
principalSizeS: principalSizeS_val principalSizeS := principalSizeS_val! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_SequenceCell_superInit_new.
 self Brazil_AreaClasses_SequenceCell_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
isElastic 
^ self  elasticity >0.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
principalSize: newSize 
 self  principalSizeS: newSize.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
elasticityS: elasticityS_val elasticityS := elasticityS_val! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_SequenceCell_1_init 
 self principalSizeS:nil.
 self elasticityS:nil.
 self currentLayoutBasis:nil.
 self lastKnownNaturalExtent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  currentLayoutBasis:nil.
 self  lastKnownNaturalExtent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
visual: aVisual 
super  visual: aVisual.
 self  elasticityS:0.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
naturalOrthogonalSize 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
elasticityS ^elasticityS! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_SequenceCell_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) methodsFor: 'unclassified' !
imposesSize 
^ self  principalSizeS notNil.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_SequenceCell := eos ! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_SequenceCell := mmd ! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_SequenceCell) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:54"!

Delta define: #Brazil_AreaClasses_LineArea as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' lastSuggestedExtentKnownToParent endPointS startPointS') classVariables: 'MixinMetadata_Brazil_AreaClasses_LineArea EnclosingObjects_Brazil_AreaClasses_LineArea') !


"September 28, 2010 -> 23:11:54"!

(Delta mirrorFor: #Brazil_AreaClasses_LineArea)
comment: 
''!


"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_LineArea_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
endPoint 
^ self  endPointS.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
isVisualSquishy 
^false.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
suggestedParentHeightForWidth: ignored 
^ self  suggestedParentExtent y.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
startPointS ^startPointS! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_LineArea_1_init 
 self startPointS:(0 @0).
 self endPointS:(0 @0).
 self lastSuggestedExtentKnownToParent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
startPoint 
^ self  startPointS.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
suggestedParentExtent 
^( self  endPointS -  self  startPointS) abs.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
endPointS ^endPointS! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
startPoint: newStartPoint 
 self  startPointS: newStartPoint.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent: lastSuggestedExtentKnownToParent_val lastSuggestedExtentKnownToParent := lastSuggestedExtentKnownToParent_val! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
endPoint: newEndPoint 
 self  endPointS: newEndPoint.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
endPointS: endPointS_val endPointS := endPointS_val! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
resetLastSuggestedExtentKnownToParent 
 self  lastSuggestedExtentKnownToParent:(-1 @-1).
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_LineArea_superInit_new.
 self Brazil_AreaClasses_LineArea_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent ^lastSuggestedExtentKnownToParent! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
boundsWithin: referenceBounds 
|  width |
 width := self visual width.
^ (EnclosingObjects_Brazil_AreaClasses_LineArea at: 2)  Rectangle  left:( self  startPointS x min: self  endPointS x) -  width right:( self  startPointS x max: self  endPointS x) + width top:( self  startPointS y min: self  endPointS y) -  width bottom:( self  startPointS y max: self  endPointS y) + width.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
startPointS: startPointS_val startPointS := startPointS_val! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) methodsFor: 'unclassified' !
startPoint: newStartPoint endPoint: newEndPoint 
 self  startPointS: newStartPoint.
 self  endPointS: newEndPoint.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_LineArea := eos ! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_LineArea := mmd ! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:54"!

! (Delta mirrorFor: #Brazil_AreaClasses_LineArea) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:54"!

Delta define: #Brazil_AreaClasses_CellWidthEqualizer as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' cachedNaturalExtentX indexX cellsX') classVariables: 'MixinMetadata_Brazil_AreaClasses_CellWidthEqualizer EnclosingObjects_Brazil_AreaClasses_CellWidthEqualizer') !


"September 28, 2010 -> 23:11:54"!

(Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer)
comment: 
''!


"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
cachedNaturalExtentX ^cachedNaturalExtentX! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
indexX ^indexX! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
commonNaturalWidth 
^ self  cellsX  inject:0 into:[ : max : each | 
 max max: each visual naturalExtent x.
].

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
cellsX ^cellsX! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
Brazil_AreaClasses_CellWidthEqualizer_1_init 
 self cellsX: (EnclosingObjects_Brazil_AreaClasses_CellWidthEqualizer at: 2)  OrderedCollection new.
 self indexX:nil.
 self cachedNaturalExtentX:nil.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
cellsX: cellsX_val cellsX := cellsX_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_CellWidthEqualizer_superInit_new.
 self Brazil_AreaClasses_CellWidthEqualizer_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
indexX: indexX_val indexX := indexX_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
equalize: collection at: index 
 self  indexX: index.
 collection do:[ : each | 
|  visual |
 visual := each at: index.
 visual areaClass: (EnclosingObjects_Brazil_AreaClasses_CellWidthEqualizer at: 1)  WidthEqualizingRowCell.
 self  cellsX add: visual area.
 visual area equalizer: self.
].
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
Brazil_AreaClasses_CellWidthEqualizer_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
equalizeRowElements: visuals 
 visuals do:[ : each | 
 each areaClass: (EnclosingObjects_Brazil_AreaClasses_CellWidthEqualizer at: 1)  WidthEqualizingRowCell.
 self  cellsX add: each area.
 each area equalizer: self.
].
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) methodsFor: 'unclassified' !
cachedNaturalExtentX: cachedNaturalExtentX_val cachedNaturalExtentX := cachedNaturalExtentX_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_CellWidthEqualizer := eos ! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_CellWidthEqualizer := mmd ! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) classSide methodsFor: 'unclassified' !
equalize: collection at: index 
^ self new  equalize: collection at: index.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) classSide methodsFor: 'unclassified' !
equalizeRowElements: visuals 
^ self new equalizeRowElements: visuals.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_CellWidthEqualizer) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:55"!

Delta define: #Brazil_AreaClasses_ShapeArea as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' originS lastSuggestedExtentKnownToParent') classVariables: 'MixinMetadata_Brazil_AreaClasses_ShapeArea EnclosingObjects_Brazil_AreaClasses_ShapeArea') !


"September 28, 2010 -> 23:11:55"!

(Delta mirrorFor: #Brazil_AreaClasses_ShapeArea)
comment: 
''!


"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_ShapeArea_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
visual: aVisual 
super  visual: aVisual.
 self  resetLastSuggestedExtentKnownToParent.
 self  origin:(0 @0).
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
origin 
^ self  originS.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
resetLastSuggestedExtentKnownToParent 
 self  lastSuggestedExtentKnownToParent:(-1 @-1).
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_ShapeArea_1_init 
 self originS:nil.
 self lastSuggestedExtentKnownToParent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
originS ^originS! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
bounds: newBounds 
 self  originS: newBounds origin.
 self visual size: newBounds extent.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent: lastSuggestedExtentKnownToParent_val lastSuggestedExtentKnownToParent := lastSuggestedExtentKnownToParent_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
moveTo: newOrigin 
 self origin: newOrigin.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
suggestedParentExtent 
^ self  originS + self visual naturalExtent.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
moveBy: delta 
 self  originS:( self  origin + delta).
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
originS: originS_val originS := originS_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_ShapeArea_superInit_new.
 self Brazil_AreaClasses_ShapeArea_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
origin: newOrigin 
 self  originS: newOrigin.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent ^lastSuggestedExtentKnownToParent! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
boundsWithin: referenceBounds 
^ self  originS extent: self visual naturalExtent.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) methodsFor: 'unclassified' !
isSqueezing 
^false.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_ShapeArea := eos ! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_ShapeArea := mmd ! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_ShapeArea) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:55"!

Delta define: #Brazil_AreaClasses_PolygonArea as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' cachedEnclosingRectangle lastSuggestedExtentKnownToParent verticesS') classVariables: 'MixinMetadata_Brazil_AreaClasses_PolygonArea EnclosingObjects_Brazil_AreaClasses_PolygonArea') !


"September 28, 2010 -> 23:11:55"!

(Delta mirrorFor: #Brazil_AreaClasses_PolygonArea)
comment: 
''!


"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
cachedEnclosingRectangle ^cachedEnclosingRectangle! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
vertices 
^ self  verticesS.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
computeEnclosingRectangle 
|  minX  maxX  minY  maxY |
 minX := (EnclosingObjects_Brazil_AreaClasses_PolygonArea at: 2)  SmallInteger maxVal.
 maxX := (EnclosingObjects_Brazil_AreaClasses_PolygonArea at: 2)  SmallInteger minVal.
 minY := minX.
 maxY := maxX.
 self  vertices do:[ : each | 
|  x  y |
 x := each x.
 y := each y.
 minX := minX min: x.
 maxX := maxX max: x.
 minY := minY min: y.
 maxY := maxY max: y.
].
^ minX @ minY corner:( maxX @ maxY).

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
isVisualSquishy 
^false.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
suggestedParentHeightForWidth: ignored 
^ self  suggestedParentExtent y.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_PolygonArea_1_init 
 self verticesS:(( self Array new:1)  at:1 put:0 @0; 
 yourself).
 self lastSuggestedExtentKnownToParent:nil.
 self cachedEnclosingRectangle:nil.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
vertices: newValue 
 self  verticesS: newValue.
 self  cachedEnclosingRectangle:nil.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_PolygonArea_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
suggestedParentExtent 
^ self  enclosingRectangle corner.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent: lastSuggestedExtentKnownToParent_val lastSuggestedExtentKnownToParent := lastSuggestedExtentKnownToParent_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
enclosingRectangle 
^ self  cachedEnclosingRectangle ifNil:[ 
 self  cachedEnclosingRectangle: self  computeEnclosingRectangle.
 self  cachedEnclosingRectangle.
].

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
verticesS: verticesS_val verticesS := verticesS_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
cachedEnclosingRectangle: cachedEnclosingRectangle_val cachedEnclosingRectangle := cachedEnclosingRectangle_val! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
verticesS ^verticesS! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
resetLastSuggestedExtentKnownToParent 
 self  lastSuggestedExtentKnownToParent:(-1 @-1).
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_PolygonArea_superInit_new.
 self Brazil_AreaClasses_PolygonArea_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent ^lastSuggestedExtentKnownToParent! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) methodsFor: 'unclassified' !
boundsWithin: referenceBounds 
^ self  enclosingRectangle.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_PolygonArea := eos ! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_PolygonArea := mmd ! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:55"!

! (Delta mirrorFor: #Brazil_AreaClasses_PolygonArea) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:56"!

Delta define: #Brazil_AreaClasses_RowCell as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_AreaClasses_RowCell EnclosingObjects_Brazil_AreaClasses_RowCell') !


"September 28, 2010 -> 23:11:56"!

(Delta mirrorFor: #Brazil_AreaClasses_RowCell)
comment: 
''!


"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
naturalPrincipalSize 
^ self visual naturalExtent x.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
naturalHeightForWidth: width 
^ self visual naturalHeightForWidth: width.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
naturalExtent 
^ self  width @ self visual naturalExtent y.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalWidthChange 
^ self imposesSize not and:[ 
 self visual parent mayAccommodateNaturalWidthChangeOf: self visual.
].

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
isVisualSquishy 
^ self imposesSize or:[ 
 self isElastic and:[ 
 self visual isSquishy.
].
].

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
naturalOrthogonalSize 
^ self visual naturalExtent y.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_RowCell_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_RowCell_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
width: pixels 
 self principalSize: pixels.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
width 
^ self principalSize.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_RowCell_superInit_new.
 self Brazil_AreaClasses_RowCell_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_RowCell := eos ! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_RowCell := mmd ! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_RowCell) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:56"!

Delta define: #Brazil_AreaClasses_Area as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' visualS') classVariables: 'MixinMetadata_Brazil_AreaClasses_Area EnclosingObjects_Brazil_AreaClasses_Area') !


"September 28, 2010 -> 23:11:56"!

(Delta mirrorFor: #Brazil_AreaClasses_Area)
comment: 
''!


"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
copyConfigurationFromAnchor: anchor 
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalHeightChange 
^ self  visual parent mayAccommodateNaturalHeightChangeOf: self  visual.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
visualS ^visualS! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
copyConfigurationFromFrame: frame 
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
copyConfigurationTo: another 
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
visual 
^ self  visualS.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
visualRequestsBoundsUpdateUsing: aBlock 
 self  visual parent  child: self  visual requestsBoundsUpdateUsing: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
isVisualSquishy 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
isSqueezing 
^ self  visual parent isSqueezing.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
Brazil_AreaClasses_Area_1_init 
 self visualS:nil.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
requestBoundsUpdate 
( self  visual area == self and:[ 
 self  visual updateLockLevel <1.
]) ifTrue:[ 
 self  visual parent  child: self  visual requestsBoundsUpdateUsing:[ : newBounds | 
 self  visual occupyBounds: newBounds.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
isFuture 
^false.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
flushLayoutCaches 
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
visual: aVisual 
 self  visualS: aVisual.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_Area_superInit_new.
 self Brazil_AreaClasses_Area_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
visualS: visualS_val visualS := visualS_val! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
Brazil_AreaClasses_Area_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalWidthChange 
^ self  visual parent mayAccommodateNaturalWidthChangeOf: self  visual.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_Area := eos ! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_Area := mmd ! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_Area) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:56"!

Delta define: #Brazil_AreaClasses_GridRowCell as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' orthogonalSizeS forcedExtentX') classVariables: 'MixinMetadata_Brazil_AreaClasses_GridRowCell EnclosingObjects_Brazil_AreaClasses_GridRowCell') !


"September 28, 2010 -> 23:11:56"!

(Delta mirrorFor: #Brazil_AreaClasses_GridRowCell)
comment: 
''!


"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
naturalPrincipalSize 
^ self  naturalExtent x.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
naturalHeightForWidth: width 
^ self  forcedExtentX  ifNil:[ 
super  naturalHeightForWidth: width.
] ifNotNil:[ 
 self  forcedExtentX y.
].

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
extent 
^ self width @ self  height.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
forcedExtent: newExtent 
 self  forcedExtentX: newExtent.
#'BOGUS' yourself.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
height: newHeight 
 self  orthogonalSize: newHeight.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
quietlySetWidth: newWidth 
 self principalSizeS: newWidth.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
orthogonalSize 
^ self  orthogonalSizeS ==nil  ifTrue:[ 
 self  forcedExtentX ==nil  ifTrue:[ 
 self naturalOrthogonalSize.
] ifFalse:[ 
 self  forcedExtentX y.
].
] ifFalse:[ 
 self  orthogonalSizeS.
].

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
orthogonalSizeS ^orthogonalSizeS! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
naturalExtent 
^ self  forcedExtentX ifNil:[ 
 self visual naturalExtent.
].

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_GridRowCell_superInit_new.
 self Brazil_AreaClasses_GridRowCell_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
extent: extent 
 self principalSizeS: extent x.
 self  orthogonalSizeS: extent y.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_GridRowCell_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
grid 
^ self visual parent grid.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
height 
^ self  orthogonalSize.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
forcedExtentX ^forcedExtentX! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_GridRowCell_1_init 
 self orthogonalSizeS:nil.
 self forcedExtentX:nil.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
orthogonalSize: size 
 self  orthogonalSizeS: size.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
orthogonalSizeS: orthogonalSizeS_val orthogonalSizeS := orthogonalSizeS_val! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) methodsFor: 'unclassified' !
forcedExtentX: forcedExtentX_val forcedExtentX := forcedExtentX_val! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_GridRowCell := eos ! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_GridRowCell := mmd ! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:56"!

! (Delta mirrorFor: #Brazil_AreaClasses_GridRowCell) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:57"!

Delta define: #Brazil_AreaClasses_ColumnCell as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_AreaClasses_ColumnCell EnclosingObjects_Brazil_AreaClasses_ColumnCell') !


"September 28, 2010 -> 23:11:57"!

(Delta mirrorFor: #Brazil_AreaClasses_ColumnCell)
comment: 
''!


"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
naturalPrincipalSize 
^ self visual naturalExtent y.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
naturalHeightForWidth: size 
^ self principalSizeS ifNil:[ 
 self visual naturalHeightForWidth: size.
].

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
naturalExtent 
^ self visual naturalExtent x @ self  height.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
isSqueezing 
^ self imposesSize not and:[ 
super  isSqueezing.
].

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
height 
^ self principalSize.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
height: pixels 
 self principalSize: pixels.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_ColumnCell_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
naturalOrthogonalSize 
^ self visual naturalExtent x.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_ColumnCell_superInit_new.
 self Brazil_AreaClasses_ColumnCell_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalHeightChange 
^ self imposesSize not and:[ 
 self visual parent mayAccommodateNaturalHeightChangeOf: self visual.
].

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_ColumnCell_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) methodsFor: 'unclassified' !
isVisualSquishy 
^ self imposesSize not and:[ 
 self visual isSquishy.
].

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_ColumnCell := eos ! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_ColumnCell := mmd ! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_ColumnCell) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:57"!

Delta define: #Brazil_AreaClasses_FutureArea as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_AreaClasses_FutureArea EnclosingObjects_Brazil_AreaClasses_FutureArea') !


"September 28, 2010 -> 23:11:57"!

(Delta mirrorFor: #Brazil_AreaClasses_FutureArea)
comment: 
''!


"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
isFuture 
^true.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
flushLayoutCaches 
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
isSqueezing 
^false.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
visualRequestsBoundsUpdateUsing: continuation 
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
copyConfigurationTo: area 
 self playRecordedMessagesTo: area.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_FutureArea_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
Brazil_AreaClasses_FutureArea_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_FutureArea_superInit_new.
 self Brazil_AreaClasses_FutureArea_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_FutureArea := eos ! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_FutureArea := mmd ! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_FutureArea) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:57"!

Delta define: #Brazil_AreaClasses_WidthEqualizingRowCell as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' equalizer') classVariables: 'MixinMetadata_Brazil_AreaClasses_WidthEqualizingRowCell EnclosingObjects_Brazil_AreaClasses_WidthEqualizingRowCell') !


"September 28, 2010 -> 23:11:57"!

(Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell)
comment: 
''!


"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_WidthEqualizingRowCell_1_init 
 self equalizer:nil.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) methodsFor: 'unclassified' !
naturalPrincipalSize 
^ self  equalizer commonNaturalWidth.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) methodsFor: 'unclassified' !
Brazil_AreaClasses_WidthEqualizingRowCell_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) methodsFor: 'unclassified' !
equalizer: equalizer_val equalizer := equalizer_val! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) methodsFor: 'unclassified' !
equalizer ^equalizer! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_WidthEqualizingRowCell_superInit_new.
 self Brazil_AreaClasses_WidthEqualizingRowCell_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_WidthEqualizingRowCell := eos ! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_WidthEqualizingRowCell := mmd ! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_WidthEqualizingRowCell) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:57"!

Delta define: #Brazil_AreaClasses_Frame as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' topFractionS leftFractionS rightFractionS leftOffsetS rightOffsetS topOffsetS bottomFractionS bottomOffsetS lastSuggestedExtentKnownToParent') classVariables: 'MixinMetadata_Brazil_AreaClasses_Frame EnclosingObjects_Brazil_AreaClasses_Frame') !


"September 28, 2010 -> 23:11:57"!

(Delta mirrorFor: #Brazil_AreaClasses_Frame)
comment: 
''!


"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightOffsetS: rightOffsetS_val rightOffsetS := rightOffsetS_val! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomOffsetS ^bottomOffsetS! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
isElasticX 
^ self  rightFraction ~=0 or:[ 
 self  leftFraction ~=0.
].

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftFraction: fraction 
 self  leftFractionS: fraction.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
suggestedParentHeightForWidth: width 
|  left  right  imposedCompositionWidth  heightFromVisual |
( self  topFraction =0 and:[ 
 self  bottomFraction =1.
]) ifTrue:[ 
 left := width * self  leftFraction + self  leftOffset.
 right := width * self  rightFraction + self  rightOffset.
 imposedCompositionWidth := right -  left.
 heightFromVisual := self visual naturalHeightForWidth: imposedCompositionWidth.
^ heightFromVisual + self  topOffset -  self  bottomOffset.
].
#'BOGUS' yourself.
^ self  bottomOffset.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
padding: padding 
 padding isInteger  ifTrue:[ 
 self   offsetsLeft: padding top: padding right: padding negated bottom: padding negated.
] ifFalse:[ 
 self   offsetsLeft: padding x top: padding y right: padding x negated bottom: padding y negated.
].
 self  rightFraction:1.
 self  bottomFraction:1.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalHeightChange 
^ self  isElasticY and:[ 
super  mayAccommodateVisualsNaturalHeightChange.
].

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftFractionS: leftFractionS_val leftFractionS := leftFractionS_val! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
copyConfigurationFromFrame: another 
 self  leftFraction: another leftFraction.
 self  leftOffset: another leftOffset.
 self  topFraction: another topFraction.
 self  topOffset: another topOffset.
 self  rightFraction: another rightFraction.
 self  rightOffset: another rightOffset.
 self  bottomFraction: another bottomFraction.
 self  bottomOffset: another bottomOffset.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topOffset 
^ self  topOffsetS.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftFractionS ^leftFractionS! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
copyConfigurationTo: another 
 another copyConfigurationFromFrame: self.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomFractionS: bottomFractionS_val bottomFractionS := bottomFractionS_val! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
new 
 self Brazil_AreaClasses_Frame_superInit_new.
 self Brazil_AreaClasses_Frame_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
isElastic 
^ self  leftFraction ~=0 or:[ 
 self  topFraction ~=0 or:[ 
 self  rightFraction ~=0 or:[ 
 self  bottomFraction ~=0.
].
].
].

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
Brazil_AreaClasses_Frame_1_init 
 self leftFractionS:nil.
 self leftOffsetS:nil.
 self topFractionS:nil.
 self topOffsetS:nil.
 self rightFractionS:nil.
 self rightOffsetS:nil.
 self bottomFractionS:nil.
 self bottomOffsetS:nil.
 self lastSuggestedExtentKnownToParent:nil.
^ self.

! !

"September 28, 2010 -> 23:11:57"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftOffset: offset 
 self  leftOffsetS: offset.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightFractionS: rightFractionS_val rightFractionS := rightFractionS_val! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomFractionS ^bottomFractionS! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightOffsetS ^rightOffsetS! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topOffsetS ^topOffsetS! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topFractionS: topFractionS_val topFractionS := topFractionS_val! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
visualRequestsBoundsUpdateUsing: aBlock 
 self  isElastic  ifTrue:[ 
super  visualRequestsBoundsUpdateUsing: aBlock.
] ifFalse:[ 
 aBlock value: self visual bounds.
].
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightFractionS ^rightFractionS! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomOffset: offset 
 self  bottomOffsetS: offset.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent ^lastSuggestedExtentKnownToParent! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
isZero 
^ self  isElastic not and:[ 
 self  leftOffset =0 and:[ 
 self  rightOffset =0 and:[ 
 self  topOffset =0 and:[ 
 self  bottomOffset =0.
].
].
].
].

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftFraction 
^ self  leftFractionS.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomFraction 
^ self  bottomFractionS.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
isElasticY 
^ self  bottomFraction ~=0 or:[ 
 self  topFraction ~=0.
].

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
fullyCoverParent 
 self  padding:0.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightOffset 
^ self  rightOffsetS.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topFraction: fraction 
 self  topFractionS: fraction.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftOffsetS: leftOffsetS_val leftOffsetS := leftOffsetS_val! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftOffsetS ^leftOffsetS! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topOffsetS: topOffsetS_val topOffsetS := topOffsetS_val! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightOffset: offset 
 self  rightOffsetS: offset.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomOffsetS: bottomOffsetS_val bottomOffsetS := bottomOffsetS_val! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightFraction 
^ self  rightFractionS.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomOffset 
^ self  bottomOffsetS.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
suggestedParentExtent 
 self  isElastic ifFalse:[ 
^ self  rightOffset @ self  bottomOffset.
].
 self  isFramedByParent ifTrue:[ 
^ self visual naturalExtent +( self  leftOffset -  self  rightOffset @( self  topOffset -  self  bottomOffset)).
].
#'BOGUS' yourself.
^0 @0.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
Brazil_AreaClasses_Frame_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftOffset 
^ self  leftOffsetS.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bounds: aRectangle 
 self  offsetsLeft: aRectangle left top: aRectangle top right: aRectangle right bottom: aRectangle bottom.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
isVisualSquishy 
^ self  isElasticY and:[ 
 self visual isSquishy.
].

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
extent: newExtent 
 self  rightOffsetS:( self  leftOffsetS + newExtent x).
 self  bottomOffsetS:( self  topOffsetS + newExtent y).
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
lastSuggestedExtentKnownToParent: lastSuggestedExtentKnownToParent_val lastSuggestedExtentKnownToParent := lastSuggestedExtentKnownToParent_val! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
isSqueezing 
^super  isSqueezing and:[ 
 self  isElasticY.
].

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
rightFraction: fraction 
 self  rightFractionS: fraction.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
fractionsLeft: left top: top right: right bottom: bottom 
 self  leftFraction: left offset:0 topFraction: top offset:0 rightFraction: right offset:0 bottomFraction: bottom offset:0.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topFractionS ^topFractionS! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
isFramedByParent 
^ self  leftFraction =0 and:[ 
 self  topFraction =0 and:[ 
 self  rightFraction =1 and:[ 
 self  bottomFraction =1.
].
].
].

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
offsetsLeft: left top: top right: right bottom: bottom 
 self  leftFraction:0 offset: left topFraction:0 offset: top rightFraction:0 offset: right bottomFraction:0 offset: bottom.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
visual: aVisual 
super  visual: aVisual.
 self  resetLastSuggestedExtentKnownToParent.
 self  bounds:(0 @0 corner:(0 @0)).
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
bottomFraction: fraction 
 self  bottomFractionS: fraction.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
resetLastSuggestedExtentKnownToParent 
 self  lastSuggestedExtentKnownToParent:(-1 @-1).
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topOffset: offset 
 self  topOffsetS: offset.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
leftFraction: lf offset: lo topFraction: tf offset: to rightFraction: rf offset: ro bottomFraction: bf offset: bo 
 self  leftFractionS: lf.
 self  leftOffsetS: lo.
 self  topFractionS: tf.
 self  topOffsetS: to.
 self  rightFractionS: rf.
 self  rightOffsetS: ro.
 self  bottomFractionS: bf.
 self  bottomOffsetS: bo.
 self requestBoundsUpdate.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
boundsWithin: compositionBounds 
|  parentOrigin  parentExtent  width  height  left  top  right  bottom |
 parentOrigin := compositionBounds origin.
 parentExtent := compositionBounds extent.
 width := parentExtent x.
 height := parentExtent y.
 left :=( width * self  leftFraction) rounded + self  leftOffset.
 top :=( height * self  topFraction) rounded + self  topOffset.
 right :=( width * self  rightFraction) rounded + self  rightOffset.
 bottom :=( height * self  bottomFraction) rounded + self  bottomOffset.
^ (EnclosingObjects_Brazil_AreaClasses_Frame at: 2)  Rectangle  origin: left @ top + parentOrigin corner: right @ bottom + parentOrigin.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
mayAccommodateVisualsNaturalWidthChange 
^ self  isElasticX and:[ 
super  mayAccommodateVisualsNaturalWidthChange.
].

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) methodsFor: 'unclassified' !
topFraction 
^ self  topFractionS.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AreaClasses_Frame := eos ! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AreaClasses_Frame := mmd ! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new visual: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_AreaClasses_Frame) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:58"!

Delta define: #Brazil_MappingClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Brazil_MappingClasses_BrazilMappingAgent_slot Brazil_MappingClasses_AbstractAgentFactory_slot Brazil_MappingClasses_AttributeMapping_slot') classVariables: 'MixinMetadata_Brazil_MappingClasses EnclosingObjects_Brazil_MappingClasses') !


"September 28, 2010 -> 23:11:58"!

(Delta mirrorFor: #Brazil_MappingClasses)
comment: 
''!


"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) methodsFor: 'unclassified' !
AbstractAgentFactory
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MappingClasses_AbstractAgentFactory_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_MappingClasses 
			nestedMixins at: #Brazil_MappingClasses_AbstractAgentFactory.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_MappingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_MappingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_MappingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MappingClasses_AbstractAgentFactory_slot := myNested.
		].
	^Brazil_MappingClasses_AbstractAgentFactory_slot! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) methodsFor: 'unclassified' !
Brazil_MappingClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) methodsFor: 'unclassified' !
AttributeMapping
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MappingClasses_AttributeMapping_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_MappingClasses 
			nestedMixins at: #Brazil_MappingClasses_AttributeMapping.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_MappingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_MappingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_MappingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MappingClasses_AttributeMapping_slot := myNested.
		].
	^Brazil_MappingClasses_AttributeMapping_slot! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) methodsFor: 'unclassified' !
BrazilMappingAgent
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_MappingClasses_BrazilMappingAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_MappingClasses 
			nestedMixins at: #Brazil_MappingClasses_BrazilMappingAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_MappingClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_MappingClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_MappingClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_MappingClasses_BrazilMappingAgent_slot := myNested.
		].
	^Brazil_MappingClasses_BrazilMappingAgent_slot! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) methodsFor: 'unclassified' !
Brazil_MappingClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) methodsFor: 'unclassified' !
new 
 self Brazil_MappingClasses_superInit_new.
 self Brazil_MappingClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MappingClasses := eos ! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MappingClasses := mmd ! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:58"!

Delta define: #Brazil_MappingClasses_AbstractAgentFactory as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_MappingClasses_AbstractAgentFactory EnclosingObjects_Brazil_MappingClasses_AbstractAgentFactory') !


"September 28, 2010 -> 23:11:58"!

(Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory)
comment: 
''!


"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForIcon: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForActiveIcon: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForCompositeVisual: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
Brazil_MappingClasses_AbstractAgentFactory_1_init 
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForBlank: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
Brazil_MappingClasses_AbstractAgentFactory_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForLabel: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForWindow: window 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForEllipseShape: shape 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForRectangleShape: shape 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForPushButton: button 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:58"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForMenu: menu 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForHyperlink: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
new 
 self Brazil_MappingClasses_AbstractAgentFactory_superInit_new.
 self Brazil_MappingClasses_AbstractAgentFactory_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForLineShape: shape 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForTextDisplay: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForWrapper: wrapper 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForDesktop: aDesktop 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForTextView: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForViewport: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForListBox: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForVisualSequence: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) methodsFor: 'unclassified' !
createAgentForPolygonShape: visual 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MappingClasses_AbstractAgentFactory := eos ! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MappingClasses_AbstractAgentFactory := mmd ! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AbstractAgentFactory) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:59"!

Delta define: #Brazil_MappingClasses_BrazilMappingAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' visualX fullyMapped attributeMappings') classVariables: 'MixinMetadata_Brazil_MappingClasses_BrazilMappingAgent EnclosingObjects_Brazil_MappingClasses_BrazilMappingAgent') !


"September 28, 2010 -> 23:11:59"!

(Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent)
comment: 
''!


"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
visualX ^visualX! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
attachToVisual: aVisual 
 self  visualX: aVisual.
 self  visual agent: self.
 self   map: self  visual boundsH to:[ : newBounds | 
 self  visual areUpdatesLocked ifFalse:[ 
 self  matchVisualsBounds.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
finishedMapping 
 self  fullyMapped:true.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
childrenReverseDo: aBlock 
 self  visual childrenReverseDo:[ : each | 
 each agent ifNotNil:[ : it | 
 aBlock value: it.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
attributeMappings: attributeMappings_val attributeMappings := attributeMappings_val! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
createOwnArtifacts 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
noticeChangeInChildAgentStructure 
 self  parent ifNotNil:[ : it | 
 it noticeChangeInChildAgentStructure.
].
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
Brazil_MappingClasses_BrazilMappingAgent_1_init 
 self visualX:nil.
 self attributeMappings:nil.
 self fullyMapped:nil.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
new 
 self Brazil_MappingClasses_BrazilMappingAgent_superInit_new.
 self Brazil_MappingClasses_BrazilMappingAgent_1_init.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
destroy 
 self  deactivate.
 self  destroyOwnArtifacts.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
Brazil_MappingClasses_BrazilMappingAgent_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
matchAttributes 
 self  attributeMappings do:[ : each | 
 each update.
].
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
flushLayoutCaches 
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
noteBeginningOfBoundsChangeAndProvideEndContinuation 
^nil.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
childrenDo: aBlock 
 self  visual childrenDo:[ : each | 
 each agent ifNotNil:[ : it | 
 aBlock value: it.
].
].
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
ensureUpToDateAppearance 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
createArtifactsForSubtree 
 self  createOwnArtifacts.
 self  connectOwnArtifacts.
 self  matchAttributes.
 self  childrenDo:[ : each | 
 each createArtifactsForSubtree.
].
 self  visual area flushLayoutCaches.
 self  visual updateGeometricProperties.
 self  isNull ifFalse:[ 
 self  parent connectArtifactsOfChild: self.
].
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
fullyMapped: fullyMapped_val fullyMapped := fullyMapped_val! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
map: attribute to: block 
^ self  attributeMappings add:( (EnclosingObjects_Brazil_MappingClasses_BrazilMappingAgent at: 1)  AttributeMapping  attribute: attribute block: block).

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
attributeMappings ^attributeMappings! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
noticeChangeInNaturalExtent 
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
matchVisualsBounds 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
visual 
^ self  visualX.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
forVisual: aVisual 
 self  fullyMapped:false.
 self  attributeMappings: (EnclosingObjects_Brazil_MappingClasses_BrazilMappingAgent at: 2)  OrderedCollection new.
 self  attachToVisual: aVisual.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
parent 
^ self  visual parent ifNotNil:[ : it | 
 it agent.
].

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
isNull 
^false.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
connectArtifactsOfChild: childAgent 
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
fullyMapped ^fullyMapped! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
inspectorIconOfSize: aNumberOrPoint 
^nil.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
deactivate 
 self  attributeMappings do:[ : each | 
 each unmap.
].
 self  attributeMappings: (EnclosingObjects_Brazil_MappingClasses_BrazilMappingAgent at: 2)  OrderedCollection new.
 self  fullyMapped:false.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) methodsFor: 'unclassified' !
visualX: visualX_val visualX := visualX_val! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MappingClasses_BrazilMappingAgent := eos ! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MappingClasses_BrazilMappingAgent := mmd ! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) classSide methodsFor: 'unclassified' !
visual: aVisual 
^ self new forVisual: aVisual.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_BrazilMappingAgent) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:11:59"!

Delta define: #Brazil_MappingClasses_AttributeMapping as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' updateBlock attribute') classVariables: 'MixinMetadata_Brazil_MappingClasses_AttributeMapping EnclosingObjects_Brazil_MappingClasses_AttributeMapping') !


"September 28, 2010 -> 23:11:59"!

(Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping)
comment: 
''!


"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
update 
 self  updateBlock reentrant value: self  attribute value.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
attribute: anAttribute block: aBlock 
 self  Brazil_MappingClasses_AttributeMapping_superInit_attribute: anAttribute block: aBlock.
 self  Brazil_MappingClasses_AttributeMapping_1_init_attribute: anAttribute block: aBlock.
 self  attribute mapTo: self  updateBlock.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
unmap 
 self  attribute unmap.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
Brazil_MappingClasses_AttributeMapping_superInit_attribute: anAttribute block: aBlock 
super  new.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
attribute: attribute_val attribute := attribute_val! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
attribute ^attribute! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
updateBlock: updateBlock_val updateBlock := updateBlock_val! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
Brazil_MappingClasses_AttributeMapping_1_init_attribute: anAttribute block: aBlock 
 self attribute: anAttribute.
 self updateBlock: aBlock.
^ self.

! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) methodsFor: 'unclassified' !
updateBlock ^updateBlock! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_MappingClasses_AttributeMapping := eos ! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_MappingClasses_AttributeMapping := mmd ! !

"September 28, 2010 -> 23:11:59"!

! (Delta mirrorFor: #Brazil_MappingClasses_AttributeMapping) classSide methodsFor: 'unclassified' !
attribute: anAttribute block: aBlock 
^ self basicNew  attribute: anAttribute block: aBlock.

! !

"September 28, 2010 -> 23:12:0"!

Delta define: #Brazil_ContainerClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' MappableHolder Anchor Frame Brazil_ContainerClasses_Window_slot Blank Brazil_ContainerClasses_HorizontalViewport_slot Brazil_ContainerClasses_Wrapper_slot Brazil_ContainerClasses_Viewport_slot ContainerVisual Brazil_ContainerClasses_CompositeVisual_slot Brazil_ContainerClasses_VerticalViewport_slot Brazil_ContainerClasses_Row_slot Brazil_ContainerClasses_Grid_slot VisualCollection VerticalVisualSequence Attribute Brazil_ContainerClasses_Desktop_slot Brazil_ContainerClasses_GridRowX_slot ModifierKeyState Brazil_ContainerClasses_Column_slot Brazil_ContainerClasses_Flow_slot HorizontalVisualSequence Brazil_ContainerClasses_SpyingWrapper_slot') classVariables: 'MixinMetadata_Brazil_ContainerClasses EnclosingObjects_Brazil_ContainerClasses') !


"September 28, 2010 -> 23:12:0"!

(Delta mirrorFor: #Brazil_ContainerClasses)
comment: 
''!


"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
VerticalVisualSequence: VerticalVisualSequence_val VerticalVisualSequence := VerticalVisualSequence_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
ModifierKeyState: ModifierKeyState_val ModifierKeyState := ModifierKeyState_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Attribute: Attribute_val Attribute := Attribute_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Anchor: Anchor_val Anchor := Anchor_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
VisualCollection: VisualCollection_val VisualCollection := VisualCollection_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Row
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Row_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Row.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  HorizontalVisualSequence)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Row_slot := myNested.
		].
	^Brazil_ContainerClasses_Row_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
SpyingWrapper
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_SpyingWrapper_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_SpyingWrapper.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  Wrapper)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_SpyingWrapper_slot := myNested.
		].
	^Brazil_ContainerClasses_SpyingWrapper_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_superInit_new.
 self Brazil_ContainerClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Brazil_ContainerClasses_1_init 
 self ContainerVisual: (EnclosingObjects_Brazil_ContainerClasses at: 1)  visuals ContainerVisual.
 self VerticalVisualSequence: (EnclosingObjects_Brazil_ContainerClasses at: 1)  visuals VerticalVisualSequence.
 self VisualCollection: (EnclosingObjects_Brazil_ContainerClasses at: 1)  visuals VisualCollection.
 self HorizontalVisualSequence: (EnclosingObjects_Brazil_ContainerClasses at: 1)  visuals HorizontalVisualSequence.
 self Anchor: (EnclosingObjects_Brazil_ContainerClasses at: 1)  areas Anchor.
 self Frame: (EnclosingObjects_Brazil_ContainerClasses at: 1)  areas Frame.
 self ModifierKeyState: (EnclosingObjects_Brazil_ContainerClasses at: 1)  plumbing ModifierKeyState.
 self Attribute: (EnclosingObjects_Brazil_ContainerClasses at: 1)  plumbing Attribute.
 self Blank: (EnclosingObjects_Brazil_ContainerClasses at: 1)  widgets Blank.
 self MappableHolder: (EnclosingObjects_Brazil_ContainerClasses at: 1)  plumbing MappableHolder.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
VisualCollection ^VisualCollection! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Flow
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Flow_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Flow.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  VisualCollection)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Flow_slot := myNested.
		].
	^Brazil_ContainerClasses_Flow_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Wrapper
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Wrapper_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Wrapper.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  ContainerVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Wrapper_slot := myNested.
		].
	^Brazil_ContainerClasses_Wrapper_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
ModifierKeyState ^ModifierKeyState! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
MappableHolder: MappableHolder_val MappableHolder := MappableHolder_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
HorizontalVisualSequence ^HorizontalVisualSequence! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
MappableHolder ^MappableHolder! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
CompositeVisual
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_CompositeVisual_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_CompositeVisual.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  VisualCollection)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_CompositeVisual_slot := myNested.
		].
	^Brazil_ContainerClasses_CompositeVisual_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Anchor ^Anchor! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Grid
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Grid_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Grid.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  Column)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Grid_slot := myNested.
		].
	^Brazil_ContainerClasses_Grid_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Brazil_ContainerClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Frame ^Frame! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Blank ^Blank! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Viewport
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Viewport_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Viewport.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  CompositeVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Viewport_slot := myNested.
		].
	^Brazil_ContainerClasses_Viewport_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
VerticalViewport
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_VerticalViewport_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_VerticalViewport.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  VerticalVisualSequence)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_VerticalViewport_slot := myNested.
		].
	^Brazil_ContainerClasses_VerticalViewport_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
ContainerVisual: ContainerVisual_val ContainerVisual := ContainerVisual_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
HorizontalVisualSequence: HorizontalVisualSequence_val HorizontalVisualSequence := HorizontalVisualSequence_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
ContainerVisual ^ContainerVisual! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Column
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Column_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Column.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  VerticalVisualSequence)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Column_slot := myNested.
		].
	^Brazil_ContainerClasses_Column_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Frame: Frame_val Frame := Frame_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Window
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Window_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Window.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  Wrapper)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Window_slot := myNested.
		].
	^Brazil_ContainerClasses_Window_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
VerticalVisualSequence ^VerticalVisualSequence! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Blank: Blank_val Blank := Blank_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
GridRowX
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_GridRowX_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_GridRowX.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  Row)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_GridRowX_slot := myNested.
		].
	^Brazil_ContainerClasses_GridRowX_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Desktop
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_Desktop_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_Desktop.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_Desktop_slot := myNested.
		].
	^Brazil_ContainerClasses_Desktop_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
Attribute ^Attribute! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) methodsFor: 'unclassified' !
HorizontalViewport
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_ContainerClasses_HorizontalViewport_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_ContainerClasses 
			nestedMixins at: #Brazil_ContainerClasses_HorizontalViewport.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_ContainerClasses Mirror on: self  HorizontalVisualSequence)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_ContainerClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_ContainerClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_ContainerClasses_HorizontalViewport_slot := myNested.
		].
	^Brazil_ContainerClasses_HorizontalViewport_slot! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses := eos ! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses := mmd ! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:0"!

Delta define: #Brazil_ContainerClasses_CompositeVisual as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' cachedNaturalHeightForWidth') classVariables: 'MixinMetadata_Brazil_ContainerClasses_CompositeVisual EnclosingObjects_Brazil_ContainerClasses_CompositeVisual') !


"September 28, 2010 -> 23:12:0"!

(Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual)
comment: 
''!


"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
add: newChild 
^ self restructuring:[ 
 self  privateAdd: newChild using:[ 
 self children add: newChild.
].
].

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
remove: child 
|  oldNaturalExtent |
 self restructuring:[ 
 self children remove: child.
 child unlinkFromParent.
( self  mayRemovingAffectNaturalExtent: child) ifTrue:[ 
 oldNaturalExtent := self naturalExtent.
 self updateGeometricProperties.
 self naturalExtent = oldNaturalExtent ifFalse:[ 
 self requestBoundsUpdate.
 self announceNaturalExtentChange.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
naturalHeightForWidth: width 
 self  cachedNaturalHeightForWidth = width ifFalse:[ 
 self  cachedNaturalHeightForWidth: width.
 self  cachedNaturalHeightForWidth:( self  computeNaturalHeightForWidth: width).
].
^ self  cachedNaturalHeightForWidth.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
|  playground |
super  forceBoundsResponse: newBounds.
 playground := self innerBounds.
 self childrenDo:[ : each | 
 each forceBounds:( each area boundsWithin: playground).
].
 self announceLayoutChange.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
computeBoundsFor: child 
^ child area boundsWithin: self innerBounds.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
updateLayoutByRequestFrom: child using: continuation 
|  playground |
 self requestBoundsUpdateUsing:[ : newBounds | 
|  extentChanged |
 newBounds = self bounds  ifTrue:[ 
 continuation value:( self  computeBoundsFor: child).
] ifFalse:[ 
 extentChanged := newBounds extent ~= self bounds extent.
 self boundsH value: newBounds.
 extentChanged ifTrue:[ 
 playground := self innerBounds.
 self childrenDo:[ : each | 
|  eachBounds |
 eachBounds := each area boundsWithin: playground.
 each == child  ifTrue:[ 
 continuation value: eachBounds.
] ifFalse:[ 
 each occupyBounds: eachBounds.
].
].
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
Brazil_ContainerClasses_CompositeVisual_1_init 
 self cachedNaturalHeightForWidth:nil.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth ^cachedNaturalHeightForWidth! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
adviseBoundsFor: child 
 child occupyBounds:( self  computeBoundsFor: child).
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
privateAdd: newChild using: childCollectionUpdateBlock 
|  oldNaturalExtent |
 childCollectionUpdateBlock value.
 newChild linkToParent: self.
 self isMapped ifTrue:[ 
( self  mayAddingAffectNaturalExtent: newChild)  ifTrue:[ 
 oldNaturalExtent := self naturalExtent.
 self updateGeometricProperties.
 self naturalExtent = oldNaturalExtent  ifTrue:[ 
 self  adviseBoundsFor: newChild.
] ifFalse:[ 
 self requestBoundsUpdateUsing:[ : newBounds | 
 newBounds = self bounds  ifTrue:[ 
 self  adviseBoundsFor: newChild.
] ifFalse:[ 
 self occupyBounds: newBounds.
].
].
].
 self announceNaturalExtentChange.
] ifFalse:[ 
 self  adviseBoundsFor: newChild.
].
 newChild mapSubtree.
].
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
mayRemovingAffectNaturalExtent: child 
|  oldSuggestion |
 oldSuggestion := child area lastSuggestedExtentKnownToParent.
^ oldSuggestion x = self currentNaturalExtent x or:[ 
 oldSuggestion y = self currentNaturalExtent y.
].

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_CompositeVisual_superInit_new.
 self Brazil_ContainerClasses_CompositeVisual_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth: cachedNaturalHeightForWidth_val cachedNaturalHeightForWidth := cachedNaturalHeightForWidth_val! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
|  oldNaturalExtent |
( self  mayAffectNaturalExtent: child)  ifTrue:[ 
 oldNaturalExtent := self naturalExtent.
 self updateGeometricProperties.
 self naturalExtent = oldNaturalExtent  ifTrue:[ 
 continuation value:( child area boundsWithin: self innerBounds).
] ifFalse:[ 
 self   updateLayoutByRequestFrom: child using: continuation.
 self announceNaturalExtentChange.
].
] ifFalse:[ 
 continuation value:( child area boundsWithin: self innerBounds).
].
 self announceLayoutChange.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForCompositeVisual.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
computeNaturalExtent 
|  max |
 max :=0 @0.
 self childrenDo:[ : each | 
|  suggestion |
 suggestion := each area suggestedParentExtent.
 each area lastSuggestedExtentKnownToParent: suggestion.
 max := max max: suggestion.
].
^ max.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
^ child legalAreaClassesInCompositeVisual.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
|  oldExtent  playground |
 oldExtent := self extent.
super  occupyBoundsResponse: newBounds.
 oldExtent = self extent  ifTrue:[ 
 self childrenDo:[ : each | 
 each reiterateBounds.
].
] ifFalse:[ 
 playground := self innerBounds.
 self childrenDo:[ : each | 
 each occupyBounds:( each area boundsWithin: playground).
].
 self announceLayoutChange.
].
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
addAtBack: newChild 
^ self restructuring:[ 
 self  privateAdd: newChild using:[ 
 self children addFirst: newChild.
].
].

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
add: newChild inFrontOf: existingChild 
^ self restructuring:[ 
 self  privateAdd: newChild using:[ 
 self children  add: newChild after: existingChild.
].
].

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForCompositeVisual: self.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
computeNaturalHeightForWidth: width 
|  maxHeight |
 maxHeight :=0.
 self childrenDo:[ : each | 
 maxHeight := maxHeight max:( each area suggestedParentHeightForWidth: width).
].
^ maxHeight.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
flushLayoutCaches 
super  flushLayoutCaches.
 self childrenDo:[ : each | 
 each area resetLastSuggestedExtentKnownToParent.
].
 self updateGeometricProperties.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
mayAddingAffectNaturalExtent: child 
|  suggestion  myNaturalExtent |
 suggestion := child area suggestedParentExtent.
 child area lastSuggestedExtentKnownToParent: suggestion.
 myNaturalExtent := self naturalExtent.
^ suggestion x > myNaturalExtent x or:[ 
 suggestion y > myNaturalExtent y.
].

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
mayAffectNaturalExtent: child 
|  oldSuggestion  newSuggestion |
 oldSuggestion := child area lastSuggestedExtentKnownToParent.
 newSuggestion := child area suggestedParentExtent.
 newSuggestion = oldSuggestion ifTrue:[ 
^false.
].
 child area lastSuggestedExtentKnownToParent: newSuggestion.
^ oldSuggestion x = self currentNaturalExtent x or:[ 
 oldSuggestion y = self currentNaturalExtent y or:[ 
 newSuggestion x > self currentNaturalExtent x or:[ 
 newSuggestion y > self currentNaturalExtent y.
].
].
].

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) methodsFor: 'unclassified' !
Brazil_ContainerClasses_CompositeVisual_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:0"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_CompositeVisual := eos ! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_CompositeVisual := mmd ! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_CompositeVisual) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:1"!

Delta define: #Brazil_ContainerClasses_Wrapper as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' cachedNaturalHeightWidth cachedNaturalHeightForWidth contentS') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Wrapper EnclosingObjects_Brazil_ContainerClasses_Wrapper') !


"September 28, 2010 -> 23:12:1"!

(Delta mirrorFor: #Brazil_ContainerClasses_Wrapper)
comment: 
''!


"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beTopCenter 
 self  content area beTopCenter.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beLeftCenter 
 self  content area beLeftCenter.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
super  forceBoundsResponse: newBounds.
 self  content forceBounds:( self  content area boundsWithin: self localBounds).
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
cachedNaturalHeightWidth: cachedNaturalHeightWidth_val cachedNaturalHeightWidth := cachedNaturalHeightWidth_val! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Wrapper_1_init 
 self contentS:nil.
 self cachedNaturalHeightWidth:nil.
 self cachedNaturalHeightForWidth:nil.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForWrapper: self.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_Wrapper_superInit_new.
 self Brazil_ContainerClasses_Wrapper_1_init.
 self  content: (EnclosingObjects_Brazil_ContainerClasses_Wrapper at: 1)  Blank new.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beRightCenter 
 self  content area beRightCenter.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
( self isSqueezing and:[ 
 child area isVisualSquishy.
])  ifTrue:[ 
 self   updateSquishyChildLayout: child using: continuation.
] ifFalse:[ 
 self   updateSolidChildLayout: child using: continuation.
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beCentered 
 self  content area beCentered.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
contentS: contentS_val contentS := contentS_val! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
contentS ^contentS! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beBottomRight 
 self  content area beBottomRight.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  cachedNaturalHeightWidth:nil.
super  flushLayoutCaches.
 self  updateGeometricProperties.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
isSquishy 
^ self  content area isVisualSquishy.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beBottomLeft 
 self  content area beBottomLeft.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
childrenDo: aBlock 
 self  content ifNotNil:[ 
 aBlock value: self  content.
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
naturalHeightForWidth: size 
 self  cachedNaturalHeightWidth ~= size ifTrue:[ 
 self  cachedNaturalHeightWidth: size.
 self  cachedNaturalHeightForWidth:( self  content area suggestedParentHeightForWidth: size).
].
^ self  cachedNaturalHeightForWidth.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth: cachedNaturalHeightForWidth_val cachedNaturalHeightForWidth := cachedNaturalHeightForWidth_val! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Wrapper_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
content: newContent 
|  oldNaturalExtent |
 oldNaturalExtent := self naturalExtent.
 self restructuring:[ 
 self  contentS ifNotNil:[ 
 self  content unlinkFromParent.
].
 self  contentS: newContent.
 newContent linkToParent: self.
 self isMapped ifTrue:[ 
 newContent mapSubtree.
 self  flushLayoutCaches.
( self naturalExtent ~= oldNaturalExtent or:[ 
 self isSqueezing and:[ 
 self  content area isVisualSquishy.
].
])  ifTrue:[ 
 self requestBoundsUpdateUsing:[ : newBounds | 
 self forceBounds: newBounds.
].
] ifFalse:[ 
 self  content forceBounds:( self  content area boundsWithin: self localBounds).
].
 self currentNaturalExtent = oldNaturalExtent ifFalse:[ 
 self announceNaturalExtentChange.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
cachedNaturalHeightWidth ^cachedNaturalHeightWidth! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
isEmpty 
^ self  content isBlank.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
updateGeometricProperties 
 self  cachedNaturalHeightWidth:nil.
super  updateGeometricProperties.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
innerBounds 
^0 @0 extent: self extent.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beBottomCenter 
 self  content area beBottomCenter.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beTopLeft 
 self  content area beTopLeft.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
updateSquishyChildLayout: child using: continuation 
|  oldNaturalExtent  myExtent  newCompositionHeight |
 self  cachedNaturalHeightWidth:nil.
 oldNaturalExtent := self naturalExtent.
 self  updateGeometricProperties.
 self requestBoundsUpdateUsing:[ : newBounds | 
 newBounds = self bounds ifFalse:[ 
 self setBounds: newBounds.
].
 continuation value:( child area boundsWithin: self localBounds).
 self naturalExtent ~= oldNaturalExtent ifTrue:[ 
 self announceNaturalExtentChange.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
beTopRight 
 self  content area beTopRight.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForWrapper.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self  content area suggestedParentExtent.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
^ child legalAreaClassesInWrapper.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
|  oldBounds |
 oldBounds := self bounds.
super  occupyBoundsResponse: newBounds.
 oldBounds = newBounds  ifTrue:[ 
 self  content reiterateBounds.
] ifFalse:[ 
 self  adviseBoundsFor: self  content.
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth ^cachedNaturalHeightForWidth! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
adviseBoundsFor: child 
 child occupyBounds:( child area boundsWithin: self localBounds).
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
updateSolidChildLayout: child using: continuation 
|  oldNaturalExtent |
 self  cachedNaturalHeightWidth:nil.
 oldNaturalExtent := self naturalExtent.
 self  updateGeometricProperties.
 self naturalExtent = oldNaturalExtent  ifTrue:[ 
 continuation value:( child area boundsWithin: self localBounds).
] ifFalse:[ 
 self requestBoundsUpdateUsing:[ : newBounds | 
 self setBounds: newBounds.
 continuation value:( child area boundsWithin: self localBounds).
].
 self announceNaturalExtentChange.
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
installInformationRetriever: spy on: child 
 child == self  content ifFalse:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Wrapper at: 2)  error:'invalid child to spy on'.
].
 self  contentS: spy downwardInterceptor.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) methodsFor: 'unclassified' !
content 
^ self  contentS.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Wrapper := eos ! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Wrapper := mmd ! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) classSide methodsFor: 'unclassified' !
with: aVisual in: areaClass 
 aVisual areaClass: areaClass.
^ self with: aVisual.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) classSide methodsFor: 'unclassified' !
with: aVisual 
^ self new content: aVisual; 
 yourself.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Wrapper) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:1"!

Delta define: #Brazil_ContainerClasses_VerticalViewport as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' scrollPositionH') classVariables: 'MixinMetadata_Brazil_ContainerClasses_VerticalViewport EnclosingObjects_Brazil_ContainerClasses_VerticalViewport') !


"September 28, 2010 -> 23:12:1"!

(Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport)
comment: 
'A vertical viewport is similar to a column in that it stacks its elements vertically, sizing each to its own width. However, it provides a scrollbar to access the elements not currently visible. It also ignores elasticity of elements.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
globalOriginForChildren 
^ self globalOrigin translateBy: self  scrollPosition negated.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
computeNaturalHeightForWidth: width 
^super  computeNaturalHeightForWidth:( width -  self  scrollbarWidth).

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
super  forceBoundsResponse: newBounds.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
scrollbarWidth 
^ self agent ==nil  ifTrue:[ 
0.
] ifFalse:[ 
 self agent scrollbarWidth.
].

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
scrollPositionH: scrollPositionH_val scrollPositionH := scrollPositionH_val! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
innerExtent 
^ self extent - ( self  scrollbarWidth @0).

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
virtualExtent 
|  width |
 width := self  innerExtent x.
^ width @( self naturalHeightForWidth: width).

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
Brazil_ContainerClasses_VerticalViewport_1_init 
 self scrollPositionH:( (EnclosingObjects_Brazil_ContainerClasses_VerticalViewport at: 1)  MappableHolder with:(0 @0)).
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForVerticalViewport: self.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
innerBounds 
^0 @0 extent:( self bounds extent - ( self  scrollbarWidth @0)).

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
privateAdd: child using: modificationBlock 
|  result |
 result :=super   privateAdd: child using: modificationBlock.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ result.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
hasElasticChildren 
^false.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_VerticalViewport_superInit_new.
 self Brazil_ContainerClasses_VerticalViewport_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
scrollPosition 
^ self  scrollPositionH value.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
super   child: child requestsBoundsUpdateUsing: continuation.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForVerticalViewport.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
Brazil_ContainerClasses_VerticalViewport_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
super  occupyBoundsResponse: newBounds.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
scrollPosition: aPoint 
 self  scrollPositionH value: aPoint.
^ self.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
allowsVerticalScrolling 
^true.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
allowsHorizontalScrolling 
^false.

! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) methodsFor: 'unclassified' !
scrollPositionH ^scrollPositionH! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_VerticalViewport := eos ! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_VerticalViewport := mmd ! !

"September 28, 2010 -> 23:12:1"!

! (Delta mirrorFor: #Brazil_ContainerClasses_VerticalViewport) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:2"!

Delta define: #Brazil_ContainerClasses_SpyingWrapper as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_ContainerClasses_SpyingWrapper EnclosingObjects_Brazil_ContainerClasses_SpyingWrapper') !


"September 28, 2010 -> 23:12:2"!

(Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper)
comment: 
''!


"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper) methodsFor: 'unclassified' !
Brazil_ContainerClasses_SpyingWrapper_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper) methodsFor: 'unclassified' !
Brazil_ContainerClasses_SpyingWrapper_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper) methodsFor: 'unclassified' !
child: theChild requestsBoundsUpdateUsing: action 
 (EnclosingObjects_Brazil_ContainerClasses_SpyingWrapper at: 2)  Transcript cr; 
 show:'childRequestsBoundsUpdate (entered)'.
^super   child: theChild requestsBoundsUpdateUsing:[ : newBounds | 
 (EnclosingObjects_Brazil_ContainerClasses_SpyingWrapper at: 2)  Transcript cr; 
 show:'childRequestsBoundsBoundsUpdate -> '; 
 show: newBounds printString.
 action value: newBounds.
].

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_SpyingWrapper_superInit_new.
 self Brazil_ContainerClasses_SpyingWrapper_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_SpyingWrapper := eos ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_SpyingWrapper := mmd ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_SpyingWrapper) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:2"!

Delta define: #Brazil_ContainerClasses_Grid as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' columnGapA') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Grid EnclosingObjects_Brazil_ContainerClasses_Grid') !


"September 28, 2010 -> 23:12:2"!

(Delta mirrorFor: #Brazil_ContainerClasses_Grid)
comment: 
'A grid is a matrix of cells, each containing a visual. It can logically be viewed as a column of rows (or a row of columns), with the added constraint that the width of each row element needs to be equalized with the width of same-index elements of other rows. Thus, this implementation is a special kind of Column containing a special kind of Row (GridRowX).

A grid is initialized to be a certain size. Initially, each cell is a Wrapper with a Blank. The actual content can be added or replaced using the #at:put: message, with the first argument being a Point.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
extentAt: cell is: extent 
( self  at: cell) area forcedExtent: extent.
 self  refreshLayout.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
computeColumnWidthAt: index 
^ self children  inject:0 into:[ : max : each | 
 max max:( each columnWidthAt: index).
].

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
refreshLayout 
 self blockIncrementalLayoutUpdatesWhile:[ 
 self flushLayoutCaches.
 self  recomputeColumnWidths.
 self requestBoundsUpdateUsing:[ : newBounds | 
 self forceBounds: newBounds.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
finishedMapping 
super  finishedMapping.
 self  refreshLayout.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
recomputeColumnWidths 
|  maxCellWidthInColumn |
 self childrenDo:[ : each | 
 each flushPrecomputedColumnWidths.
].
1  to: self  columnCount do:[ : index | 
 maxCellWidthInColumn :=0.
 self childrenDo:[ : each | 
 maxCellWidthInColumn := maxCellWidthInColumn max:( each columnWidthAt: index).
].
 self childrenDo:[ : each | 
 each  setColumnAt: index widthTo: maxCellWidthInColumn.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
columnGap 
^ self  columnGapA value.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
updateLayoutForCell: cell inRow: row using: continuation 
|  index  maxCellWidthInColumn |
 index := row indexOf: cell.
 maxCellWidthInColumn :=0.
 self childrenDo:[ : each | 
 maxCellWidthInColumn := maxCellWidthInColumn max:( each columnWidthAt: index).
].
 self blockIncrementalLayoutUpdatesSilentlyWhile:[ 
 self childrenDo:[ : each | 
 each  setColumnAt: index widthTo: maxCellWidthInColumn.
].
].
 self  repositionAllChildrenByRequestFrom: row using: continuation.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
rows: rows columns: columns 
|  row |
 rows timesRepeat:[ 
 row := (EnclosingObjects_Brazil_ContainerClasses_Grid at: 1)  GridRowX columns: columns.
 row gap: self  columnGap.
 self add: row.
].
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
at: coordinate 
^( self children at: coordinate y) at: coordinate x.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
row: row requestsBoundsUpdateCausedBy: cell using: continuation 
|  newNaturalExtent |
 newNaturalExtent := cell area naturalExtent.
 newNaturalExtent y = cell area currentLayoutBasis  ifTrue:[ 
 continuation value: row bounds.
] ifFalse:[ 
 cell area currentLayoutBasis: newNaturalExtent y.
 self updateGeometricProperties.
 self   updateLayoutForCell: cell inRow: row using: continuation.
].
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
columnGap: newGap 
 self  columnGapA value: newGap.
 self childrenDo:[ : each | 
 each gap: newGap.
].
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_Grid_superInit_new.
 self Brazil_ContainerClasses_Grid_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
addColumn 
 self blockIncrementalLayoutUpdatesWhile:[ 
 self childrenDo:[ : each | 
 each addColumn.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
computeNaturalExtent 
|  sumX  sumY  gapSum |
 sumX :=0.
1  to: self  columnCount do:[ : index | 
 sumX := sumX +( self  computeColumnWidthAt: index).
].
 sumY :=0.
 self childrenDo:[ : each | 
 sumY := sumY + each area naturalExtent y.
].
 gapSum :=( self children size - 1 max:0) * self gap.
^ sumX @( sumY + gapSum).

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
rowCount 
^ self children size.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
addRow 
 self add:( (EnclosingObjects_Brazil_ContainerClasses_Grid at: 1)  GridRowX columns: self  columnCount).
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
columnGapA: columnGapA_val columnGapA := columnGapA_val! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Grid_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Grid_1_init 
 self columnGapA:( (EnclosingObjects_Brazil_ContainerClasses_Grid at: 1)  Attribute  name:#'columnGap' value:0).
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
at: coordinate put: visual 
( self children at: coordinate y)  at: coordinate x put: visual.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
columnGapA ^columnGapA! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) methodsFor: 'unclassified' !
columnCount 
^ self children isEmpty  ifTrue:[ 
0.
] ifFalse:[ 
 self children first columnCount.
].

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Grid := eos ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Grid := mmd ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) classSide methodsFor: 'unclassified' !
rows: rowCount columns: columnCount 
^ self  new  rows: rowCount columns: columnCount.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Grid) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:2"!

Delta define: #Brazil_ContainerClasses_Column as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Column EnclosingObjects_Brazil_ContainerClasses_Column') !


"September 28, 2010 -> 23:12:2"!

(Delta mirrorFor: #Brazil_ContainerClasses_Column)
comment: 
''!


"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Column) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Column_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Column) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForColumn.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Column) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Column_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Column) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_Column_superInit_new.
 self Brazil_ContainerClasses_Column_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Column) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Column := eos ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Column) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Column := mmd ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Column) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:2"!

Delta define: #Brazil_ContainerClasses_Row as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Row EnclosingObjects_Brazil_ContainerClasses_Row') !


"September 28, 2010 -> 23:12:2"!

(Delta mirrorFor: #Brazil_ContainerClasses_Row)
comment: 
''!


"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Row) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Row_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Row) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Row_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Row) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForRow.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Row) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_Row_superInit_new.
 self Brazil_ContainerClasses_Row_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Row) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Row := eos ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Row) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Row := mmd ! !

"September 28, 2010 -> 23:12:2"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Row) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:3"!

Delta define: #Brazil_ContainerClasses_Viewport as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' scrollPositionH') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Viewport EnclosingObjects_Brazil_ContainerClasses_Viewport') !


"September 28, 2010 -> 23:12:3"!

(Delta mirrorFor: #Brazil_ContainerClasses_Viewport)
comment: 
'Viewport adds to CompositeVisual the ability to have scroll bars to scroll itself when its content is larger than the available area. It also keeps track of the current scroll position as the coordinates of the top left corner of the visible area.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
globalOriginForChildren 
^ self globalOrigin translateBy: self  scrollPosition negated.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Viewport_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
super  forceBoundsResponse: newBounds.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
allowsHorizontalScrolling 
^true.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Viewport_1_init 
 self scrollPositionH:( (EnclosingObjects_Brazil_ContainerClasses_Viewport at: 1)  MappableHolder with:(0 @0)).
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
scrollbarHeight 
^ self agent ==nil  ifTrue:[ 
0.
] ifFalse:[ 
 self agent scrollbarHeight.
].

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
innerExtent 
^ self extent - ( self  scrollbarWidth @ self  scrollbarHeight).

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
virtualExtent 
^ self naturalExtent.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForViewport: self.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
innerBounds 
^0 @0 extent:( self bounds extent - ( self  scrollbarWidth @ self  scrollbarHeight)).

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_Viewport_superInit_new.
 self Brazil_ContainerClasses_Viewport_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
scrollPosition 
^ self  scrollPositionH value.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
super   child: child requestsBoundsUpdateUsing: continuation.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
visibleArea 
^ self  scrollPosition extent: self  innerExtent.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
scrollPositionH: scrollPositionH_val scrollPositionH := scrollPositionH_val! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
scrollToPosition: innerLocation at: ratioPoint 
 self scrollPosition:( innerLocation - ( ratioPoint * self  innerExtent)).
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
super  occupyBoundsResponse: newBounds.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
scrollPosition: newOrigin 
 self  scrollPositionH value: newOrigin.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
allowsVerticalScrolling 
^true.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
scrollbarWidth 
^ self agent ==nil  ifTrue:[ 
0.
] ifFalse:[ 
 self agent scrollbarWidth.
].

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) methodsFor: 'unclassified' !
scrollPositionH ^scrollPositionH! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Viewport := eos ! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Viewport := mmd ! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Viewport) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:3"!

Delta define: #Brazil_ContainerClasses_HorizontalViewport as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' scrollPositionH') classVariables: 'MixinMetadata_Brazil_ContainerClasses_HorizontalViewport EnclosingObjects_Brazil_ContainerClasses_HorizontalViewport') !


"September 28, 2010 -> 23:12:3"!

(Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
globalOriginForChildren 
^ self globalOrigin translateBy: self  scrollPosition negated.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
Brazil_ContainerClasses_HorizontalViewport_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
super  forceBoundsResponse: newBounds.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
scrollPositionH: scrollPositionH_val scrollPositionH := scrollPositionH_val! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
scrollbarHeight 
^ self agent ==nil  ifTrue:[ 
0.
] ifFalse:[ 
 self agent scrollbarHeight.
].

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
innerExtent 
^ self extent - (0 @ self  scrollbarHeight).

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
scrollPosition: newOrigin 
 self  scrollPositionH value: newOrigin.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForViewport: self.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
innerBounds 
^0 @0 extent:( self bounds extent - (0 @ self  scrollbarHeight)).

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
hasElasticChildren 
^false.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_HorizontalViewport_superInit_new.
 self Brazil_ContainerClasses_HorizontalViewport_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
scrollPosition 
^ self  scrollPositionH value.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
super   child: child requestsBoundsUpdateUsing: continuation.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForHorizontalViewport.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
super  occupyBoundsResponse: newBounds.
 self isMapped ifTrue:[ 
 self agent matchScrollbarRange.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
virtualExtent 
^ self naturalExtent x @ self  innerExtent y.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
allowsVerticalScrolling 
^false.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
allowsHorizontalScrolling 
^true.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
scrollPositionH ^scrollPositionH! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) methodsFor: 'unclassified' !
Brazil_ContainerClasses_HorizontalViewport_1_init 
 self scrollPositionH:( (EnclosingObjects_Brazil_ContainerClasses_HorizontalViewport at: 1)  MappableHolder with:(0 @0)).
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_HorizontalViewport := eos ! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_HorizontalViewport := mmd ! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_HorizontalViewport) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:3"!

Delta define: #Brazil_ContainerClasses_Desktop as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' windows updateLockLevel agent windowClosePermission') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Desktop EnclosingObjects_Brazil_ContainerClasses_Desktop') !


"September 28, 2010 -> 23:12:3"!

(Delta mirrorFor: #Brazil_ContainerClasses_Desktop)
comment: 
'Desktop is the root of the tree of visuals. It is the parent of any open window.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
modifierKeyStateForCurrentEvent 
^ self  agent  ifNotNil:[ : it | 
 it modifierKeyStateForCurrentEvent.
] ifNil:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Desktop at: 1)  ModifierKeyState new.
].

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
centeredRectangleOfExtent: rectExtent 
^ self  extent -  rectExtent //2 extent: rectExtent.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
updateDraggedImagePosition 
 self  agent updateDraggedImagePosition.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
agent: agent_val agent := agent_val! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
mousePoint 
^ self  agent mousePoint.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
discardMappings 
 self  agent:nil.
 self  windows copy do:[ : each | 
 each discardMappings.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
windowAtPoint: point 
^ self  agent windowAtPoint: point.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
windowClosePermission: windowClosePermission_val windowClosePermission := windowClosePermission_val! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
positionWindowsWithinVisibleScreenArea 
#'BOGUS' yourself.
 (EnclosingObjects_Brazil_ContainerClasses_Desktop at: 2)  WorldState addDeferredUIMessage:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Desktop at: 2)  World fullRepaintNeeded.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
mayAccommodateNaturalWidthChangeOf: child 
^true.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
withMapping: aMapping 
 self Brazil_ContainerClasses_Desktop_superInit_withMapping: aMapping.
 self Brazil_ContainerClasses_Desktop_1_init: aMapping.
 self  mapUsing: aMapping.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 self  unmap.
 self  agent:( aMapping createAgentForDesktop: self).
 self  windows do:[ : each | 
 each mapSubtreeUsing: aMapping.
].
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
setDraggedImage: image 
 self  agent setDraggedImage: image.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
scheduleUIInstallment: aBlock 
 self  agent scheduleUIInstallment: aBlock.
^ self.

! !

"September 28, 2010 -> 23:12:3"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: aBlock 
 self  adviseBoundsFor: child using: aBlock.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
mapping 
^ self  agent mapping.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
isMorphic 
^ self  agent isMorphic.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
mayAccommodateNaturalHeightChangeOf: child 
^true.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
updateLockLevel ^updateLockLevel! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
printHierarchyLayoutReportOn: aStream 
 aStream nextPutAll:'-- desktop --'.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
adviseBoundsFor: window using: aBlock 
 aBlock value:( window area boundsWithin: self bounds).
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
windows ^windows! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
globalOrigin 
^0 @0.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
updateLockLevel: updateLockLevel_val updateLockLevel := updateLockLevel_val! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
ensureUpToDateAppearance 
 self  agent ensureUpToDateAppearance.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
add: aWindow 
 self  windows add: aWindow.
 aWindow linkToParent: self.
 self  isMapped ifTrue:[ 
 self  adviseBoundsFor: aWindow.
 aWindow mapSubtree.
].
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
extent 
^ self  bounds extent.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
bounds 
^ self  agent desktopBounds.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
isMapped 
^ self  agent notNil.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
isDescendantOf: anything 
^false.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
windowHasPermissionToClose: window 
^ self  windowClosePermission isNil or:[ 
 self  windowClosePermission reentrant fixTemps value: window.
].

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
effectivelyVisible 
^true.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
usableBounds 
^ self  agent usableDesktopBounds.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
remove: aWindow 
 self  windows remove: aWindow.
 aWindow unlinkFromParent.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
isWindows 
^ self  agent isWindows.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
scheduleUIAction: aBlock 
 self  agent scheduleUIAction: aBlock.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
createWindow 
|  window |
 window := (EnclosingObjects_Brazil_ContainerClasses_Desktop at: 1)  Window new.
 self  add: window.
^ window.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
unmap 
 self  agent ifNotNil:[ 
 self  windows do:[ : each | 
 each unmapSubtree.
].
 self  agent:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForDesktop.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
isSqueezing 
^false.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
windowClosePermission ^windowClosePermission! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Desktop_superInit_withMapping: aMapping 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
^( self Array new:2)  at:1 put: (EnclosingObjects_Brazil_ContainerClasses_Desktop at: 1)  Anchor; 
  at:2 put: (EnclosingObjects_Brazil_ContainerClasses_Desktop at: 1)  Frame; 
 yourself.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
adviseBoundsFor: window 
 window occupyBounds:( window area boundsWithin: self bounds).
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Desktop_1_init: aMapping 
 self agent:nil.
 self windows: (EnclosingObjects_Brazil_ContainerClasses_Desktop at: 2)  OrderedCollection new.
 self updateLockLevel:0.
 self windowClosePermission:nil.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
clearDraggedImage 
 self  agent clearDraggedImage.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
disableUserInputDuring: action 
^ self  agent disableUserInputDuring: action.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
windows: windows_val windows := windows_val! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
desktop 
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
mapUsing: aMapping 
 self  unmap.
 self  agent:( aMapping createAgentForDesktop: self).
 self  windows do:[ : each | 
 each mapSubtree.
].
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
add: aWindow in: areaClass 
 aWindow areaClass: areaClass.
 self add: aWindow.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
agent ^agent! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) methodsFor: 'unclassified' !
systemIsIdle 
^( self  agent ifNil:[ 
^true.
]) systemIsIdle.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Desktop := eos ! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Desktop := mmd ! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Desktop) classSide methodsFor: 'unclassified' !
withMapping: aMapping 
^ self basicNew withMapping: aMapping.

! !

"September 28, 2010 -> 23:12:4"!

Delta define: #Brazil_ContainerClasses_Flow as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' precomputedChildrenBounds cachedHeightGivenWidth horizontalGapA verticalGapA') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Flow EnclosingObjects_Brazil_ContainerClasses_Flow') !


"September 28, 2010 -> 23:12:4"!

(Delta mirrorFor: #Brazil_ContainerClasses_Flow)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
verticalGap 
^ self  verticalGapA value.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
computeNaturalHeightForWidth: width 
|  stream  height |
 stream := self children readStream.
 height := stream atEnd  ifTrue:[ 
0.
] ifFalse:[ 
 self  verticalGap negated.
].
[ 
 stream atEnd.
] whileFalse:[ 
 height := height + self  verticalGap +( self   readAndMeasureOneLineFrom: stream within: width).
].
^ height.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
cachedHeightGivenWidth ^cachedHeightGivenWidth! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
horizontalGap 
^ self  horizontalGapA value.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
horizontalGap: newValue 
 self  horizontalGapA value: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
forceBoundsResponse: newBounds 
 self boundsH value: newBounds.
 self  recomputeLayout.
 self childrenDo:[ : each | 
 each forceBounds:( self  precomputedBoundsFor: each).
].
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
addAtBack: newChild 
 self restructuring:[ 
 self children addFirst: newChild.
 newChild linkToParent: self.
 self isMapped ifTrue:[ 
 self updateGeometricProperties.
 self requestBoundsUpdate.
 newChild mapSubtree.
].
 self announceNaturalExtentChange.
].
^ newChild.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForVisualSequence: self.
 self  cachedHeightGivenWidth:nil.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_Flow_superInit_new.
 self Brazil_ContainerClasses_Flow_1_init.
 self affectsNaturalExtent: self  horizontalGapA.
 self affectsNaturalExtent: self  verticalGapA.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
child: child requestsBoundsUpdateUsing: continuation 
 child area suggestedParentExtent = child area lastSuggestedExtentKnownToParent  ifTrue:[ 
 continuation value:( self  precomputedBoundsFor: child).
] ifFalse:[ 
 self  cachedHeightGivenWidth:nil.
 self requestBoundsUpdateUsing:[ : newBounds | 
 self boundsH value: newBounds.
 self  recomputeLayout.
 self childrenDo:[ : each | 
 each == child  ifTrue:[ 
 continuation value:( self  precomputedBoundsFor: each).
] ifFalse:[ 
 each occupyBounds:( self  precomputedBoundsFor: each).
].
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
verticalGapA: verticalGapA_val verticalGapA := verticalGapA_val! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  cachedHeightGivenWidth:nil.
 self  precomputedChildrenBounds: (EnclosingObjects_Brazil_ContainerClasses_Flow at: 2)  IdentityDictionary new.
super  flushLayoutCaches.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
addFirst: newChild 
^ self  addAtBack: newChild.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
recomputeLayout 
|  width  stream  top  box |
 width := self extent x.
 stream := self children readStream.
 top :=0.
[ 
 stream atEnd.
] whileFalse:[ 
 self   composeOneLineFrom: stream within: width using:[ : visuals : maxHeight | 
|  left |
 left :=0.
 visuals do:[ : each | 
|  suggestion |
 suggestion := each area suggestedParentExtent.
 each area lastSuggestedExtentKnownToParent: suggestion.
 box := left @ top extent:( suggestion x @ maxHeight).
 self   precomputedBoundsFor: each are: box.
 left := box right + self  horizontalGap.
].
].
 top := box bottom + self  verticalGap.
].
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
verticalGapA ^verticalGapA! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
add: newChild 
 self restructuring:[ 
 self children add: newChild.
 newChild linkToParent: self.
 self isMapped ifTrue:[ 
 self updateGeometricProperties.
 self requestBoundsUpdate.
 newChild mapSubtree.
].
 self announceNaturalExtentChange.
].
^ newChild.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
precomputedBoundsFor: child 
^ self  precomputedChildrenBounds at: child.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
reorder: visuals 
( visuals select:[ : any | 
( self children includes: any) not.
]) isEmpty not ifTrue:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Flow at: 2)  error:'bad argument'.
].
 self children: visuals asOrderedCollection.
 self  recomputeLayout.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
remove: child 
 self restructuring:[ 
 self children remove: child.
 child unlinkFromParent.
 self updateGeometricProperties.
 self requestBoundsUpdate.
].
 self announceNaturalExtentChange.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
naturalHeightForWidth: width 
|  height |
^( self  cachedHeightGivenWidth notNil and:[ 
 self  cachedHeightGivenWidth first = width.
])  ifTrue:[ 
 self  cachedHeightGivenWidth at:2.
] ifFalse:[ 
 height := self  computeNaturalHeightForWidth: width.
 self  cachedHeightGivenWidth:(( self Array new:2)  at:1 put: width; 
  at:2 put: height; 
 yourself).
 height.
].

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
cachedHeightGivenWidth: cachedHeightGivenWidth_val cachedHeightGivenWidth := cachedHeightGivenWidth_val! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
verticalGap: newValue 
 self  verticalGapA value: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
precomputedChildrenBounds: precomputedChildrenBounds_val precomputedChildrenBounds := precomputedChildrenBounds_val! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
horizontalGapA ^horizontalGapA! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
computeNaturalExtent 
|  totalWidth  maxHeight |
 totalWidth := self hasChildren  ifTrue:[ 
 self  horizontalGap negated.
] ifFalse:[ 
0.
].
 maxHeight :=0.
 self childrenDo:[ : each | 
|  extent |
 extent := each area suggestedParentExtent.
 totalWidth := totalWidth + extent x + self  horizontalGap.
 maxHeight := maxHeight max: extent y.
].
^ totalWidth @ maxHeight.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
^ child legalAreaClassesInFlow.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
 self boundsH value: newBounds.
 self  recomputeLayout.
 self childrenDo:[ : each | 
 each occupyBounds:( self  precomputedBoundsFor: each).
].
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Flow_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
composeOneLineFrom: stream within: width using: aBlock 
|  elements  extent  maxHeight  right |
 elements := (EnclosingObjects_Brazil_ContainerClasses_Flow at: 2)  OrderedCollection with: stream next.
 extent := elements first area suggestedParentExtent.
 maxHeight := extent y.
 right := extent x.
[ 
 stream atEnd.
] whileFalse:[ 
 right := right + self  horizontalGap.
 extent := stream peek area suggestedParentExtent.
 right + extent x <= width  ifTrue:[ 
 right := right + extent x.
 maxHeight := maxHeight max: extent y.
 elements add: stream next.
] ifFalse:[ 
^ aBlock  value: elements value: maxHeight.
].
].
^ aBlock  value: elements value: maxHeight.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
readAndMeasureOneLineFrom: stream within: width 
|  extent  maxHeight  right |
 extent := stream next area suggestedParentExtent.
 maxHeight := extent y.
 right := extent x.
[ 
 stream atEnd.
] whileFalse:[ 
 right := right + self  horizontalGap.
 extent := stream peek area suggestedParentExtent.
 right + extent x <= width  ifTrue:[ 
 right := right + extent x.
 maxHeight := maxHeight max: extent y.
 stream next.
] ifFalse:[ 
^ maxHeight.
].
].
^ maxHeight.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
precomputedBoundsFor: child are: box 
 self  precomputedChildrenBounds  at: child put: box.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Flow_1_init 
 self horizontalGapA:( (EnclosingObjects_Brazil_ContainerClasses_Flow at: 1)  Attribute  name:#'horizontalGap' value:0).
 self verticalGapA:( (EnclosingObjects_Brazil_ContainerClasses_Flow at: 1)  Attribute  name:#'verticalGap' value:0).
 self cachedHeightGivenWidth:nil.
 self precomputedChildrenBounds: (EnclosingObjects_Brazil_ContainerClasses_Flow at: 2)  IdentityDictionary new.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
horizontalGapA: horizontalGapA_val horizontalGapA := horizontalGapA_val! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForFlow.
^ self.

! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) methodsFor: 'unclassified' !
precomputedChildrenBounds ^precomputedChildrenBounds! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Flow := eos ! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Flow := mmd ! !

"September 28, 2010 -> 23:12:4"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Flow) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:5"!

Delta define: #Brazil_ContainerClasses_GridRowX as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_ContainerClasses_GridRowX EnclosingObjects_Brazil_ContainerClasses_GridRowX') !


"September 28, 2010 -> 23:12:5"!

(Delta mirrorFor: #Brazil_ContainerClasses_GridRowX)
comment: 
'PRIVATE CLASS

GridRow is used internally by Grid to arrange its cells. It is not supposed to be used directly by an application. One of the main differences of a grid row is delegating any child bounds updates it receives to the parent (the grid) so that the grid can match the layout of the same cell in other rows.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
addColumn 
 self add:( (EnclosingObjects_Brazil_ContainerClasses_GridRowX at: 1)  Wrapper with: (EnclosingObjects_Brazil_ContainerClasses_GridRowX at: 1)  Blank new).
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
setColumnAt: index widthTo: width 
( self children at: index) area width: width.
 self updateGeometricProperties.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
Brazil_ContainerClasses_GridRowX_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForGridRow.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
grid 
^ self parent.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
flushPrecomputedColumnWidths 
 self childrenDo:[ : each | 
 each area quietlySetWidth:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
legalAreaClassesFor: child 
^ child legalAreaClassesInGridRow.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
at: index put: visual 
|  old |
 old := self children at: index.
 self restructuring:[ 
 self children  at: index put: visual.
 old unlinkFromParent.
 visual linkToParent: self.
 self isMapped ifTrue:[ 
 visual mapSubtree.
 self reportNaturalExtentChange.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
Brazil_ContainerClasses_GridRowX_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
at: index 
^ self children at: index.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
columns: columns 
 columns timesRepeat:[ 
 self  addColumn.
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
child: cell requestsBoundsUpdateUsing: continuation 
 self parent  row: self requestsBoundsUpdateCausedBy: cell using:[ : newBounds | 
 self setBounds: newBounds.
 self  repositionAllChildrenByRequestFrom: cell using: continuation.
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
columnCount 
^ self children size.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
columnWidthAt: index 
#'BOGUS' yourself.
^( self children at: index) area naturalExtent x.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_GridRowX_superInit_new.
 self Brazil_ContainerClasses_GridRowX_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_GridRowX := eos ! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_GridRowX := mmd ! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) classSide methodsFor: 'unclassified' !
columns: columns 
^ self  new columns: columns.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_GridRowX) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:5"!

Delta define: #Brazil_ContainerClasses_Window as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' titleA menuBarMenuA dragDropDispatcher minimumExtentA closePermission isModal') classVariables: 'MixinMetadata_Brazil_ContainerClasses_Window EnclosingObjects_Brazil_ContainerClasses_Window') !


"September 28, 2010 -> 23:12:5"!

(Delta mirrorFor: #Brazil_ContainerClasses_Window)
comment: 
'This is a top-level window. Its parent, if any, is a Desktop.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
closePermission: closePermission_val closePermission := closePermission_val! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
openModalWhileFalse: doneValueProvider afterOpening: setupBlock 
 self  isModal:true.
 self parent ifNil:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Window at: 2)  theDesktop add: self.
].
 self agent  modalOpenWhileFalse: doneValueProvider afterOpening:[ 
 setupBlock value.
 self visible:true.
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
titleA: titleA_val titleA := titleA_val! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
title 
^ self  titleA value.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Window_1_init 
 self titleA:( (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  Attribute  name:#'title' value:'Unnamed Window').
 self minimumExtentA:( (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  Attribute  name:#'minimumExtent' value:10 @10).
 self menuBarMenuA:( (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  Attribute  name:#'menuBarMenu' value:nil).
 self closePermission:nil.
 self dragDropDispatcher:nil.
 self isModal:nil.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
menuBarMenuA: menuBarMenuA_val menuBarMenuA := menuBarMenuA_val! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
open 
 self parent ifNil:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Window at: 2)  theDesktop add: self.
].
 self visible:true.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForWindow: self.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
titleA ^titleA! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
dragDropDispatcher: dragDropDispatcher_val dragDropDispatcher := dragDropDispatcher_val! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
new 
 self Brazil_ContainerClasses_Window_superInit_new.
 self Brazil_ContainerClasses_Window_1_init.
 self content: (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  CompositeVisual new.
 self visible:false.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
shrinkWrap: shrinkWrap 
 self areaClass:( shrinkWrap  ifTrue:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  Anchor.
] ifFalse:[ 
 (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  Frame.
]).
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
minimumExtent: aPoint 
 self  minimumExtentA value: aPoint.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
isModal: isModal_val isModal := isModal_val! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
menuBarMenuA ^menuBarMenuA! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
setupAreaForDesktop 
 self setArea:( (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  Frame visual: self).
 self area isZero ifTrue:[ 
 self area bounds:(70 @70 extent:(150 @100)).
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
isOpen 
^ self agent notNil and:[ 
 self agent isOpen.
].

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
close 
 self agent ifNotNil:[ 
 self agent close.
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
openOnDesktop: aDesktop 
 self parent isNil  ifTrue:[ 
 aDesktop add: self.
] ifFalse:[ 
 self parent ~~ aDesktop ifTrue:[ 
 self parent remove: self.
 aDesktop add: self.
].
].
 self visible:true.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
globalOrigin 
^ self bounds origin.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
shrinkWrapNow 
 self area extent: self content naturalExtent.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
hasPermissionToClose 
^( self  closePermission isNil or:[ 
 self  closePermission value.
]) and:[ 
|  theDsktop |
 theDsktop := self desktop.
 theDsktop isNil or:[ 
 theDsktop windowHasPermissionToClose: self.
].
].

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
add: newChild 
 self content add: newChild.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
window 
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
closePermission ^closePermission! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
Brazil_ContainerClasses_Window_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
menuBarMenu: newMenu 
 self  menuBarMenuA value: newMenu.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
mappedWindowClosed 
 self notifications send:#'closed'.
 self parent remove: self.
 self  isModal:false.
 self agent:nil.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
remove: existingChild 
 self content remove: existingChild.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
dragDropDispatcher ^dragDropDispatcher! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
resizeFromUserTo: newBounds 
#'BOGUS' yourself.
( self area isKindOf: (EnclosingObjects_Brazil_ContainerClasses_Window at: 1)  Frame)  ifTrue:[ 
 self area bounds: newBounds.
] ifFalse:[ 
 self occupyBounds: newBounds.
].
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
bounds: newBounds 
 self area bounds: newBounds.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
minimumExtent 
^ self  minimumExtentA value.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
extent: newExtent 
 self area extent: newExtent.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
setupAreaIn: child 
 child setupAreaForWindow.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
minimumExtentA: minimumExtentA_val minimumExtentA := minimumExtentA_val! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
occupyBoundsResponse: newBounds 
|  box |
 box := newBounds origin extent:( newBounds extent max: self  minimumExtent).
super  occupyBoundsResponse: box.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
isModal ^isModal! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
menuBarMenu 
^ self  menuBarMenuA value.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
minimumExtentA ^minimumExtentA! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
outerBounds 
^ self agent  ifNil:[ 
 self bounds.
] ifNotNil:[ 
 self agent outerBounds.
].

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
title: aString 
 self  titleA value: aString.
^ self.

! !

"September 28, 2010 -> 23:12:5"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) methodsFor: 'unclassified' !
findTargetForDragAt: globalPoint forSession: session 
^ self  dragDropDispatcher isNil  ifTrue:[ 
nil.
] ifFalse:[ 
 self  dragDropDispatcher  findTargetForDragAt: globalPoint -  self origin forSession: session.
].

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_ContainerClasses_Window := eos ! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_ContainerClasses_Window := mmd ! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_ContainerClasses_Window) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:6"!

Delta define: #Brazil_WidgetClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' MappableHolder Brazil_WidgetClasses_Icon_slot Anchor LineArea Brazil_WidgetClasses_ActiveIcon_slot LeafVisual Brazil_WidgetClasses_Button_slot Brazil_WidgetClasses_ListBox_slot Brazil_WidgetClasses_TextView_slot Brazil_WidgetClasses_LineShape_slot Brazil_WidgetClasses_RectangleShape_slot Brazil_WidgetClasses_PolygonShape_slot Brazil_WidgetClasses_SensitiveIcon_slot Brazil_WidgetClasses_EllipseShape_slot Frame BoxShape Holder Brazil_WidgetClasses_RoundedRectangleShape_slot Brazil_WidgetClasses_Hyperlink_slot Brazil_WidgetClasses_SensitiveLabel_slot Attribute Brazil_WidgetClasses_Label_slot PolygonArea Shape Brazil_WidgetClasses_TextDisplay_slot Brazil_WidgetClasses_Blank_slot Font') classVariables: 'MixinMetadata_Brazil_WidgetClasses EnclosingObjects_Brazil_WidgetClasses') !


"September 28, 2010 -> 23:12:6"!

(Delta mirrorFor: #Brazil_WidgetClasses)
comment: 
''!


"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
ListBox
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_ListBox_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_ListBox.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_ListBox_slot := myNested.
		].
	^Brazil_WidgetClasses_ListBox_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Hyperlink
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_Hyperlink_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_Hyperlink.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  Label)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_Hyperlink_slot := myNested.
		].
	^Brazil_WidgetClasses_Hyperlink_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
LineArea ^LineArea! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Attribute: Attribute_val Attribute := Attribute_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Anchor: Anchor_val Anchor := Anchor_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
RoundedRectangleShape
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_RoundedRectangleShape_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_RoundedRectangleShape.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  BoxShape)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_RoundedRectangleShape_slot := myNested.
		].
	^Brazil_WidgetClasses_RoundedRectangleShape_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Label
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_Label_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_Label.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_Label_slot := myNested.
		].
	^Brazil_WidgetClasses_Label_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
PolygonArea: PolygonArea_val PolygonArea := PolygonArea_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Shape: Shape_val Shape := Shape_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Font: Font_val Font := Font_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Brazil_WidgetClasses_1_init 
 self LeafVisual: (EnclosingObjects_Brazil_WidgetClasses at: 1)  visuals LeafVisual.
 self BoxShape: (EnclosingObjects_Brazil_WidgetClasses at: 1)  visuals BoxShape.
 self Shape: (EnclosingObjects_Brazil_WidgetClasses at: 1)  visuals Shape.
 self Attribute: (EnclosingObjects_Brazil_WidgetClasses at: 1)  plumbing Attribute.
 self Anchor: (EnclosingObjects_Brazil_WidgetClasses at: 1)  areas Anchor.
 self Font: (EnclosingObjects_Brazil_WidgetClasses at: 1)  plumbing Font.
 self LineArea: (EnclosingObjects_Brazil_WidgetClasses at: 1)  areas LineArea.
 self PolygonArea: (EnclosingObjects_Brazil_WidgetClasses at: 1)  areas PolygonArea.
 self Frame: (EnclosingObjects_Brazil_WidgetClasses at: 1)  areas Frame.
 self Holder: (EnclosingObjects_Brazil_WidgetClasses at: 1)  plumbing Holder.
 self MappableHolder: (EnclosingObjects_Brazil_WidgetClasses at: 1)  plumbing MappableHolder.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
MappableHolder: MappableHolder_val MappableHolder := MappableHolder_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_superInit_new.
 self Brazil_WidgetClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
PolygonArea ^PolygonArea! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Shape ^Shape! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
SensitiveIcon
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_SensitiveIcon_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_SensitiveIcon.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  Icon)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_SensitiveIcon_slot := myNested.
		].
	^Brazil_WidgetClasses_SensitiveIcon_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Font ^Font! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Holder: Holder_val Holder := Holder_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
EllipseShape
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_EllipseShape_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_EllipseShape.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  BoxShape)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_EllipseShape_slot := myNested.
		].
	^Brazil_WidgetClasses_EllipseShape_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Icon
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_Icon_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_Icon.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_Icon_slot := myNested.
		].
	^Brazil_WidgetClasses_Icon_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Brazil_WidgetClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Button
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_Button_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_Button.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_Button_slot := myNested.
		].
	^Brazil_WidgetClasses_Button_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Frame: Frame_val Frame := Frame_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
LineArea: LineArea_val LineArea := LineArea_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
SensitiveLabel
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_SensitiveLabel_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_SensitiveLabel.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  Label)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_SensitiveLabel_slot := myNested.
		].
	^Brazil_WidgetClasses_SensitiveLabel_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
PolygonShape
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_PolygonShape_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_PolygonShape.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  Shape)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_PolygonShape_slot := myNested.
		].
	^Brazil_WidgetClasses_PolygonShape_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
BoxShape: BoxShape_val BoxShape := BoxShape_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
TextView
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_TextView_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_TextView.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_TextView_slot := myNested.
		].
	^Brazil_WidgetClasses_TextView_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
MappableHolder ^MappableHolder! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
RectangleShape
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_RectangleShape_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_RectangleShape.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  BoxShape)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_RectangleShape_slot := myNested.
		].
	^Brazil_WidgetClasses_RectangleShape_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Anchor ^Anchor! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
ActiveIcon
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_ActiveIcon_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_ActiveIcon.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  Icon)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_ActiveIcon_slot := myNested.
		].
	^Brazil_WidgetClasses_ActiveIcon_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Frame ^Frame! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
BoxShape ^BoxShape! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Holder ^Holder! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
LeafVisual: LeafVisual_val LeafVisual := LeafVisual_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
LeafVisual ^LeafVisual! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
TextDisplay
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_TextDisplay_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_TextDisplay.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_TextDisplay_slot := myNested.
		].
	^Brazil_WidgetClasses_TextDisplay_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Attribute ^Attribute! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
LineShape
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_LineShape_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_LineShape.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_LineShape_slot := myNested.
		].
	^Brazil_WidgetClasses_LineShape_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) methodsFor: 'unclassified' !
Blank
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_WidgetClasses_Blank_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_WidgetClasses 
			nestedMixins at: #Brazil_WidgetClasses_Blank.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_WidgetClasses Mirror on: self  LeafVisual)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_WidgetClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_WidgetClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_WidgetClasses_Blank_slot := myNested.
		].
	^Brazil_WidgetClasses_Blank_slot! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses := eos ! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses := mmd ! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:6"!

Delta define: #Brazil_WidgetClasses_SensitiveIcon as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' entryAction exitAction mouseMovedAction mouseDownAction mouseUpAction') classVariables: 'MixinMetadata_Brazil_WidgetClasses_SensitiveIcon EnclosingObjects_Brazil_WidgetClasses_SensitiveIcon') !


"September 28, 2010 -> 23:12:6"!

(Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon)
comment: 
'This icon class adds to the superclass the ability to sense and respond to mouse events such as button presses and mouse movement.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
exitAction: exitAction_val exitAction := exitAction_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseMovedAction ^mouseMovedAction! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseEntryResponse: response 
 self  entryAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseMovedAction: mouseMovedAction_val mouseMovedAction := mouseMovedAction_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
respondToMouseMove 
 self  mouseMovedAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseMoveResponse: response 
 self  mouseMovedAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
respondToMouseExit 
 self  exitAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
entryAction: entryAction_val entryAction := entryAction_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
Brazil_WidgetClasses_SensitiveIcon_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
Brazil_WidgetClasses_SensitiveIcon_1_init 
 self entryAction:nil.
 self exitAction:nil.
 self mouseDownAction:nil.
 self mouseUpAction:nil.
 self mouseMovedAction:nil.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForSensitiveIcon: self.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseDownAction ^mouseDownAction! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_SensitiveIcon_superInit_new.
 self Brazil_WidgetClasses_SensitiveIcon_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseDownAction: mouseDownAction_val mouseDownAction := mouseDownAction_val! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
exitAction ^exitAction! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseDownLeftResponse: response 
 self  mouseDownAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseUpAction ^mouseUpAction! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
entryAction ^entryAction! !

"September 28, 2010 -> 23:12:6"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseUpAction: mouseUpAction_val mouseUpAction := mouseUpAction_val! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
respondToMouseEntry 
 self  entryAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseExitResponse: response 
 self  exitAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
respondToMouseUpLeft 
 self  mouseUpAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
mouseUpLeftResponse: response 
 self  mouseUpAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) methodsFor: 'unclassified' !
respondToMouseDownLeft 
 self  mouseDownAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_SensitiveIcon := eos ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_SensitiveIcon := mmd ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveIcon) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:7"!

Delta define: #Brazil_WidgetClasses_TextDisplay as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' textA fontA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_TextDisplay EnclosingObjects_Brazil_WidgetClasses_TextDisplay') !


"September 28, 2010 -> 23:12:7"!

(Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay)
comment: 
''!


"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
fontA: fontA_val fontA := fontA_val! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
naturalHeightForWidth: size 
^ self agent  ifNil:[ 
0.
] ifNotNil:[ 
 self agent naturalHeightForWidth: size.
].

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
naturalExtent 
^ self isMapped  ifTrue:[ 
 self agent naturalExtent.
] ifFalse:[ 
0 @0.
].

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
textA: textA_val textA := textA_val! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
isSquishy 
^true.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
Brazil_WidgetClasses_TextDisplay_1_init 
 self textA:( (EnclosingObjects_Brazil_WidgetClasses_TextDisplay at: 1)  Attribute  name:#'text' value: self String new).
 self fontA:( (EnclosingObjects_Brazil_WidgetClasses_TextDisplay at: 1)  Attribute  name:#'font' value: (EnclosingObjects_Brazil_WidgetClasses_TextDisplay at: 1)  Font normal).
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
text: aString 
 self  textA value: aString.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForTextDisplay: self.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
font 
^ self  fontA value.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
Brazil_WidgetClasses_TextDisplay_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_TextDisplay_superInit_new.
 self Brazil_WidgetClasses_TextDisplay_1_init.
 self affectsNaturalExtent: self  textA.
 self affectsNaturalExtent: self  fontA.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
text 
^ self  textA value.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self isMapped  ifTrue:[ 
 self agent naturalExtent.
] ifFalse:[ 
0 @0.
].

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
setupAreaForWrapper 
 self setArea:( (EnclosingObjects_Brazil_WidgetClasses_TextDisplay at: 1)  Frame visual: self) fullyCoverParent.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
textA ^textA! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
fontA ^fontA! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) methodsFor: 'unclassified' !
font: newFont 
 self  fontA value: newFont.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_TextDisplay := eos ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_TextDisplay := mmd ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextDisplay) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:7"!

Delta define: #Brazil_WidgetClasses_RoundedRectangleShape as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' cornerRadiusA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_RoundedRectangleShape EnclosingObjects_Brazil_WidgetClasses_RoundedRectangleShape') !


"September 28, 2010 -> 23:12:7"!

(Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape)
comment: 
''!


"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_RoundedRectangleShape_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
cornerRadiusA ^cornerRadiusA! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
cornerRadius: newRadius 
 self  cornerRadiusA value: newRadius.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
cornerRadius 
^ self  cornerRadiusA value.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
cornerRadiusA: cornerRadiusA_val cornerRadiusA := cornerRadiusA_val! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForRoundedRectangleShape: self.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_RoundedRectangleShape_1_init 
 self cornerRadiusA:( (EnclosingObjects_Brazil_WidgetClasses_RoundedRectangleShape at: 1)  Attribute  name:#'cornerRadius' value:5).
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_RoundedRectangleShape_superInit_new.
 self Brazil_WidgetClasses_RoundedRectangleShape_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_RoundedRectangleShape := eos ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_RoundedRectangleShape := mmd ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RoundedRectangleShape) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:7"!

Delta define: #Brazil_WidgetClasses_LineShape as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' widthA colorA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_LineShape EnclosingObjects_Brazil_WidgetClasses_LineShape') !


"September 28, 2010 -> 23:12:7"!

(Delta mirrorFor: #Brazil_WidgetClasses_LineShape)
comment: 
''!


"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
widthA: widthA_val widthA := widthA_val! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
legalAreaClassesInCompositeVisual 
^( self Array new:1)  at:1 put: (EnclosingObjects_Brazil_WidgetClasses_LineShape at: 1)  LineArea; 
 yourself.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
colorA: colorA_val colorA := colorA_val! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
computeNaturalExtent 
^( self area endPoint -  self area startPoint) abs.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
widthA ^widthA! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
setupAreaForCompositeVisual 
 self setArea:( (EnclosingObjects_Brazil_WidgetClasses_LineShape at: 1)  LineArea visual: self).
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
color 
^ self  colorA value.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
naturalExtent 
^ self  computeNaturalExtent.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_LineShape_1_init 
 self colorA:( (EnclosingObjects_Brazil_WidgetClasses_LineShape at: 1)  Attribute  name:#'color' value: (EnclosingObjects_Brazil_WidgetClasses_LineShape at: 2)  Color black).
 self widthA:( (EnclosingObjects_Brazil_WidgetClasses_LineShape at: 1)  Attribute  name:#'width' value:1).
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
width: newWidth 
 self  widthA value: newWidth.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForLineShape: self.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
colorA ^colorA! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
width 
^ self  widthA value.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
color: newColor 
 self  colorA value: newColor.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_LineShape_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_LineShape_superInit_new.
 self Brazil_WidgetClasses_LineShape_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_LineShape := eos ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_LineShape := mmd ! !

"September 28, 2010 -> 23:12:7"!

! (Delta mirrorFor: #Brazil_WidgetClasses_LineShape) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:8"!

Delta define: #Brazil_WidgetClasses_Label as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' textA colorA fontA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_Label EnclosingObjects_Brazil_WidgetClasses_Label') !


"September 28, 2010 -> 23:12:8"!

(Delta mirrorFor: #Brazil_WidgetClasses_Label)
comment: 
''!


"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
fontA: fontA_val fontA := fontA_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
naturalExtent 
^ self agent isNil  ifTrue:[ 
80 @25.
] ifFalse:[ 
 self agent naturalExtent.
].

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Label_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
colorA: colorA_val colorA := colorA_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
textA: textA_val textA := textA_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
color 
^ self  colorA value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
text: newLabel 
 self  textA value: newLabel.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Label_1_init 
 self textA:( (EnclosingObjects_Brazil_WidgetClasses_Label at: 1)  Attribute  name:#'text' value:'a label').
 self fontA:( (EnclosingObjects_Brazil_WidgetClasses_Label at: 1)  Attribute  name:#'font' value: (EnclosingObjects_Brazil_WidgetClasses_Label at: 1)  Font normal).
 self colorA:( (EnclosingObjects_Brazil_WidgetClasses_Label at: 1)  Attribute  name:#'color' value: (EnclosingObjects_Brazil_WidgetClasses_Label at: 2)  Color black).
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForLabel: self.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
font 
^ self  fontA value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
printOn: aStream 
super  printOn: aStream.
 aStream space; 
 print: self  label.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
color: newColor 
 self  colorA value: newColor.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_Label_superInit_new.
 self Brazil_WidgetClasses_Label_1_init.
 self affectsNaturalExtent: self  textA.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
label: newLabel 
 self text: newLabel.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
text 
^ self  textA value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self agent isNil  ifTrue:[ 
80 @25.
] ifFalse:[ 
 self agent naturalExtent.
].

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
setupAreaForCompositeVisual 
 self setArea:( (EnclosingObjects_Brazil_WidgetClasses_Label at: 1)  Anchor visual: self).
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
textA ^textA! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
label 
^ self  text.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
isActive 
^false.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
fontA ^fontA! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
font: newFont 
 self  fontA value: newFont.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) methodsFor: 'unclassified' !
colorA ^colorA! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_Label := eos ! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_Label := mmd ! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Label) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:8"!

Delta define: #Brazil_WidgetClasses_ListBox as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' displayBlock selectionChanged selectionIndexHolder objectsHolder showVScrollbarA doubleClickAction menuBlock showHScrollbarA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_ListBox EnclosingObjects_Brazil_WidgetClasses_ListBox') !


"September 28, 2010 -> 23:12:8"!

(Delta mirrorFor: #Brazil_WidgetClasses_ListBox)
comment: 
'A list of objects displayed as a sequence of strings. The string to show for each object is computed by the displayBlock. By default, the object''s printString is displayed.

Mappable properties:

objectsHolder <MappableHolder[Sequence]>
selectionIndexHolder <MappableHolder[Integer]>
showHScrollbarA <Attribute[Boolean | nil]> The nil value means show or hide as necessary.
showVScrollbarA <Attribute[Boolean | nil]>

Notifications:

doubleClickAction <[] | nil> If not nil, a block to invoke when a list item is double-clicked.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
objectsAsStrings 
^ self  objects collect: self  displayBlock.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showHScrollbarA: showHScrollbarA_val showHScrollbarA := showHScrollbarA_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showHScrollbar 
^ self  showHScrollbarA value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
menu 
^ self  menuBlock value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selectionIndex 
^ self  selectionIndexHolder value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
Brazil_WidgetClasses_ListBox_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showVScrollbar: newState 
 self  showVScrollbarA value: newState.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selectionChanged: selectionChanged_val selectionChanged := selectionChanged_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selectIndex: index 
( index  between:0 and: self  objects size) ifTrue:[ 
 self  selectionIndexHolder value: index.
].
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showVScrollbarA ^showVScrollbarA! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
createAgentUsing: agentFactory 
 agentFactory createAgentForListBox: self.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
menuBlock ^menuBlock! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selectionIndexHolder: selectionIndexHolder_val selectionIndexHolder := selectionIndexHolder_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_ListBox_superInit_new.
 self Brazil_WidgetClasses_ListBox_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
menuBlock: menuBlock_val menuBlock := menuBlock_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
doubleClickAction ^doubleClickAction! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showVScrollbar 
^ self  showVScrollbarA value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
select: anObject 
 self  selectIndex:( self  objects indexOf: anObject).
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
hasSelection 
^ self  selectionIndex ~=0.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
displayBlock ^displayBlock! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selectionIndexHolder ^selectionIndexHolder! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
naturalExtent 
^100 @( self  list size *15).

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
doubleClickAction: doubleClickAction_val doubleClickAction := doubleClickAction_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selection 
|  index  stuff |
 index := self  selectionIndex.
 stuff := self  objects.
^( index  between:1 and: stuff size)  ifTrue:[ 
 stuff at: index.
] ifFalse:[ 
nil.
].

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
displayBlock: displayBlock_val displayBlock := displayBlock_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
objectsHolder ^objectsHolder! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
list: list 
 self objects: list.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
objects: sequence 
|  originalSelection |
 originalSelection := self  selection.
 self  objectsHolder value: sequence.
 self  select: originalSelection.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
objects 
^ self  objectsHolder value.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selectionChanged ^selectionChanged! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showHScrollbarA ^showHScrollbarA! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
selectionDo: aBlock 
^( self  selectionIndex  between:1 and: self  objects size) ifTrue:[ 
 aBlock value:( self  objects at: self  selectionIndex).
].

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
computeNaturalExtent 
#'BOUGS' yourself.
^100 @( self  list size *15).

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
objectsHolder: objectsHolder_val objectsHolder := objectsHolder_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
list 
^ self  objects.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showVScrollbarA: showVScrollbarA_val showVScrollbarA := showVScrollbarA_val! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
Brazil_WidgetClasses_ListBox_1_init 
 self showHScrollbarA:( (EnclosingObjects_Brazil_WidgetClasses_ListBox at: 1)  Attribute  name:#'showHScrollbar' value:nil).
 self showVScrollbarA:( (EnclosingObjects_Brazil_WidgetClasses_ListBox at: 1)  Attribute  name:#'showVScrollbar' value:nil).
 self objectsHolder:( (EnclosingObjects_Brazil_WidgetClasses_ListBox at: 1)  MappableHolder with: self Array new).
 self displayBlock:[ : object | 
 object printString.
].
 self selectionIndexHolder:( (EnclosingObjects_Brazil_WidgetClasses_ListBox at: 1)  MappableHolder with:0).
 self selectionChanged:( self  selectionIndexHolder changed transformedUsing:[ : index | 
 index =0  ifTrue:[ 
nil.
] ifFalse:[ 
 self  list at: index.
].
]).
 self menuBlock:nil.
 self doubleClickAction:nil.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) methodsFor: 'unclassified' !
showHScrollbar: newState 
 self  showHScrollbarA value: newState.
^ self.

! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_ListBox := eos ! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_ListBox := mmd ! !

"September 28, 2010 -> 23:12:8"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ListBox) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:9"!

Delta define: #Brazil_WidgetClasses_Button as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' enabledA labelA action') classVariables: 'MixinMetadata_Brazil_WidgetClasses_Button EnclosingObjects_Brazil_WidgetClasses_Button') !


"September 28, 2010 -> 23:12:9"!

(Delta mirrorFor: #Brazil_WidgetClasses_Button)
comment: 
''!


"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
labelA ^labelA! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Button_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
doAction 
 self  action ifNotNil:[ : it | 
 it clone value.
].
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
enabledA ^enabledA! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
labelA: labelA_val labelA := labelA_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
enabledA: enabledA_val enabledA := enabledA_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Button_1_init 
 self labelA:( (EnclosingObjects_Brazil_WidgetClasses_Button at: 1)  Attribute  name:#'label' value:'unnamed').
 self enabledA:( (EnclosingObjects_Brazil_WidgetClasses_Button at: 1)  Attribute  name:#'enabled' value:true).
 self action:nil.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForPushButton: self.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
naturalExtent 
^ self agent isNil  ifTrue:[ 
80 @25.
] ifFalse:[ 
 self agent naturalExtent.
].

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
action ^action! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_Button_superInit_new.
 self Brazil_WidgetClasses_Button_1_init.
 self affectsNaturalExtent: self  labelA.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
label: newLabel 
 self  labelA value: newLabel.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self agent isNil  ifTrue:[ 
80 @25.
] ifFalse:[ 
 self agent naturalExtent.
].

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
action: action_val action := action_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
enabled: newState 
 self  enabledA value: newState.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
setupAreaForCompositeVisual 
 self setArea:( (EnclosingObjects_Brazil_WidgetClasses_Button at: 1)  Anchor visual: self).
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
label 
^ self  labelA value.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) methodsFor: 'unclassified' !
enabled 
^ self  enabledA value.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_Button := eos ! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_Button := mmd ! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Button) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:9"!

Delta define: #Brazil_WidgetClasses_ActiveIcon as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' hoverImageA downImageA enabledA disabledImageA action actOnMouseDownA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_ActiveIcon EnclosingObjects_Brazil_WidgetClasses_ActiveIcon') !


"September 28, 2010 -> 23:12:9"!

(Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon)
comment: 
''!


"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
hoverImage: aForm 
 self  hoverImageA value: aForm.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
doAction 
 self  enabled ifTrue:[ 
 self  action ifNotNil:[ 
 self  action reentrant value.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
disabledImage 
^ self  disabledImageA value.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
downImageA ^downImageA! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
downImage 
^ self  downImageA value.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
enabledA ^enabledA! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
disabledImageA ^disabledImageA! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
enabledA: enabledA_val enabledA := enabledA_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
downImageA: downImageA_val downImageA := downImageA_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
Brazil_WidgetClasses_ActiveIcon_1_init 
 self disabledImageA:( (EnclosingObjects_Brazil_WidgetClasses_ActiveIcon at: 1)  Attribute  name:#'disabledImage' value:nil).
 self hoverImageA:( (EnclosingObjects_Brazil_WidgetClasses_ActiveIcon at: 1)  Attribute  name:#'hoverImage' value:nil).
 self downImageA:( (EnclosingObjects_Brazil_WidgetClasses_ActiveIcon at: 1)  Attribute  name:#'downImage' value:nil).
 self enabledA:( (EnclosingObjects_Brazil_WidgetClasses_ActiveIcon at: 1)  Attribute  name:#'enabled' value:true).
 self actOnMouseDownA:( (EnclosingObjects_Brazil_WidgetClasses_ActiveIcon at: 1)  Attribute  name:#'actOnMouseDown' value:false).
 self action:nil.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
actOnMouseDownA ^actOnMouseDownA! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForActiveIcon: self.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
actOnMouseDownA: actOnMouseDownA_val actOnMouseDownA := actOnMouseDownA_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
actOnMouseDown: newValue 
 self  actOnMouseDownA value: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_ActiveIcon_superInit_new.
 self Brazil_WidgetClasses_ActiveIcon_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
hoverImageA ^hoverImageA! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
disabledImageA: disabledImageA_val disabledImageA := disabledImageA_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
hoverImageA: hoverImageA_val hoverImageA := hoverImageA_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
hoverImage 
^ self  hoverImageA value.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
disabledImage: aForm 
 self  disabledImageA value: aForm.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
enabled: aBoolean 
 self  enabledA value: aBoolean.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
downImage: aForm 
 self  downImageA value: aForm.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
actOnMouseDown 
^ self  actOnMouseDownA value.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
Brazil_WidgetClasses_ActiveIcon_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
enabled 
^ self  enabledA value.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
action ^action! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) methodsFor: 'unclassified' !
action: action_val action := action_val! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_ActiveIcon := eos ! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_ActiveIcon := mmd ! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_ActiveIcon) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:9"!

Delta define: #Brazil_WidgetClasses_PolygonShape as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_WidgetClasses_PolygonShape EnclosingObjects_Brazil_WidgetClasses_PolygonShape') !


"September 28, 2010 -> 23:12:9"!

(Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape)
comment: 
'A polygon defined by the collection of vertices held onto by the area.'!


"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_PolygonShape_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
legalAreaClassesInCompositeVisual 
^( self Array new:1)  at:1 put: (EnclosingObjects_Brazil_WidgetClasses_PolygonShape at: 1)  PolygonArea; 
 yourself.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
setupAreaForCompositeVisual 
 self setArea:( (EnclosingObjects_Brazil_WidgetClasses_PolygonShape at: 1)  PolygonArea visual: self).
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self area suggestedParentExtent.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForPolygonShape: self.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_PolygonShape_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
naturalExtent 
^ self  computeNaturalExtent.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_PolygonShape_superInit_new.
 self Brazil_WidgetClasses_PolygonShape_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_PolygonShape := eos ! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_PolygonShape := mmd ! !

"September 28, 2010 -> 23:12:9"!

! (Delta mirrorFor: #Brazil_WidgetClasses_PolygonShape) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:10"!

Delta define: #Brazil_WidgetClasses_Hyperlink as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' hoverColorA underlineHover dragTracker action downColorA underlineNormal') classVariables: 'MixinMetadata_Brazil_WidgetClasses_Hyperlink EnclosingObjects_Brazil_WidgetClasses_Hyperlink') !


"September 28, 2010 -> 23:12:10"!

(Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink)
comment: 
''!


"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
doAction 
 self  action ifNotNil:[ 
 self  action reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
standardHyperlinkColor 
^ (EnclosingObjects_Brazil_WidgetClasses_Hyperlink at: 2)  Color  h:240 s:1 v:9/10.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
dragTracker: dragTracker_val dragTracker := dragTracker_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
downColorA ^downColorA! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
hoverColor: newColor 
 self  hoverColorA value: newColor.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Hyperlink_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
dragTracker ^dragTracker! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
hoverColor 
^ self  hoverColorA value.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
action ^action! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_Hyperlink_superInit_new.
 self Brazil_WidgetClasses_Hyperlink_1_init.
 self label:'a hyperlink'.
 self color: self  standardHyperlinkColor.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
underlineHover ^underlineHover! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
changeColorTo: newColor 
 self colorA value: newColor.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
action: action_val action := action_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
hoverColorA ^hoverColorA! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
downColor: newColor 
 self  downColorA value: newColor.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForHyperlink: self.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
downColorA: downColorA_val downColorA := downColorA_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
downColor 
^ self  downColorA value.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Hyperlink_1_init 
 self hoverColorA:( (EnclosingObjects_Brazil_WidgetClasses_Hyperlink at: 1)  Attribute  name:#'hoverColor' value: self  standardHyperlinkColor).
 self downColorA:( (EnclosingObjects_Brazil_WidgetClasses_Hyperlink at: 1)  Attribute  name:#'downColor' value: self  standardHyperlinkColor).
 self underlineNormal:false.
 self underlineHover:true.
 self action:nil.
 self dragTracker:nil.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
hoverColorA: hoverColorA_val hoverColorA := hoverColorA_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
underlineHover: underlineHover_val underlineHover := underlineHover_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
underlineNormal ^underlineNormal! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) methodsFor: 'unclassified' !
underlineNormal: underlineNormal_val underlineNormal := underlineNormal_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_Hyperlink := eos ! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_Hyperlink := mmd ! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Hyperlink) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:10"!

Delta define: #Brazil_WidgetClasses_TextView as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' escapeKeyResponse menuBlock suppressScrollbarsA enterKeyResponse hasChangesH textA acceptKeyResponse postMapActions fontA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_TextView EnclosingObjects_Brazil_WidgetClasses_TextView') !


"September 28, 2010 -> 23:12:10"!

(Delta mirrorFor: #Brazil_WidgetClasses_TextView)
comment: 
''!


"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
postMapActions: postMapActions_val postMapActions := postMapActions_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
suppressScrollbarsA: suppressScrollbarsA_val suppressScrollbarsA := suppressScrollbarsA_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
finishedMapping 
super  finishedMapping.
 self  postMapActions do:[ : each | 
 each value.
].
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
textA: textA_val textA := textA_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
menu 
^ self  menuBlock value.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
hasChangesH ^hasChangesH! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
text: aString 
 self  textA value: aString.
 self  clearHasEditsFromUserFlag.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
acceptKeyResponse ^acceptKeyResponse! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
acceptKeyResponse: acceptKeyResponse_val acceptKeyResponse := acceptKeyResponse_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
fontA: fontA_val fontA := fontA_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
^ aMapping createAgentForTextView: self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
font 
^ self  fontA value.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
selectAll 
^ self isMapped  ifTrue:[ 
 self agent selectAll.
] ifFalse:[ 
 self  postMapActions add:[ 
 self agent selectAll.
].
].

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
postMapActions ^postMapActions! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
isSquishy 
^true.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
escapeKeyResponse ^escapeKeyResponse! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
text 
^ self  textA value.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
menuBlock: menuBlock_val menuBlock := menuBlock_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
selectionInterval 
^ self isMapped  ifTrue:[ 
 self agent selectionInterval.
] ifFalse:[ 
1 to:0.
].

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
suppressScrollbars 
^ self  suppressScrollbarsA value.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
suppressScrollbars: newValue 
 self  suppressScrollbarsA value: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
selectLine 
^ self isMapped  ifTrue:[ 
 self agent selectLine.
] ifFalse:[ 
 self  postMapActions add:[ 
 self agent selectLine.
].
].

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
Brazil_WidgetClasses_TextView_1_init 
 self textA:( (EnclosingObjects_Brazil_WidgetClasses_TextView at: 1)  Attribute  name:#'text' value: self String new).
 self fontA:( (EnclosingObjects_Brazil_WidgetClasses_TextView at: 1)  Attribute  name:#'font' value: (EnclosingObjects_Brazil_WidgetClasses_TextView at: 1)  Font normal).
 self suppressScrollbarsA:( (EnclosingObjects_Brazil_WidgetClasses_TextView at: 1)  Attribute  name:#'suppressScrollbars' value:false).
 self hasChangesH:( (EnclosingObjects_Brazil_WidgetClasses_TextView at: 1)  Holder with:false).
 self menuBlock:nil.
 self enterKeyResponse:nil.
 self escapeKeyResponse:nil.
 self acceptKeyResponse:nil.
 self postMapActions: (EnclosingObjects_Brazil_WidgetClasses_TextView at: 2)  OrderedCollection new.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_TextView_superInit_new.
 self Brazil_WidgetClasses_TextView_1_init.
 self affectsNaturalExtent: self  fontA.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
escapeKeyResponse: escapeKeyResponse_val escapeKeyResponse := escapeKeyResponse_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
hasChangesChannel 
^ self  hasEditsFromUserChannel.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
selectFrom: start to: end 
^ self isMapped  ifTrue:[ 
 self agent  selectFrom: start to: end.
] ifFalse:[ 
 self  postMapActions add:[ 
 self agent  selectFrom: start to: end.
].
].

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
enterKeyResponse: enterKeyResponse_val enterKeyResponse := enterKeyResponse_val! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
naturalHeightForWidth: size 
^ self agent  ifNil:[ 
0.
] ifNotNil:[ 
 self agent naturalHeightForWidth: size.
].

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
naturalExtent 
^ self agent  ifNil:[ 
0 @0.
] ifNotNil:[ 
 self agent naturalExtent.
].

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
maybeSelectCurrentLine 
 self  selectedText isEmpty ifTrue:[ 
 self  selectLine.
].
^ self  selectedText.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
acceptText: text 
^false.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
suppressScrollbarsA ^suppressScrollbarsA! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
enterKeyResponse ^enterKeyResponse! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
font: newFont 
 self  fontA value: newFont.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
Brazil_WidgetClasses_TextView_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
clearHasEditsFromUserFlag 
 self  hasChangesH value:false.
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
append: aString 
 self text:( self  text , aString).
 self agent ifNotNil:[ : it | 
 it scrollToEnd.
].
^ self.

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
fontA ^fontA! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
selectedText 
^ self isMapped  ifTrue:[ 
 self agent selectedText.
] ifFalse:[ 
#''.
].

! !

"September 28, 2010 -> 23:12:10"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self agent  ifNil:[ 
0 @0.
] ifNotNil:[ 
 self agent naturalExtent.
].

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
hasEditsFromUser 
^ self  hasChangesH value.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
menuBlock ^menuBlock! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
textA ^textA! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
hasEditsFromUserChannel 
^ self  hasChangesH changed.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
acceptTextFromAgent: text 
 self  textA acceptValueFromMapping: text.
 self agent hasUnacceptedEdits ifTrue:[ 
 self  hasChangesH value:true.
].
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) methodsFor: 'unclassified' !
hasChangesH: hasChangesH_val hasChangesH := hasChangesH_val! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_TextView := eos ! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_TextView := mmd ! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_TextView) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:11"!

Delta define: #Brazil_WidgetClasses_Icon as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' imageA') classVariables: 'MixinMetadata_Brazil_WidgetClasses_Icon EnclosingObjects_Brazil_WidgetClasses_Icon') !


"September 28, 2010 -> 23:12:11"!

(Delta mirrorFor: #Brazil_WidgetClasses_Icon)
comment: 
''!


"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
naturalExtent 
^ self  image  ifNotNil:[ : it | 
 it extent.
] ifNil:[ 
0 @0.
].

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Icon_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
computeNaturalExtent 
^ self  image  ifNotNil:[ 
 self  image extent.
] ifNil:[ 
0 @0.
].

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
image 
^ self  imageA value.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
imageA: imageA_val imageA := imageA_val! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
setupAreaForCompositeVisual 
 self setArea:( (EnclosingObjects_Brazil_WidgetClasses_Icon at: 1)  Anchor visual: self).
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Icon_1_init 
 self imageA:( (EnclosingObjects_Brazil_WidgetClasses_Icon at: 1)  Attribute  name:#'image' value:nil).
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForIcon: self.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
imageA ^imageA! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
image: aForm 
|  oldExtent |
 oldExtent := self  naturalExtent.
 self  imageA value: aForm.
 oldExtent = self  naturalExtent ifFalse:[ 
 self reportNaturalExtentChange.
].
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_Icon_superInit_new.
 self Brazil_WidgetClasses_Icon_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_Icon := eos ! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_Icon := mmd ! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Icon) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:11"!

Delta define: #Brazil_WidgetClasses_RectangleShape as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_WidgetClasses_RectangleShape EnclosingObjects_Brazil_WidgetClasses_RectangleShape') !


"September 28, 2010 -> 23:12:11"!

(Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape)
comment: 
''!


"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForRectangleShape: self.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_RectangleShape_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_RectangleShape_superInit_new.
 self Brazil_WidgetClasses_RectangleShape_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_RectangleShape_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_RectangleShape := eos ! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_RectangleShape := mmd ! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_RectangleShape) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:11"!

Delta define: #Brazil_WidgetClasses_SensitiveLabel as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' entryAction exitAction mouseMovedAction mouseDownAction mouseUpAction') classVariables: 'MixinMetadata_Brazil_WidgetClasses_SensitiveLabel EnclosingObjects_Brazil_WidgetClasses_SensitiveLabel') !


"September 28, 2010 -> 23:12:11"!

(Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel)
comment: 
'A sensitive label is a Label that listens to mouse input events.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
exitAction: exitAction_val exitAction := exitAction_val! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseMovedAction ^mouseMovedAction! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseEntryResponse: response 
 self  entryAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseMovedAction: mouseMovedAction_val mouseMovedAction := mouseMovedAction_val! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
respondToMouseMove 
 self  mouseMovedAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseMoveResponse: response 
 self  mouseMovedAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
respondToMouseExit 
 self  exitAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
Brazil_WidgetClasses_SensitiveLabel_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseDownLeftResponse: response 
 self  mouseDownAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
respondToMouseDownLeft 
 self  mouseDownAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForActiveLabel: self.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseDownAction ^mouseDownAction! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_SensitiveLabel_superInit_new.
 self Brazil_WidgetClasses_SensitiveLabel_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseDownAction: mouseDownAction_val mouseDownAction := mouseDownAction_val! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseExitResponse: response 
 self  exitAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseUpLeftResponse: response 
 self  mouseUpAction: response.
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseUpAction ^mouseUpAction! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
entryAction: entryAction_val entryAction := entryAction_val! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
mouseUpAction: mouseUpAction_val mouseUpAction := mouseUpAction_val! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
respondToMouseEntry 
 self  entryAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
isActive 
^true.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
respondToMouseUpLeft 
 self  mouseUpAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:11"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
exitAction ^exitAction! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
Brazil_WidgetClasses_SensitiveLabel_1_init 
 self entryAction:nil.
 self exitAction:nil.
 self mouseDownAction:nil.
 self mouseUpAction:nil.
 self mouseMovedAction:nil.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) methodsFor: 'unclassified' !
entryAction ^entryAction! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_SensitiveLabel := eos ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_SensitiveLabel := mmd ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_SensitiveLabel) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:12"!

Delta define: #Brazil_WidgetClasses_EllipseShape as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_WidgetClasses_EllipseShape EnclosingObjects_Brazil_WidgetClasses_EllipseShape') !


"September 28, 2010 -> 23:12:12"!

(Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape)
comment: 
''!


"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForEllipseShape: self.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_EllipseShape_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape) methodsFor: 'unclassified' !
Brazil_WidgetClasses_EllipseShape_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_EllipseShape_superInit_new.
 self Brazil_WidgetClasses_EllipseShape_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_EllipseShape := eos ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_EllipseShape := mmd ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_EllipseShape) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:12"!

Delta define: #Brazil_WidgetClasses_Blank as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Brazil_WidgetClasses_Blank EnclosingObjects_Brazil_WidgetClasses_Blank') !


"September 28, 2010 -> 23:12:12"!

(Delta mirrorFor: #Brazil_WidgetClasses_Blank)
comment: 
''!


"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
naturalExtent 
^0 @0.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Blank_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
new 
 self Brazil_WidgetClasses_Blank_superInit_new.
 self Brazil_WidgetClasses_Blank_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
Brazil_WidgetClasses_Blank_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
createAgentUsing: aMapping 
 aMapping createAgentForBlank: self.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
isBlank 
^true.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
computeNaturalExtent 
^0 @0.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) methodsFor: 'unclassified' !
childrenDo: aBlock 
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_WidgetClasses_Blank := eos ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_WidgetClasses_Blank := mmd ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_WidgetClasses_Blank) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:12"!

Delta define: #Brazil_AbilityClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Brazil_AbilityClasses_Mousability_slot Brazil_AbilityClasses_Draggability_slot Brazil_AbilityClasses_Ability_slot Brazil_AbilityClasses_ClickabilityAndDraggability_slot Brazil_AbilityClasses_Clickability_slot Brazil_AbilityClasses_FSM_slot') classVariables: 'MixinMetadata_Brazil_AbilityClasses EnclosingObjects_Brazil_AbilityClasses') !


"September 28, 2010 -> 23:12:12"!

(Delta mirrorFor: #Brazil_AbilityClasses)
comment: 
'*** EXPERIMENTAL/WORK IN PROGRESS: This code is not yet used by the core system, and may be significantly revised or removed *** This module implements and manages Abilities. Abilities are low-level input event interpreters that translate sequences of events such as mouse presse, releases and moves, into higher-level gestures such as button clicks and drag attempts.

   Copyright 2008 Cadence Design Systems, Inc.

   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
Brazil_AbilityClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
Ability
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_Ability_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AbilityClasses 
			nestedMixins at: #Brazil_AbilityClasses_Ability.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AbilityClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AbilityClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AbilityClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_Ability_slot := myNested.
		].
	^Brazil_AbilityClasses_Ability_slot! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
Clickability
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_Clickability_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AbilityClasses 
			nestedMixins at: #Brazil_AbilityClasses_Clickability.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AbilityClasses Mirror on: self  Mousability)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AbilityClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AbilityClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_Clickability_slot := myNested.
		].
	^Brazil_AbilityClasses_Clickability_slot! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
Draggability
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_Draggability_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AbilityClasses 
			nestedMixins at: #Brazil_AbilityClasses_Draggability.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AbilityClasses Mirror on: self  Mousability)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AbilityClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AbilityClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_Draggability_slot := myNested.
		].
	^Brazil_AbilityClasses_Draggability_slot! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
Mousability
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_Mousability_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AbilityClasses 
			nestedMixins at: #Brazil_AbilityClasses_Mousability.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AbilityClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AbilityClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AbilityClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_Mousability_slot := myNested.
		].
	^Brazil_AbilityClasses_Mousability_slot! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
ClickabilityAndDraggability
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_ClickabilityAndDraggability_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AbilityClasses 
			nestedMixins at: #Brazil_AbilityClasses_ClickabilityAndDraggability.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AbilityClasses Mirror on: self  Mousability)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AbilityClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AbilityClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_ClickabilityAndDraggability_slot := myNested.
		].
	^Brazil_AbilityClasses_ClickabilityAndDraggability_slot! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
Brazil_AbilityClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
FSM
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_FSM_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AbilityClasses 
			nestedMixins at: #Brazil_AbilityClasses_FSM.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AbilityClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AbilityClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AbilityClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_FSM_slot := myNested.
		].
	^Brazil_AbilityClasses_FSM_slot! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_superInit_new.
 self Brazil_AbilityClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses := eos ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses := mmd ! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:12"!

Delta define: #Brazil_AbilityClasses_FSM as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' states Brazil_AbilityClasses_FSM_State_slot initialState currentState') classVariables: 'MixinMetadata_Brazil_AbilityClasses_FSM EnclosingObjects_Brazil_AbilityClasses_FSM') !


"September 28, 2010 -> 23:12:12"!

(Delta mirrorFor: #Brazil_AbilityClasses_FSM)
comment: 
'Finite state machines are used by abilities to describe the interpretation of input they perform.'!


"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
Brazil_AbilityClasses_FSM_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
initialState: initialState_val initialState := initialState_val! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
states ^states! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
currentState ^currentState! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
State
	| nestedClass enclosingObjectArray myNested depth |
	Brazil_AbilityClasses_FSM_State_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Brazil_AbilityClasses_FSM 
			nestedMixins at: #Brazil_AbilityClasses_FSM_State.
		myNested := (nestedClass mixin |>  (MixinMetadata_Brazil_AbilityClasses_FSM Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Brazil_AbilityClasses_FSM size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Brazil_AbilityClasses_FSM at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Brazil_AbilityClasses_FSM_State_slot := myNested.
		].
	^Brazil_AbilityClasses_FSM_State_slot! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
enterState: newCurrentState 
 self  currentState = newCurrentState ifFalse:[ 
 self  currentState respondToExit.
 self  currentState: newCurrentState.
 self  currentState respondToEntry.
].
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
reset 
 self  currentState: self  initialState.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
Brazil_AbilityClasses_FSM_1_init 
 self states: (EnclosingObjects_Brazil_AbilityClasses_FSM at: 2)  OrderedCollection new.
 self initialState:nil.
 self currentState:nil.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
states: states_val states := states_val! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
initialState ^initialState! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
setInitialState: state 
 self  initialState: state.
 self  currentState: state.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
processEvent: event 
 self  currentState processEvent: event.
^ self.

! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
currentState: currentState_val currentState := currentState_val! !

"September 28, 2010 -> 23:12:12"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
newState 
|  state |
 state := self  State new.
 self  states add: state.
 self  initialState isNil ifTrue:[ 
 self  setInitialState: state.
].
^ state.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_FSM_superInit_new.
 self Brazil_AbilityClasses_FSM_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses_FSM := eos ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses_FSM := mmd ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:13"!

Delta define: #Brazil_AbilityClasses_FSM_State as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' eventResponses exitAction entryAction') classVariables: 'MixinMetadata_Brazil_AbilityClasses_FSM_State EnclosingObjects_Brazil_AbilityClasses_FSM_State') !


"September 28, 2010 -> 23:12:13"!

(Delta mirrorFor: #Brazil_AbilityClasses_FSM_State)
comment: 
''!


"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
exitAction: exitAction_val exitAction := exitAction_val! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
on: event do: action 
^ self  eventResponses  at: event put: action.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
eventResponses: eventResponses_val eventResponses := eventResponses_val! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
entryAction ^entryAction! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
exitAction ^exitAction! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
enterState: newCurrentState 
 (EnclosingObjects_Brazil_AbilityClasses_FSM_State at: 1)  enterState: newCurrentState.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
entryAction: entryAction_val entryAction := entryAction_val! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
eventResponses ^eventResponses! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
Brazil_AbilityClasses_FSM_State_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
respondToExit 
 self  exitAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
enter 
 self  enterState: self.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
Brazil_AbilityClasses_FSM_State_1_init 
 self eventResponses: (EnclosingObjects_Brazil_AbilityClasses_FSM_State at: 3)  Dictionary new.
 self entryAction:nil.
 self exitAction:nil.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
processEvent: event 
( self  eventResponses  at: event ifAbsent:[ 
^ self.
]) value.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
respondToEntry 
 self  entryAction ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_FSM_State_superInit_new.
 self Brazil_AbilityClasses_FSM_State_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses_FSM_State := eos ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses_FSM_State := mmd ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_FSM_State) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:13"!

Delta define: #Brazil_AbilityClasses_Mousability as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' behavior') classVariables: 'MixinMetadata_Brazil_AbilityClasses_Mousability EnclosingObjects_Brazil_AbilityClasses_Mousability') !


"September 28, 2010 -> 23:12:13"!

(Delta mirrorFor: #Brazil_AbilityClasses_Mousability)
comment: 
''!


"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
behavior: behavior_val behavior := behavior_val! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
detachFrom: presumedOwner 
 presumedOwner == self owner ifTrue:[ 
 self owner mouseDownLeftResponse:nil; 
 mouseUpLeftResponse:nil; 
 mouseMoveResponse:nil; 
 mouseEntryResponse:nil; 
 mouseExitResponse:nil.
 self  resetResponses.
 self owner:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
respondToMouseEntry 
 self  behavior processEvent:#'mouseEntry'.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
attachTo: newOwner 
super  attachTo: newOwner.
 self  behavior reset.
 self owner mouseDownLeftResponse:[ 
 self  respondToMouseDownLeft.
]; 
 mouseUpLeftResponse:[ 
 self  respondToMouseUpLeft.
]; 
 mouseMoveResponse:[ 
 self  respondToMouseMove.
]; 
 mouseEntryResponse:[ 
 self  respondToMouseEntry.
]; 
 mouseExitResponse:[ 
 self  respondToMouseExit.
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
respondToMouseMove 
 self  behavior processEvent:#'mouseMove'.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
resetResponses 
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
respondToMouseExit 
 self  behavior processEvent:#'mouseExit'.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
defineBehavior 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Mousability_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
behavior ^behavior! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Mousability_1_init 
 self behavior: (EnclosingObjects_Brazil_AbilityClasses_Mousability at: 1)  FSM new.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
respondToMouseUpLeft 
 self  behavior processEvent:#'mouseUp'.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
respondToMouseDownLeft 
 self  behavior processEvent:#'mouseDown'.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_Mousability_superInit_new.
 self Brazil_AbilityClasses_Mousability_1_init.
 self  defineBehavior.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses_Mousability := eos ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses_Mousability := mmd ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Mousability) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:13"!

Delta define: #Brazil_AbilityClasses_Clickability as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' clickResponse releaseResponse pressResponse') classVariables: 'MixinMetadata_Brazil_AbilityClasses_Clickability EnclosingObjects_Brazil_AbilityClasses_Clickability') !


"September 28, 2010 -> 23:12:13"!

(Delta mirrorFor: #Brazil_AbilityClasses_Clickability)
comment: 
'Clickability translates low-level events into click gestures. A click gesture follows the standard behavior of push buttons, where a button is clicked on a mouse up event that occurs within the button''s bounds after a prior mouse down event within the bounds. Moving the mouse outside the bounds and then releasing the mouse button effectively cancels the click in progress.

   Copyright 2008 Cadence Design Systems, Inc.

   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
clickResponse ^clickResponse! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
pressResponse: pressResponse_val pressResponse := pressResponse_val! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
hasMouse 
^ self owner localBounds containsPoint: self owner mousePoint.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
invokePressResponse 
 self  pressResponse ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
resetResponses 
 self  clickResponse:nil.
 self  pressResponse:nil.
 self  releaseResponse:nil.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
invokeReleaseResponse 
 self  releaseResponse ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
defineBehavior 
|  normal  down  outside |
 normal := self behavior newState.
 down := self behavior newState.
 outside := self behavior newState.
 normal exitAction:[ 
 self owner grabMouse.
]; 
 entryAction:[ 
 self owner releaseMouse.
]; 
  on:#'mouseDown' do:[ 
[ 
 self  invokePressResponse.
] ensure:[ 
 down enter.
].
].
 down  on:#'mouseUp' do:[ 
[ 
 self  invokeReleaseResponse.
 self  invokeClickResponse.
] ensure:[ 
 normal enter.
].
]; 
  on:#'mouseMove' do:[ 
 self  hasMouse ifFalse:[ 
[ 
 self  invokeReleaseResponse.
] ensure:[ 
 outside enter.
].
].
].
 outside  on:#'mouseUp' do:[ 
[ 
 self  invokeReleaseResponse.
] ensure:[ 
 normal enter.
].
]; 
  on:#'mouseMove' do:[ 
 self  hasMouse ifTrue:[ 
[ 
 self  invokePressResponse.
] ensure:[ 
 down enter.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
releaseResponse ^releaseResponse! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
releaseResponse: releaseResponse_val releaseResponse := releaseResponse_val! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Clickability_1_init 
 self clickResponse:nil.
 self pressResponse:nil.
 self releaseResponse:nil.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
invokeClickResponse 
 self  clickResponse ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Clickability_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
pressResponse ^pressResponse! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
clickResponse: clickResponse_val clickResponse := clickResponse_val! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_Clickability_superInit_new.
 self Brazil_AbilityClasses_Clickability_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses_Clickability := eos ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses_Clickability := mmd ! !

"September 28, 2010 -> 23:12:13"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Clickability) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:14"!

Delta define: #Brazil_AbilityClasses_Ability as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' owner') classVariables: 'MixinMetadata_Brazil_AbilityClasses_Ability EnclosingObjects_Brazil_AbilityClasses_Ability') !


"September 28, 2010 -> 23:12:14"!

(Delta mirrorFor: #Brazil_AbilityClasses_Ability)
comment: 
'This is the abstract superclass of abilities. Any ability is attached to the owner, which is the source of the low-level events it interprets. The owner is often a Visual'!


"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Ability_1_init 
 self owner:nil.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) methodsFor: 'unclassified' !
owner: owner_val owner := owner_val! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) methodsFor: 'unclassified' !
detachFrom: presumedOwner 
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Ability_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) methodsFor: 'unclassified' !
atttachTo: newOwner 
 self  owner: newOwner.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) methodsFor: 'unclassified' !
owner ^owner! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_Ability_superInit_new.
 self Brazil_AbilityClasses_Ability_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses_Ability := eos ! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses_Ability := mmd ! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Ability) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:14"!

Delta define: #Brazil_AbilityClasses_Draggability as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' dragContinueResponse dragStartResponse dropResponse') classVariables: 'MixinMetadata_Brazil_AbilityClasses_Draggability EnclosingObjects_Brazil_AbilityClasses_Draggability') !


"September 28, 2010 -> 23:12:14"!

(Delta mirrorFor: #Brazil_AbilityClasses_Draggability)
comment: 
'Draggability is the ability of a visual to initiate a drag once the mouse button has been pressed over it and then the mouse moved further than a certain threshold distance.'!


"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
dragContinueResponse ^dragContinueResponse! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
dragStartResponse ^dragStartResponse! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
dropResponse ^dropResponse! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
dragContinueResponse: dragContinueResponse_val dragContinueResponse := dragContinueResponse_val! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
dragStartResponse: dragStartResponse_val dragStartResponse := dragStartResponse_val! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
invokeDropResponse 
 self  dropResponse ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
resetResponses 
 self  dragStartResponse:nil.
 self  dragContinueResponse:nil.
 self  dropResponse:nil.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Draggability_1_init 
 self dragStartResponse:nil.
 self dragContinueResponse:nil.
 self dropResponse:nil.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
defineBehavior 
|  normalState  activatedState  draggingState  downPoint |
 normalState := self behavior newState.
 activatedState := self behavior newState.
 draggingState := self behavior newState.
 normalState entryAction:[ 
 self owner releaseMouse.
]; 
 exitAction:[ 
 self owner grabMouse.
]; 
  on:#'mouseDown' do:[ 
 downPoint := self owner mousePoint.
 activatedState enter.
].
 activatedState  on:#'mouseMove' do:[ 
( self   is: self owner mousePoint beyondDragThresholdFrom: downPoint) ifTrue:[ 
 draggingState enter.
].
]; 
  on:#'mouseUp' do:[ 
 normalState enter.
].
 draggingState entryAction:[ 
 self  invokeDragStartResponse.
]; 
  on:#'mouseMove' do:[ 
 self  invokeDragContinueResponse.
]; 
  on:#'mouseUp' do:[ 
 self  invokeDropResponse.
 normalState enter.
].
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
dragThreshold 
^5.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
invokeDragStartResponse 
 self  dragStartResponse ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_Draggability_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_Draggability_superInit_new.
 self Brazil_AbilityClasses_Draggability_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
is: point1 beyondDragThresholdFrom: point2 
^( point1 x -  point2 x) abs > self  dragThreshold or:[ 
( point1 y -  point2 y) abs > self  dragThreshold.
].

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
dropResponse: dropResponse_val dropResponse := dropResponse_val! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) methodsFor: 'unclassified' !
invokeDragContinueResponse 
 self  dragContinueResponse ifNotNil:[ : it | 
 it reentrant value.
].
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses_Draggability := eos ! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses_Draggability := mmd ! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_Draggability) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:14"!

Delta define: #Brazil_AbilityClasses_ClickabilityAndDraggability as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' mouseGrabLevel') classVariables: 'MixinMetadata_Brazil_AbilityClasses_ClickabilityAndDraggability EnclosingObjects_Brazil_AbilityClasses_ClickabilityAndDraggability') !


"September 28, 2010 -> 23:12:14"!

(Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability)
comment: 
'This class aggregates the two other abilities by becoming the owner of their instances and coordinating their actions and requests.

   Copyright 2008 Cadence Design Systems, Inc.

   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
mouseGrabLevel: mouseGrabLevel_val mouseGrabLevel := mouseGrabLevel_val! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
grabMouse 
 self  mouseGrabLevel:( self  mouseGrabLevel +1).
 self  mouseGrabLevel =1 ifTrue:[ 
 self owner grabMouse.
].
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
attachTo: newOwner 
super  attachTo: newOwner.
 self  mouseGrabLevel:0.
 self  attachClickability.
 self  attachDraggability.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
respondToMouseMove 
 self clickability respondToMouseMove.
 self draggability respondToMouseMove.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
resetResponses 
 self clickability detachFrom: self.
 self draggability detachFrom: self.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
respondToMouseExit 
 self clickability respondToMouseExit.
 self draggability respondToMouseExit.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
attachClickability 
 self clickability attachTo: self.
 self clickability pressResponse:[ 
 self respondToPress.
]; 
 releaseResponse:[ 
 self respondToRelease.
]; 
 clickResponse:[ 
 self respondToClick.
].
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
respondToMouseEntry 
 self clickability respondToMouseEntry.
 self draggability respondToMouseEntry.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_ClickabilityAndDraggability_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
attachDraggability 
 self draggability attachTo: self.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
respondToMouseUpLeft 
 self clickability respondToMouseUpLeft.
 self draggability respondToMouseUpLeft.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
Brazil_AbilityClasses_ClickabilityAndDraggability_1_init 
 self mouseGrabLevel:0.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
releaseMouse 
 self  mouseGrabLevel:( self  mouseGrabLevel - 1).
 self  mouseGrabLevel =0 ifTrue:[ 
 self owner releaseMouse.
].
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
mouseGrabLevel ^mouseGrabLevel! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
respondToMouseDownLeft 
 self clickability respondToMouseDownLeft.
 self draggability respondToMouseDownLeft.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) methodsFor: 'unclassified' !
new 
 self Brazil_AbilityClasses_ClickabilityAndDraggability_superInit_new.
 self Brazil_AbilityClasses_ClickabilityAndDraggability_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Brazil_AbilityClasses_ClickabilityAndDraggability := eos ! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Brazil_AbilityClasses_ClickabilityAndDraggability := mmd ! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #Brazil_AbilityClasses_ClickabilityAndDraggability) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:14"!

Delta define: #BrazilMappingForWin32 as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' TimeStamp BrazilMappingForWin32_WindowContentManager_slot BrazilMappingForWin32_AgentWithHandle_slot BrazilMappingForWin32_TextDisplayAgent_slot brazil BrazilMappingForWin32_HyperlinkAgentStateClasses_slot BrazilMappingForWin32_ImageAgent_slot BrazilMappingForWin32_MenuAgent_slot Callback Dictionary hyperlinkAgentStates BrazilMappingForWin32_VerticalVisualSequenceAgent_slot MessageBox BrazilMappingForWin32_EllipseShapeAgent_slot BrazilMappingForWin32_MenuBuilder_slot BrazilMappingForWin32_NullColoredAgent_slot UnhandledError useDoubleBuffering BrazilMappingForWin32_VerticalViewportAgent_slot BrazilMappingForWin32_ActiveImageAgentStateClasses_slot FileStream BrazilMappingForWin32_ListBoxAgent_slot BrazilMappingForWin32_PolygonShapeAgent_slot BrazilMappingForWin32_Agent_slot squeakWindowHandle ModifierKeyState BrazilMappingForWin32_DesktopAgent_slot Error BrazilMappingForWin32_ViewportAgent_slot NsFFISessionManager Font Alien Time BrazilMappingForWin32_AgentFactory_slot BrazilMappingForWin32_TextDecorator_slot Process BrazilMappingForWin32_WindowControlAgent_slot BrazilMappingForWin32_ActiveLabelAgent_slot BrazilMappingForWin32_RectangleShapeAgent_slot BrazilMappingForWin32_LineShapeAgent_slot BrazilMappingForWin32_BoxShapeAgent_slot windowsSession Transcript BrazilMappingForWin32_ActiveImageAgent_slot IdentityDictionary BrazilMappingForWin32_ButtonAgent_slot GenericAgent activeImageAgentStates BrazilMappingForWin32_LabelAgent_slot BlackMarket WorldState BrazilMappingForWin32_HyperlinkAgent_slot agentFactory BrazilMappingForWin32_RichEditControlAgent_slot BrazilMappingForWin32_WindowAgent_slot UnsafeAlien AbstractAgentFactory OrderedCollection BrazilMappingForWin32_BogusAgent_slot BrazilMappingForWin32_NullAgent_slot api BrazilMappingForWin32_SensitiveImageAgent_slot BrazilMappingForWin32_WindowsSession_slot BrazilMappingForWin32_TextViewAgent_slot') classVariables: 'MixinMetadata_BrazilMappingForWin32 EnclosingObjects_BrazilMappingForWin32') !


"September 28, 2010 -> 23:12:14"!

(Delta mirrorFor: #BrazilMappingForWin32)
comment: 
'This is the top-level Brazil Windows mapping module that holds together all the bits and pieces of the mapping, most importantly agent classes and the agent factory.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
EllipseShapeAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_EllipseShapeAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_EllipseShapeAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  BoxShapeAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_EllipseShapeAgent_slot := myNested.
		].
	^BrazilMappingForWin32_EllipseShapeAgent_slot! !

"September 28, 2010 -> 23:12:14"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
IdentityDictionary: IdentityDictionary_val IdentityDictionary := IdentityDictionary_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
MessageBox: MessageBox_val MessageBox := MessageBox_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ModifierKeyState: ModifierKeyState_val ModifierKeyState := ModifierKeyState_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ButtonAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ButtonAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_ButtonAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  WindowControlAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ButtonAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ButtonAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
WindowsSession
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
dumpError: ex toLog: filename 
|  signaler |
 self   appendToLogWithTimestamp: filename using:[ : stream | 
 signaler := ex signalerContext.
 stream cr; 
 nextPutAll:( self  safePrintStringOf: ex).
100 timesRepeat:[ 
 stream cr; 
 nextPutAll:( self  safePrintStringOf: signaler).
 signaler := signaler sender.
 signaler ifNil:[ 
^ self.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
BlackMarket ^BlackMarket! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Callback ^Callback! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Dictionary ^Dictionary! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
hyperlinkAgentStates ^hyperlinkAgentStates! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ImageAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ImageAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_ImageAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  NullAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ImageAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ImageAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Transcript ^Transcript! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
squeakWindowHandle: squeakWindowHandle_val squeakWindowHandle := squeakWindowHandle_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Font: Font_val Font := Font_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
UnhandledError ^UnhandledError! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
AbstractAgentFactory: AbstractAgentFactory_val AbstractAgentFactory := AbstractAgentFactory_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
useDoubleBuffering: useDoubleBuffering_val useDoubleBuffering := useDoubleBuffering_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ActiveImageAgentStateClasses
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveImageAgentStateClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_ActiveImageAgentStateClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveImageAgentStateClasses_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveImageAgentStateClasses_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
TextDecorator
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_TextDecorator_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_TextDecorator.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_TextDecorator_slot := myNested.
		].
	^BrazilMappingForWin32_TextDecorator_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
agentFactory ^agentFactory! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ModifierKeyState ^ModifierKeyState! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
NullAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_NullAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_NullAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  Agent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_NullAgent_slot := myNested.
		].
	^BrazilMappingForWin32_NullAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
LabelAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_LabelAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_LabelAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  NullAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_LabelAgent_slot := myNested.
		].
	^BrazilMappingForWin32_LabelAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Error ^Error! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
GenericAgent: GenericAgent_val GenericAgent := GenericAgent_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
NsFFISessionManager ^NsFFISessionManager! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Font ^Font! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
withLogFileNamed: filename do: action 
|  file |
 file := self  FileStream fileNamed: filename asFileName.
 file print: self  TimeStamp now; 
 cr.
^[ 
 action value: file.
] ensure:[ 
 file close.
].

! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Process: Process_val Process := Process_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
appendToLogWithTimestamp: filename using: action 
 self   appendToLog: filename using:[ : file | 
 file cr; 
 nextPutAll:'----------------------------------------------'; 
 cr; 
 nextPutAll: self  TimeStamp now printString; 
 cr; 
 nextPutAll:'----------------------------------------------'.
 action value: file.
].
^ self.

! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Dictionary: Dictionary_val Dictionary := Dictionary_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
BogusAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_BogusAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_BogusAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  NullAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_BogusAgent_slot := myNested.
		].
	^BrazilMappingForWin32_BogusAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
RectangleShapeAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_RectangleShapeAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_RectangleShapeAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  BoxShapeAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_RectangleShapeAgent_slot := myNested.
		].
	^BrazilMappingForWin32_RectangleShapeAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Process ^Process! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
AgentFactory
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_AgentFactory_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_AgentFactory.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  AbstractAgentFactory)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_AgentFactory_slot := myNested.
		].
	^BrazilMappingForWin32_AgentFactory_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
UnhandledError: UnhandledError_val UnhandledError := UnhandledError_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
STILL_LEFT_TO_DO 
 self error:'documentation only'.
^ self.

! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
windowsSession ^windowsSession! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Time ^Time! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
IdentityDictionary ^IdentityDictionary! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
GenericAgent ^GenericAgent! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
TimeStamp: TimeStamp_val TimeStamp := TimeStamp_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ViewportAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ViewportAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_ViewportAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  Agent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ViewportAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ViewportAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
HyperlinkAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_HyperlinkAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_HyperlinkAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  ActiveLabelAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_HyperlinkAgent_slot := myNested.
		].
	^BrazilMappingForWin32_HyperlinkAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Agent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_Agent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_Agent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  GenericAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_Agent_slot := myNested.
		].
	^BrazilMappingForWin32_Agent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ListBoxAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ListBoxAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_ListBoxAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  WindowControlAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ListBoxAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ListBoxAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
MenuAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_MenuAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_MenuAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_MenuAgent_slot := myNested.
		].
	^BrazilMappingForWin32_MenuAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ActiveImageAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveImageAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_ActiveImageAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  ImageAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveImageAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveImageAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
UnsafeAlien ^UnsafeAlien! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
AbstractAgentFactory ^AbstractAgentFactory! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
ActiveLabelAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveLabelAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_ActiveLabelAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  LabelAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveLabelAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveLabelAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
OrderedCollection: OrderedCollection_val OrderedCollection := OrderedCollection_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
WindowAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_WindowAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  AgentWithHandle)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowAgent_slot := myNested.
		].
	^BrazilMappingForWin32_WindowAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
WindowControlAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowControlAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_WindowControlAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  AgentWithHandle)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowControlAgent_slot := myNested.
		].
	^BrazilMappingForWin32_WindowControlAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
api: api_val api := api_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Callback: Callback_val Callback := Callback_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
LineShapeAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_LineShapeAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_LineShapeAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  NullAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_LineShapeAgent_slot := myNested.
		].
	^BrazilMappingForWin32_LineShapeAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
TimeStamp ^TimeStamp! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
NullColoredAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_NullColoredAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_NullColoredAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  NullAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_NullColoredAgent_slot := myNested.
		].
	^BrazilMappingForWin32_NullColoredAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
platform: platform 
 self BrazilMappingForWin32_superInit_platform: platform.
 self BrazilMappingForWin32_1_init: platform.
^ self.

! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
SensitiveImageAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_SensitiveImageAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_SensitiveImageAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  ImageAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_SensitiveImageAgent_slot := myNested.
		].
	^BrazilMappingForWin32_SensitiveImageAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
FileStream: FileStream_val FileStream := FileStream_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
brazil ^brazil! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
activeImageAgentStates: activeImageAgentStates_val activeImageAgentStates := activeImageAgentStates_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
AgentWithHandle
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_AgentWithHandle_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_AgentWithHandle.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  Agent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_AgentWithHandle_slot := myNested.
		].
	^BrazilMappingForWin32_AgentWithHandle_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Error: Error_val Error := Error_val! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
WindowContentManager
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowContentManager_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_WindowContentManager.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowContentManager_slot := myNested.
		].
	^BrazilMappingForWin32_WindowContentManager_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
MessageBox ^MessageBox! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
RichEditControlAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_RichEditControlAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_RichEditControlAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  WindowControlAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_RichEditControlAgent_slot := myNested.
		].
	^BrazilMappingForWin32_RichEditControlAgent_slot! !

"September 28, 2010 -> 23:12:15"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
useDoubleBuffering ^useDoubleBuffering! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  api resetForNewImageSession.
 self  windowsSession resetForNewImageSession.
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
FileStream ^FileStream! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
WorldState: WorldState_val WorldState := WorldState_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
brazil: brazil_val brazil := brazil_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
appendStackToLog: filename 
|  signaler |
 self   appendToLogWithTimestamp: filename using:[ : stream | 
100 timesRepeat:[ 
 stream cr; 
 nextPutAll:( self  safePrintStringOf: signaler).
 signaler := signaler sender.
 signaler ifNil:[ 
^ self.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
squeakWindowHandle ^squeakWindowHandle! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
VerticalVisualSequenceAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_VerticalVisualSequenceAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_VerticalVisualSequenceAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  NullColoredAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_VerticalVisualSequenceAgent_slot := myNested.
		].
	^BrazilMappingForWin32_VerticalVisualSequenceAgent_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
HyperlinkAgentStateClasses
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_HyperlinkAgentStateClasses_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_HyperlinkAgentStateClasses.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_HyperlinkAgentStateClasses_slot := myNested.
		].
	^BrazilMappingForWin32_HyperlinkAgentStateClasses_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
TextDisplayAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_TextDisplayAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_TextDisplayAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  RichEditControlAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_TextDisplayAgent_slot := myNested.
		].
	^BrazilMappingForWin32_TextDisplayAgent_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Alien ^Alien! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
PolygonShapeAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_PolygonShapeAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_PolygonShapeAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  BoxShapeAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_PolygonShapeAgent_slot := myNested.
		].
	^BrazilMappingForWin32_PolygonShapeAgent_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
hyperlinkAgentStates: hyperlinkAgentStates_val hyperlinkAgentStates := hyperlinkAgentStates_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
DesktopAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_DesktopAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_DesktopAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_DesktopAgent_slot := myNested.
		].
	^BrazilMappingForWin32_DesktopAgent_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
BrazilMappingForWin32_1_init: platform 
 self Dictionary: platform Collections Dictionary.
 self IdentityDictionary: platform Collections IdentityDictionary.
 self OrderedCollection: platform Collections OrderedCollection.
 self Error: platform Exceptions Error.
 self Alien: platform NsFFI Alien.
 self UnsafeAlien: platform NsFFI UnsafeAlien.
 self Callback: platform NsFFI Callback.
 self NsFFISessionManager: platform NativeSession NsFFISessionManager.
 self Transcript: platform Transcript.
 self FileStream: platform Files FileStream.
 self TimeStamp: platform Kernel TimeStamp.
 self Time: platform Kernel Time.
 self UnhandledError: platform Exceptions UnhandledError.
 self Process: platform Kernel Process.
 self BlackMarket: platform.
 self WorldState: platform Morphic WorldState.
 self brazil: platform NsPlatform soleInstance brazil.
 self MessageBox: self  brazil tools MessageBox.
 self AbstractAgentFactory: self  brazil mapping AbstractAgentFactory.
 self GenericAgent: self  brazil mapping BrazilMappingAgent.
 self Font: self  brazil plumbing Font.
 self ModifierKeyState: self  brazil plumbing ModifierKeyState.
 self api:( platform Win32API Win32API platform: platform).
 self agentFactory: self  AgentFactory new.
 self windowsSession: self  WindowsSession new.
 self squeakWindowHandle:nil.
 self useDoubleBuffering:false.
 self activeImageAgentStates: self  ActiveImageAgentStateClasses new.
 self hyperlinkAgentStates: self  HyperlinkAgentStateClasses new.
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
OrderedCollection ^OrderedCollection! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
WorldState ^WorldState! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
agentFactory: agentFactory_val agentFactory := agentFactory_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
appendToLog: filename using: action 
|  file |
 file := self  FileStream fileNamed: filename asFileName.
 file setToEnd.
^[ 
 action value: file.
] ensure:[ 
 file close.
].

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Time: Time_val Time := Time_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
NsFFISessionManager: NsFFISessionManager_val NsFFISessionManager := NsFFISessionManager_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
BlackMarket: BlackMarket_val BlackMarket := BlackMarket_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
safePrintStringOf: object 
^[ 
 object printString.
]  on: self  Error do:[ : ex | 
 ex return:'<printString error>'.
].

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
VerticalViewportAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_VerticalViewportAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_VerticalViewportAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  ViewportAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_VerticalViewportAgent_slot := myNested.
		].
	^BrazilMappingForWin32_VerticalViewportAgent_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
windowsSession: windowsSession_val windowsSession := windowsSession_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Transcript: Transcript_val Transcript := Transcript_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
UnsafeAlien: UnsafeAlien_val UnsafeAlien := UnsafeAlien_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
Alien: Alien_val Alien := Alien_val! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
TextViewAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_TextViewAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_TextViewAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  RichEditControlAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_TextViewAgent_slot := myNested.
		].
	^BrazilMappingForWin32_TextViewAgent_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
BrazilMappingForWin32_superInit_platform: platform 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
appendToLogWithMs: filename using: action 
 self   appendToLog: filename using:[ : file | 
 file cr; 
 nextPutAll: self  Time millisecondClockValue printString; 
 space.
 action value: file.
].
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
activeImageAgentStates ^activeImageAgentStates! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
BoxShapeAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_BoxShapeAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_BoxShapeAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self  NullAgent)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_BoxShapeAgent_slot := myNested.
		].
	^BrazilMappingForWin32_BoxShapeAgent_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
api ^api! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) methodsFor: 'unclassified' !
MenuBuilder
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_MenuBuilder_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32 
			nestedMixins at: #BrazilMappingForWin32_MenuBuilder.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32 Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32 size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32 at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_MenuBuilder_slot := myNested.
		].
	^BrazilMappingForWin32_MenuBuilder_slot! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32 := eos ! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32 := mmd ! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32) classSide methodsFor: 'unclassified' !
platform: platform 
^ self basicNew platform: platform.

! !

"September 28, 2010 -> 23:12:16"!

Delta define: #BrazilMappingForWin32_LineShapeAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_LineShapeAgent EnclosingObjects_BrazilMappingForWin32_LineShapeAgent') !


"September 28, 2010 -> 23:12:16"!

(Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent)
comment: 
'Maps LineShapes.'!


"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
( self  needsPaintingRect: parentRelativeUpdateRect) ifTrue:[ 
|  from  to  pen  oldPen |
 from := self visual area startPoint + parentOrigin.
 to := self visual area endPoint + parentOrigin.
 pen := (EnclosingObjects_BrazilMappingForWin32_LineShapeAgent at: 1)  api CreatePen  unsignedValue:0 value: self visual width value: self visual color asColorref.
 oldPen := (EnclosingObjects_BrazilMappingForWin32_LineShapeAgent at: 1)  api SelectObject  value: hdc value: pen.
 (EnclosingObjects_BrazilMappingForWin32_LineShapeAgent at: 1)  api MoveToEx  value: hdc value: from x value: from y value:0.
 (EnclosingObjects_BrazilMappingForWin32_LineShapeAgent at: 1)  api LineTo  value: hdc value: to x value: to y.
 (EnclosingObjects_BrazilMappingForWin32_LineShapeAgent at: 1)  api SelectObject  value: hdc value: oldPen.
 (EnclosingObjects_BrazilMappingForWin32_LineShapeAgent at: 1)  api DeleteObject value: pen.
].
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
needsPaintingRect: parentRelativeRect 
^ self  needsPainting and:[ 
 self visual bounds intersects: parentRelativeRect.
].

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_LineShapeAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual colorA to:[ : ignored | 
 self invalidate.
].
 self  map: self visual widthA to:[ : ignoder | 
 self invalidate.
].
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
needsPainting 
^ self visual visible and:[ 
 self visual color notNil and:[ 
 self visual color asColor isTransparent not.
].
].

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_LineShapeAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_LineShapeAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_LineShapeAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: point 
^nil.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_LineShapeAgent := eos ! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_LineShapeAgent := mmd ! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_LineShapeAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:16"!

Delta define: #BrazilMappingForWin32_RectangleShapeAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_RectangleShapeAgent EnclosingObjects_BrazilMappingForWin32_RectangleShapeAgent') !


"September 28, 2010 -> 23:12:16"!

(Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent)
comment: 
'Specializes the superclass to paint a rectangle when needed.'!


"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_RectangleShapeAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_RectangleShapeAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) methodsFor: 'unclassified' !
paintShapeOn: hdc in: boundingBox 
( self isColor: self visual color)  ifTrue:[ 
 self   paintSolidShapeOn: hdc in: boundingBox.
] ifFalse:[ 
 self   paintGradientShapeOn: hdc in: boundingBox.
].
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) methodsFor: 'unclassified' !
paintGradientShapeOn: hdc in: boundingBox 
 self  fillRectangle: boundingBox on: hdc withGradient: self visual color.
 self  setupNullBrushIn: hdc while:[ 
 self  setupOutlinePenIn: hdc while:[ 
 (EnclosingObjects_BrazilMappingForWin32_RectangleShapeAgent at: 1)  api Rectangle  value: hdc value: boundingBox left value: boundingBox top value: boundingBox right value: boundingBox bottom.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) methodsFor: 'unclassified' !
paintSolidShapeOn: hdc in: boundingBox 
 self  setupFillBrushIn: hdc while:[ 
 self  setupOutlinePenIn: hdc while:[ 
 (EnclosingObjects_BrazilMappingForWin32_RectangleShapeAgent at: 1)  api Rectangle  value: hdc value: boundingBox left value: boundingBox top value: boundingBox right value: boundingBox bottom.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_RectangleShapeAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_RectangleShapeAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_RectangleShapeAgent := eos ! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_RectangleShapeAgent := mmd ! !

"September 28, 2010 -> 23:12:16"!

! (Delta mirrorFor: #BrazilMappingForWin32_RectangleShapeAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:17"!

Delta define: #BrazilMappingForWin32_ActiveImageAgentStateClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_slot BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_slot BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_slot BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_slot BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_slot') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses') !


"September 28, 2010 -> 23:12:17"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses)
comment: 
'This is a nested module defining the classes of ActiveImageAgent states, to avoid having a unique set of those in each ActiveImageAgent instance.'!


"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
PressedState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses Mirror on: self  AgentState)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_slot! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
HoverState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses Mirror on: self  AgentState)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_slot! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
AgentState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_slot! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
WarmState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses Mirror on: self  NormalState)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_slot! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_superInit_new.
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) methodsFor: 'unclassified' !
NormalState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses Mirror on: self  AgentState)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_slot := myNested.
		].
	^BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_slot! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses := eos ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses := mmd ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:17"!

Delta define: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState') !


"September 28, 2010 -> 23:12:17"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState)
comment: 
'Represents the state when the mouse is outside the bounds of the visual.'!


"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) methodsFor: 'unclassified' !
respondToMouseEntry 
 self agent enterState: (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState at: 2)  activeImageAgentStates HoverState.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_1_init: theAgent 
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState_superInit_forAgent: theAgent 
super  forAgent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) methodsFor: 'unclassified' !
image 
^ self visual enabled  ifTrue:[ 
 self visual image.
] ifFalse:[ 
 self visual disabledImage ifNil:[ 
 self visual image.
].
].

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState := eos ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState := mmd ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_NormalState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:17"!

Delta define: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' agent') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState') !


"September 28, 2010 -> 23:12:17"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState)
comment: 
'This is the abstract superclass of all other other active image state classes.'!


"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_1_init: theAgent 
 self agent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_superInit_forAgent: theAgent 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
agent: agent_val agent := agent_val! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
respondToMouseMove 
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
respondToMouseExit 
 self  agent enterState: (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState at: 2)  activeImageAgentStates NormalState.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
respondToMouseEntry 
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
respondToMouseUpLeft 
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
visual 
^ self  agent visual.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
agent ^agent! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) methodsFor: 'unclassified' !
respondToMouseDownLeft 
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState := eos ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState := mmd ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_AgentState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:17"!

Delta define: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState') !


"September 28, 2010 -> 23:12:17"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState)
comment: 
'Represents the state when the mouse is within the bounds of the visual but no buttons are pressed.'!


"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_1_init: theAgent 
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState_superInit_forAgent: theAgent 
super  forAgent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) methodsFor: 'unclassified' !
image 
^( self visual enabled  ifTrue:[ 
 self visual hoverImage.
] ifFalse:[ 
 self visual disabledImage.
]) ifNil:[ 
 self visual image.
].

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) methodsFor: 'unclassified' !
respondToMouseExit 
 self agent enterState: (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState at: 2)  activeImageAgentStates NormalState.
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) methodsFor: 'unclassified' !
respondToMouseDownLeft 
 self visual enabled ifTrue:[ 
 self visual actOnMouseDown  ifTrue:[ 
 self visual doAction.
] ifFalse:[ 
 self agent enterState: (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState at: 2)  activeImageAgentStates PressedState.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState := eos ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState := mmd ! !

"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_HoverState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:17"!

Delta define: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState') !


"September 28, 2010 -> 23:12:17"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState)
comment: 
'Describes the state of the button when it was initially pressed and then the cursor left its bounds. It now displays itself as normal but will switch to being pressed again if the cursor reenters.'!


"September 28, 2010 -> 23:12:17"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState) methodsFor: 'unclassified' !
respondToMouseEntry 
 self agent enterState:( self agent isLeftButtonDown  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState at: 2)  activeImageAgentStates PressedState.
] ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState at: 2)  activeImageAgentStates HoverState.
]).
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_1_init: theAgent 
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState_superInit_forAgent: theAgent 
super  forAgent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState := eos ! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState := mmd ! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_WarmState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:18"!

Delta define: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState') !


"September 28, 2010 -> 23:12:18"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState)
comment: 
'Represents the state when the mouse is within the bounds of the visual and a button is pressed.'!


"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_1_init: theAgent 
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) methodsFor: 'unclassified' !
respondToMouseUpLeft 
 self agent enterState: (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState at: 2)  activeImageAgentStates HoverState.
( self visual enabled and:[ 
 self visual actOnMouseDown not.
]) ifTrue:[ 
 self visual doAction.
].
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState_superInit_forAgent: theAgent 
super  forAgent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) methodsFor: 'unclassified' !
image 
^( self visual enabled  ifTrue:[ 
 self visual downImage.
] ifFalse:[ 
 self visual disabledImage.
]) ifNil:[ 
 self visual image.
].

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) methodsFor: 'unclassified' !
respondToMouseExit 
 self agent enterState: (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState at: 2)  activeImageAgentStates WarmState.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState := eos ! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState := mmd ! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgentStateClasses_PressedState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:18"!

Delta define: #BrazilMappingForWin32_HyperlinkAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' state isTrackingButtonPress') classVariables: 'MixinMetadata_BrazilMappingForWin32_HyperlinkAgent EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent') !


"September 28, 2010 -> 23:12:18"!

(Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent)
comment: 
'Represents Brazil Hyperlinks. For now we are handling these as soft widgets because the story of Windows command link buttons and syslink widgets is unclear.'!


"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
isTrackingButtonPress: isTrackingButtonPress_val isTrackingButtonPress := isTrackingButtonPress_val! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
state: state_val state := state_val! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
processMouseMove 
 self  isTrackingButtonPress  ifTrue:[ 
 self visual containsMouse  ifTrue:[ 
 self  state isPressed ifFalse:[ 
 self  enterState: (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates PressedState.
].
] ifFalse:[ 
 self  state isNormal ifFalse:[ 
 self  enterState: (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates NormalState.
].
].
] ifFalse:[ 
 self  state isHover ifFalse:[ 
 self  enterState: (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates HoverState.
].
].
 self visual dragTracker ifNotNil:[ : it | 
 it respondToMouseMove.
].
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
processMouseDownLeft 
 self  isTrackingButtonPress:true.
 self  enterState: (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates PressedState.
 self visual dragTracker ifNotNil:[ : it | 
 it respondToMouseDown.
].
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
processMouseEntry 
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
state ^state! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
enterState: stateClass 
 self  state:( stateClass forAgent: self).
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
isTrackingButtonPress ^isTrackingButtonPress! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
paintUnderlineOn: hdc inside: box 
|  right  bottom  pen  oldPen |
 bottom := box top + self naturalExtent y - 1 min: box bottom.
 right := box left + self naturalExtent x min: box right.
 pen := (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  api CreatePen  unsignedValue:0 value:1 value: self  state color asColorref.
 oldPen := (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  api SelectObject  value: hdc value: pen.
 (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  api MoveToEx  value: hdc value: box left value: bottom value:0.
 (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  api LineTo  value: hdc value: right value: bottom.
 (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  api SelectObject  value: hdc value: oldPen.
 (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  api DeleteObject value: pen.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
super   contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin.
 self  state shouldShowUnderline ifTrue:[ 
 self   paintUnderlineOn: hdc inside:( self visual bounds translateBy: parentOrigin).
].
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_HyperlinkAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_HyperlinkAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
selectProperColorInto: hdc 
 (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  api SetTextColor  value: hdc value: self  state color asColorref.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
processMouseExit 
 self  enterState: (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates NormalState.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgent_1_init: visual 
 self state:( (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates NormalState forAgent: self).
 self isTrackingButtonPress:false.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) methodsFor: 'unclassified' !
processMouseUpLeft 
|  wasDragInProgress |
 self  isTrackingButtonPress:false.
 wasDragInProgress :=false.
 self visual dragTracker notNil ifTrue:[ 
 wasDragInProgress := self visual dragTracker isDragging.
 self visual dragTracker respondToMouseUp.
].
 self  state respondToButtonRelease.
 self  enterState:( self visual containsMouse  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates HoverState.
] ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent at: 1)  hyperlinkAgentStates NormalState.
]).
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_HyperlinkAgent := eos ! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_HyperlinkAgent := mmd ! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:18"!

Delta define: #BrazilMappingForWin32_ButtonAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' cachedNaturalExtent') classVariables: 'MixinMetadata_BrazilMappingForWin32_ButtonAgent EnclosingObjects_BrazilMappingForWin32_ButtonAgent') !


"September 28, 2010 -> 23:12:18"!

(Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent)
comment: 
'Describe the class in this comment.'!


"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
naturalExtent 
^ self  cachedNaturalExtent ifNil:[ 
 self  cachedNaturalExtent: self  measureNaturalExtent.
 self  cachedNaturalExtent.
].

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
finalExtentFrom: stringExtent 
|  extra |
 extra := stringExtent y.
^ stringExtent +(2 * extra @ extra).

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
 self  map: self visual labelA to: self ~#'setWindowText:'.
 self  map: self visual enabledA to: self ~#'enableWindow:'.
super  connectOwnArtifacts.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
controlClassName 
^'BUTTON'.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
setWindowText: newText 
 self  cachedNaturalExtent:nil.
super  setWindowText: newText asString.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
selectProperFontInto: hdc 
|  hfont |
 hfont := (EnclosingObjects_BrazilMappingForWin32_ButtonAgent at: 1)  windowsSession fontMapper defaultControlFontHandle.
 (EnclosingObjects_BrazilMappingForWin32_ButtonAgent at: 1)  api SelectObject  value: hdc value: hfont.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ButtonAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
processCommand: code 
 code = (EnclosingObjects_BrazilMappingForWin32_ButtonAgent at: 1)  api BN_CLICKED ifTrue:[ 
 self visual doAction.
].
^0.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
cachedNaturalExtent: cachedNaturalExtent_val cachedNaturalExtent := cachedNaturalExtent_val! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
measureNaturalExtent 
^ self  getDCWhile:[ : hdc | 
 self  selectProperFontInto: hdc.
 self  finalExtentFrom:( self   measureString: self visual label asString using: hdc).
] ifNotMapped:[ 
0 @0.
].

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ButtonAgent_1_init: visual 
 self cachedNaturalExtent:nil.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
measureString: aString using: hdc 
|  result |
^ (EnclosingObjects_BrazilMappingForWin32_ButtonAgent at: 1)  api POINT newC freeAfter:[ : sizeBuffer | 
 result := (EnclosingObjects_BrazilMappingForWin32_ButtonAgent at: 1)  api GetTextExtentPoint32  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_ButtonAgent at: 1)  UnsafeAlien forPointerTo: aString) value: aString size value: sizeBuffer address.
 result =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ButtonAgent at: 1)  api reportError:'GetTextExtentPoint32() failed'.
].
 sizeBuffer asPoint.
].

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
controlWindowTitle 
^ self visual label.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
cachedNaturalExtent ^cachedNaturalExtent! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_ButtonAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_ButtonAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ButtonAgent := eos ! !

"September 28, 2010 -> 23:12:18"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ButtonAgent := mmd ! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_ButtonAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:19"!

Delta define: #BrazilMappingForWin32_BoxShapeAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_BoxShapeAgent EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent') !


"September 28, 2010 -> 23:12:19"!

(Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent)
comment: 
'This is the abstract superclass of agents for those shape visuals that are defined by their bounding box, i.e. rectangles and ellipses.'!


"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
needsPainting 
^ self visual visible and:[ 
 self visual color asColor isTransparent not or:[ 
 self visual borderWidth >0.
].
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual colorA to:[ : ignored | 
 self invalidate.
].
 self  map: self visual borderColorA to:[ : ignored | 
 self invalidate.
].
 self  map: self visual borderWidthA to:[ : ignored | 
 self invalidate.
].
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
processMouseEntry 
 self visual respondToMouseEntry.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_BoxShapeAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
setupFillBrushIn: hdc while: action 
|  oldBrush |
 oldBrush := (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api GetStockObject unsignedValue: (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api DC_BRUSH).
 (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SetDCBrushColor  unsignedValue: hdc value:( self  asColor: self visual color) asColorref.
^ action ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  value: hdc value: oldBrush.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
isColor: color 
^ color asColor == color.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
processMouseDownLeft 
 self visual respondToMouseDownLeft.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
setupNullPenIn: hdc while: action 
|  oldPen |
 oldPen := (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api GetStockObject unsignedValue:8).
^ action ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  value: hdc value: oldPen.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
asColor: color 
^ color isColor  ifTrue:[ 
 color.
] ifFalse:[ 
 color startColor  mixed:1/2 with: color endColor.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_BoxShapeAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_BoxShapeAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: parentRelativePoint 
^( self visual bounds containsPoint: parentRelativePoint)  ifTrue:[ 
 self.
] ifFalse:[ 
nil.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
setupContextPenIn: hdc while: action 
|  oldPen |
 oldPen := (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api GetStockObject unsignedValue: (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api DC_PEN).
 (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SetDCPenColor  unsignedValue: hdc value: self visual borderColor asColorref.
^ action ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  value: hdc value: oldPen.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
setupNullBrushIn: hdc while: action 
|  oldBrush |
 oldBrush := (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api GetStockObject unsignedValue:5).
^ action ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent at: 1)  api SelectObject  value: hdc value: oldBrush.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
needsPaintingRect: parentRelativeRect 
^ self  needsPainting and:[ 
 self visual bounds intersects: parentRelativeRect.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_BoxShapeAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
( self  needsPaintingRect: parentRelativeUpdateRect) ifTrue:[ 
 self   paintShapeOn: hdc in:( self visual bounds translateBy: parentOrigin).
].
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
super  destroyOwnArtifacts.
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
paintShapeOn: hdc in: boundsBox 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
setupOutlinePenIn: hdc while: action 
^( self visual borderWidth >0 and:[ 
 self visual borderColor isTransparent not.
])  ifTrue:[ 
 self   setupContextPenIn: hdc while: action.
] ifFalse:[ 
 self   setupNullPenIn: hdc while: action.
].

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
processMouseExit 
 self visual respondToMouseExit.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
processMouseMove 
 self visual respondToMouseMove.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) methodsFor: 'unclassified' !
processMouseUpLeft 
 self visual respondToMouseUpLeft.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_BoxShapeAgent := eos ! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_BoxShapeAgent := mmd ! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_BoxShapeAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:19"!

Delta define: #BrazilMappingForWin32_TextDisplayAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_TextDisplayAgent EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent') !


"September 28, 2010 -> 23:12:19"!

(Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent)
comment: 
'Responsible for materializing TextDisplays as native Windows RichEdit controls (read-only).'!


"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) methodsFor: 'unclassified' !
dwExStyle 
^ (EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent at: 1)  api WS_EX_TRANSPARENT.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) methodsFor: 'unclassified' !
dwStyle 
^super  dwStyle | (EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent at: 1)  api ES_READONLY.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_TextDisplayAgent_1_init: visual 
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_TextDisplayAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) methodsFor: 'unclassified' !
createOwnArtifacts 
super  createOwnArtifacts.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent at: 1)  api EM_SHOWSCROLLBAR wParam: (EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent at: 1)  api SB_VERT lParam:0.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent at: 1)  api EM_SHOWSCROLLBAR wParam: (EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent at: 1)  api SB_HORZ lParam:0.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_TextDisplayAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_TextDisplayAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_TextDisplayAgent := eos ! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_TextDisplayAgent := mmd ! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDisplayAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:19"!

Delta define: #BrazilMappingForWin32_EllipseShapeAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_EllipseShapeAgent EnclosingObjects_BrazilMappingForWin32_EllipseShapeAgent') !


"September 28, 2010 -> 23:12:19"!

(Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent)
comment: 
'Specializes the superclass to paint an ellipse when needed.'!


"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_EllipseShapeAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent) methodsFor: 'unclassified' !
paintShapeOn: hdc in: boundingBox 
 self  setupFillBrushIn: hdc while:[ 
 self  setupOutlinePenIn: hdc while:[ 
 (EnclosingObjects_BrazilMappingForWin32_EllipseShapeAgent at: 1)  api Ellipse  value: hdc value: boundingBox left value: boundingBox top value: boundingBox right value: boundingBox bottom.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_EllipseShapeAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_EllipseShapeAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_EllipseShapeAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_EllipseShapeAgent := eos ! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_EllipseShapeAgent := mmd ! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_EllipseShapeAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:19"!

Delta define: #BrazilMappingForWin32_VerticalVisualSequenceAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_VerticalVisualSequenceAgent EnclosingObjects_BrazilMappingForWin32_VerticalVisualSequenceAgent') !


"September 28, 2010 -> 23:12:19"!

(Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent)
comment: 
'Takes care of vertical visual sequences, most importantly to optimize their display by only painting those children that intersect the update rectangle.'!


"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
|  myUpdateRect  updateTop  updateBottom  myOrigin |
( self needsPaintingRect: parentRelativeUpdateRect) ifTrue:[ 
|  rectToPaint |
 rectToPaint := self visual bounds intersect: parentRelativeUpdateRect.
( self isColor: self visual color)  ifTrue:[ 
 self  paintSolid: rectToPaint on: hdc translatedBy: parentOrigin.
] ifFalse:[ 
 self  paintGradient: rectToPaint on: hdc translatedBy: parentOrigin.
].
].
 myUpdateRect := parentRelativeUpdateRect translateBy: self visual origin negated.
 updateTop := myUpdateRect top.
 updateBottom := myUpdateRect bottom.
 myOrigin := parentOrigin + self visual origin.
 self childrenDo:[ : each | 
|  eachBounds |
 eachBounds := each visual bounds.
 eachBounds bottom > updateTop ifTrue:[ 
 eachBounds top > updateBottom ifTrue:[ 
^ self.
].
 each  contributeToWM_PAINTOn: hdc inside: myUpdateRect translatedBy: myOrigin.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_VerticalVisualSequenceAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_VerticalVisualSequenceAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_VerticalVisualSequenceAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_VerticalVisualSequenceAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:19"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_VerticalVisualSequenceAgent := eos ! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_VerticalVisualSequenceAgent := mmd ! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalVisualSequenceAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:20"!

Delta define: #BrazilMappingForWin32_SensitiveImageAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_SensitiveImageAgent EnclosingObjects_BrazilMappingForWin32_SensitiveImageAgent') !


"September 28, 2010 -> 23:12:20"!

(Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent)
comment: 
'Handles the SensitiveIcon Brazil visual.'!


"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
processMouseEntry 
 self visual respondToMouseEntry.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
processMouseDownLeft 
 self visual respondToMouseDownLeft.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_SensitiveImageAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_SensitiveImageAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_SensitiveImageAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
processMouseUpLeft 
 self visual respondToMouseUpLeft.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
processMouseExit 
 self visual respondToMouseExit.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_SensitiveImageAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
processMouseMove 
 self visual respondToMouseMove.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: parentRelativePoint 
^( self visual bounds containsPoint: parentRelativePoint)  ifTrue:[ 
 self.
] ifFalse:[ 
nil.
].

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_SensitiveImageAgent := eos ! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_SensitiveImageAgent := mmd ! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_SensitiveImageAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:20"!

Delta define: #BrazilMappingForWin32_PolygonShapeAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_PolygonShapeAgent EnclosingObjects_BrazilMappingForWin32_PolygonShapeAgent') !


"September 28, 2010 -> 23:12:20"!

(Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent)
comment: 
'Represents Brazil PolygonShape by painting them inside the host window. A polygon isn''t really a box shape, but the some of the inherited behavior is useful.'!


"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
( self needsPaintingRect: parentRelativeUpdateRect) ifTrue:[ 
 self   paintShapeOn: hdc translatedBy: parentOrigin.
].
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) methodsFor: 'unclassified' !
hostRelativeVerticesTranslatedBy: parentOrigin 
^ self visual area vertices collect:[ : each | 
 each + parentOrigin.
].

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_PolygonShapeAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_PolygonShapeAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) methodsFor: 'unclassified' !
paintShapeOn: hdc translatedBy: parentOrigin 
 self  setupFillBrushIn: hdc while:[ 
 self  setupOutlinePenIn: hdc while:[ 
|  vertices  pointSize  cVertices  address |
 vertices := self  hostRelativeVerticesTranslatedBy: parentOrigin.
 pointSize := (EnclosingObjects_BrazilMappingForWin32_PolygonShapeAgent at: 1)  api POINT dataSize.
 cVertices := (EnclosingObjects_BrazilMappingForWin32_PolygonShapeAgent at: 1)  Alien rawNewC:( vertices size * pointSize).
 address := cVertices address.
 vertices do:[ : vertex | 
( (EnclosingObjects_BrazilMappingForWin32_PolygonShapeAgent at: 1)  api POINT atAddress: address) initializeFromPoint: vertex.
 address := address + pointSize.
].
 (EnclosingObjects_BrazilMappingForWin32_PolygonShapeAgent at: 1)  api Polygon  value: hdc value: cVertices address value: vertices size.
 cVertices free.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_PolygonShapeAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_PolygonShapeAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_PolygonShapeAgent := eos ! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_PolygonShapeAgent := mmd ! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_PolygonShapeAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:20"!

Delta define: #BrazilMappingForWin32_WindowsSession as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' paraformatWithStandardTabStops BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_slot viewportWindowClass gdiPlus BrazilMappingForWin32_WindowsSession_WindowClass_slot textMeasurer dragCueWindow richEdit20Handle standardTopLevelWindowClass textMeasurerWindowClass fontMapper BrazilMappingForWin32_WindowsSession_TextMeasurer_slot BrazilMappingForWin32_WindowsSession_SystemMetrics_slot imageMapper applicationInstanceHandle_ doubleBufferingSurfaceManager lastActivity systemMetrics draggedImageWindowClass BrazilMappingForWin32_WindowsSession_FontMapper_slot BrazilMappingForWin32_WindowsSession_ImageMapper_slot BrazilMappingForWin32_WindowsSession_DragCueWindow_slot viewportContentCarrierWindowClass') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession EnclosingObjects_BrazilMappingForWin32_WindowsSession') !


"September 28, 2010 -> 23:12:20"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession)
comment: 
'Manages session-specific information such as the current application instance handle the handles of various system DLLs such as the RichEdit control. Also manages window classes.'!


"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
paraformatWithStandardTabStops ^paraformatWithStandardTabStops! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
paraformatWithStandardTabStops: paraformatWithStandardTabStops_val paraformatWithStandardTabStops := paraformatWithStandardTabStops_val! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
ImageMapper
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_ImageMapper_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_ImageMapper.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_ImageMapper_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_ImageMapper_slot! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
systemMetrics: systemMetrics_val systemMetrics := systemMetrics_val! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
dragCueWindow: dragCueWindow_val dragCueWindow := dragCueWindow_val! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
DoubleBufferingSurfaceManager
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_slot! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
logError: ex 
|  signaler |
 signaler := ex signalerContext.
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  Transcript cr; 
 nextPutAll: (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  Time now printString; 
 nextPutAll:': '; 
 nextPutAll:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  safePrintStringOf: ex); 
 nextPutAll:' (dumped to log file)'.
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)   dumpError: ex toLog:'brazilErrors.log'.
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  Transcript flush.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
SystemMetrics
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_SystemMetrics_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_SystemMetrics.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_SystemMetrics_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_SystemMetrics_slot! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
textMeasurer ^textMeasurer! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
viewportContentCarrierWindowClass ^viewportContentCarrierWindowClass! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
standardTopLevelWindowClass: standardTopLevelWindowClass_val standardTopLevelWindowClass := standardTopLevelWindowClass_val! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
draggedImageWindowClass: draggedImageWindowClass_val draggedImageWindowClass := draggedImageWindowClass_val! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
getStockWhiteBrush 
^ self  api GetStockObject unsignedValue: self  api WHITE_BRUSH.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
viewportWindowClass ^viewportWindowClass! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
fontMapper ^fontMapper! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_WindowsSession_superInit_new.
 self BrazilMappingForWin32_WindowsSession_1_init.
 self  gdiPlus startup.
 self  textMeasurer startup.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  applicationInstanceHandle_:nil.
 self  richEdit20Handle:0.
 self  gdiPlus resetForNewImageSession.
 self  standardTopLevelWindowClass resetForNewImageSession.
 self  viewportWindowClass resetForNewImageSession.
 self  viewportContentCarrierWindowClass resetForNewImageSession.
 self  textMeasurerWindowClass resetForNewImageSession.
 self  draggedImageWindowClass resetForNewImageSession.
 self  imageMapper resetForNewImageSession.
 self  fontMapper resetForNewImageSession.
 self  doubleBufferingSurfaceManager resetForNewImageSession.
 self  dragCueWindow ifNotNil:[ : it | 
 it resetForNewImageSession.
].
 self  dragCueWindow:nil.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
createParaformatWithStandardTabStops 
|  twipsPerStop  totalStops  paraformat |
 twipsPerStop :=360.
 totalStops :=32.
 paraformat := self  api PARAFORMAT new.
 paraformat dwMask: self  api PFM_TABSTOPS; 
 cTabCount: totalStops.
1  to: totalStops do:[ : index | 
 paraformat  rgxTabsAt: index put: index * twipsPerStop.
].
^ paraformat.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
imageMapper ^imageMapper! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
ensureRichEdit20Loaded 
 self  richEdit20Handle =0 ifTrue:[ 
( (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  Alien newCString:'Riched20.dll') freeAfter:[ : dllName | 
 self  richEdit20Handle:( self  api LoadLibrary unsignedValue: dllName address).
].
].
 self  richEdit20Handle =0 ifTrue:[ 
 self error:'failed to load Riched20.dll'.
].
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
api 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  api.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
doubleBufferingSurfaceManager ^doubleBufferingSurfaceManager! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
lastActivity ^lastActivity! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
imageMapper: imageMapper_val imageMapper := imageMapper_val! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
systemMetrics ^systemMetrics! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
TextMeasurer
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_TextMeasurer_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_TextMeasurer.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_TextMeasurer_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_TextMeasurer_slot! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
loadArrowCursor 
^ self  api LoadCursor  unsignedValue:0 value: self  api IDC_ARROW.

! !

"September 28, 2010 -> 23:12:20"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
loadApplicationIcon 
^ self  api LoadIcon  unsignedValue:0 value: self  api IDI_APPLICATION.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
FontMapper
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_FontMapper_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_FontMapper.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_FontMapper_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_FontMapper_slot! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
textMeasurerWindowClass: textMeasurerWindowClass_val textMeasurerWindowClass := textMeasurerWindowClass_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
applicationInstanceHandle_ ^applicationInstanceHandle_! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
fontMapper: fontMapper_val fontMapper := fontMapper_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
enableAll 
|  isWindow  isWindowVisible |
 isWindow := self  api IsWindow.
 isWindowVisible := self  api IsWindowVisible.
 self  topLevelWindowsDo:[ : hwnd | 
(( isWindow boolValue: hwnd) and:[ 
 isWindowVisible boolValue: hwnd.
]) ifTrue:[ 
 self  api EnableWindow  boolValue: hwnd value:1.
].
].
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  squeakWindowHandle ifNotNil:[ : hwnd | 
 self  api EnableWindow  boolValue: hwnd value:1.
].
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
applicationInstanceHandle_: applicationInstanceHandle__val applicationInstanceHandle_ := applicationInstanceHandle__val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
disableAll 
|  isWindow  isWindowVisible |
 isWindow := self  api IsWindow.
 isWindowVisible := self  api IsWindowVisible.
 self  topLevelWindowsDo:[ : hwnd | 
(( isWindow boolValue: hwnd) and:[ 
 isWindowVisible boolValue: hwnd.
]) ifTrue:[ 
 self  api EnableWindow  boolValue: hwnd value:0.
].
].
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession at: 1)  squeakWindowHandle ifNotNil:[ : hwnd | 
 self  api EnableWindow  boolValue: hwnd value:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
placeDragCue: image at: topLeft 
 self  dragCueWindow ifNotNil:[ 
 self  dragCueWindow close.
].
 self  dragCueWindow:( self  DragCueWindow  image: image at: topLeft).
 self  dragCueWindow open.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_1_init 
 self applicationInstanceHandle_:nil.
 self standardTopLevelWindowClass:(( self  WindowClass  name:'BrazilWindow' style: self  api CS_HREDRAW | self  api CS_VREDRAW bg:0) iconIdOrName:2).
 self viewportWindowClass:( self  WindowClass  name:'BrazilViewport' style:0 bg:0).
 self viewportContentCarrierWindowClass:( self  WindowClass  name:'BrazilViewportContent' style:0 bg:0).
 self textMeasurerWindowClass:( self  WindowClass  name:'BrazilTextMeasurer' style:0 bg:1).
 self draggedImageWindowClass:( self  WindowClass  name:'BrazilDraggedImage' style:0 bg:0).
 self richEdit20Handle:0.
 self gdiPlus: self  api GDIplus new.
 self imageMapper: self  ImageMapper new.
 self systemMetrics:( self  SystemMetrics usingApi: self  api).
 self fontMapper:( self  FontMapper usingApi: self  api).
 self doubleBufferingSurfaceManager: self  DoubleBufferingSurfaceManager new.
 self textMeasurer: self  TextMeasurer new.
 self paraformatWithStandardTabStops: self  createParaformatWithStandardTabStops.
 self dragCueWindow:nil.
 self lastActivity:0.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
removeDragCue 
 self  dragCueWindow ifNotNil:[ 
 self  dragCueWindow close.
 self  dragCueWindow:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
viewportContentCarrierWindowClass: viewportContentCarrierWindowClass_val viewportContentCarrierWindowClass := viewportContentCarrierWindowClass_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
richEdit20Handle ^richEdit20Handle! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
WindowClass
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_WindowClass_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_WindowClass.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_WindowClass_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_WindowClass_slot! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
textMeasurerWindowClass ^textMeasurerWindowClass! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
textMeasurer: textMeasurer_val textMeasurer := textMeasurer_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
gdiPlus: gdiPlus_val gdiPlus := gdiPlus_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
lastActivity: lastActivity_val lastActivity := lastActivity_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
dragCueWindow ^dragCueWindow! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
standardTopLevelWindowClass ^standardTopLevelWindowClass! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
gdiPlus ^gdiPlus! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
draggedImageWindowClass ^draggedImageWindowClass! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
DragCueWindow
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_DragCueWindow_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_DragCueWindow.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_DragCueWindow_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_DragCueWindow_slot! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
richEdit20Handle: richEdit20Handle_val richEdit20Handle := richEdit20Handle_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
topLevelWindowsDo: action 
 self  standardTopLevelWindowClass agentsByHandle keysDo: action.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
viewportWindowClass: viewportWindowClass_val viewportWindowClass := viewportWindowClass_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
doubleBufferingSurfaceManager: doubleBufferingSurfaceManager_val doubleBufferingSurfaceManager := doubleBufferingSurfaceManager_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
moveDragCueTo: point 
 self  dragCueWindow ifNotNil:[ 
 self  dragCueWindow moveTo: point.
].
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) methodsFor: 'unclassified' !
applicationInstanceHandle 
^ self  applicationInstanceHandle_ ifNil:[ 
 self  applicationInstanceHandle_:( self  api GetModuleHandle unsignedValue:0).
 self  applicationInstanceHandle_.
].

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession := eos ! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession := mmd ! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:21"!

Delta define: #BrazilMappingForWin32_WindowsSession_SystemMetrics as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' api') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_SystemMetrics EnclosingObjects_BrazilMappingForWin32_WindowsSession_SystemMetrics') !


"September 28, 2010 -> 23:12:21"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics)
comment: 
'Provides access to system metrics such as scrollbar sizes etc.'!


"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
usingApi: api_ 
 self BrazilMappingForWin32_WindowsSession_SystemMetrics_superInit_usingApi: api_.
 self BrazilMappingForWin32_WindowsSession_SystemMetrics_1_init: api_.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
virtualDesktopBounds 
|  width  height |
 width := self  api GetSystemMetrics unsignedValue: self  api SM_CXVIRTUALSCREEN.
 height := self  api GetSystemMetrics unsignedValue: self  api SM_CYVIRTUALSCREEN.
^0 @0 extent:( width @ height).

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_SystemMetrics_superInit_usingApi: api_ 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
scrollbarWidth 
|  result |
 result := self  api GetSystemMetrics signedValue: self  api SM_CXVSCROLL.
 result =0 ifTrue:[ 
^ self  api reportError:'GetSystemMetrics() failed'.
].
^ result.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
workArea 
^ self  api RECT newC freeAfter:[ : rect | 
|  result |
 result := self  api SystemParametersInfo  unsignedValue: self  api SPI_GETWORKAREA value:0 value: rect address value:0.
 result =0  ifTrue:[ 
 self  api reportError:'SystemParametersInfo() failed'.
0 @0 extent:(1024 @768).
] ifFalse:[ 
 rect asRectangle.
].
].

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_SystemMetrics_1_init: api_ 
 self api: api_.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
scrollbarHeight 
|  result |
 result := self  api GetSystemMetrics signedValue: self  api SM_CYHSCROLL.
 result =0 ifTrue:[ 
^ self  api reportError:'GetSystemMetrics() failed'.
].
^ result.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
desktopBounds 
|  width  height |
 width := self  api GetSystemMetrics unsignedValue: self  api SM_CXSCREEN.
 height := self  api GetSystemMetrics unsignedValue: self  api SM_CYSCREEN.
^0 @0 extent:( width @ height).

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
api ^api! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) methodsFor: 'unclassified' !
api: api_val api := api_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_SystemMetrics := eos ! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_SystemMetrics := mmd ! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_SystemMetrics) classSide methodsFor: 'unclassified' !
usingApi: api_ 
^ self basicNew usingApi: api_.

! !

"September 28, 2010 -> 23:12:21"!

Delta define: #BrazilMappingForWin32_WindowsSession_ImageMapper as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' bitmapsByImage') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_ImageMapper EnclosingObjects_BrazilMappingForWin32_WindowsSession_ImageMapper') !


"September 28, 2010 -> 23:12:21"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper)
comment: 
'Translates Squeak Image instances to GDI+ cached bitmaps and maintains a cache of translated bitmaps. Only supports 32-bit ARGB images.'!


"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  bitmapsByImage:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_ImageMapper at: 2)  IdentityDictionary new:100).
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_ImageMapper_1_init 
 self bitmapsByImage:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_ImageMapper at: 2)  IdentityDictionary new:100).
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
bitmapsByImage: bitmapsByImage_val bitmapsByImage := bitmapsByImage_val! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
bitmapsByImage ^bitmapsByImage! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
map: image forGraphics: graphics 
^ self  bitmapsByImage  at: image ifAbsentPut:[ 
 self   translateToBitmap: image using: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_ImageMapper at: 1)  gdiPlus.
].

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
translateToBitmap: image using: gdip 
|  byteSize  staticBits  imageBits  result |
 image depth ~=32 ifTrue:[ 
 self error:'Invalid image depth'.
].
 image unhibernate.
 imageBits := image bits.
 byteSize := imageBits byteSize.
 staticBits := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_ImageMapper at: 2)  Alien rawNewC: byteSize.
 staticBits  replaceFrom:1 to: byteSize with: imageBits startingAt:1.
 result := gdip Bitmap  width: image width height: image height stride: image width *4 format:2498570 bits: staticBits.
^ result.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_ImageMapper_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
translateImage: image forGraphics: graphics 
|  gdip  bitmap  cached |
 gdip := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_ImageMapper at: 1)  gdiPlus.
 bitmap := self   translateToBitmap: image using: gdip.
 cached := gdip CachedBitmap  bitmap: bitmap graphics: graphics.
 bitmap release.
^ cached.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_WindowsSession_ImageMapper_superInit_new.
 self BrazilMappingForWin32_WindowsSession_ImageMapper_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_ImageMapper := eos ! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_ImageMapper := mmd ! !

"September 28, 2010 -> 23:12:21"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_ImageMapper) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:22"!

Delta define: #BrazilMappingForWin32_WindowsSession_DragCueWindow as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' handle topLeft image paintstruct') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_DragCueWindow EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow') !


"September 28, 2010 -> 23:12:22"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow)
comment: 
'Instances of this class are created to show and manage the transparent window that displays the dragged object during a drag-and-drop operation.'!


"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
dwStyle 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api WS_POPUP.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
extent 
^ self  image extent.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
handle: handle_val handle := handle_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
paintstruct ^paintstruct! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
processWM_PAINT: args 
|  hdc  graphics  bitmap  result |
 hdc := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api BeginPaint  unsignedValue: self  handle value: self  paintstruct address.
 graphics := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 2)  windowsSession gdiPlus Graphics fromHDC: hdc.
 bitmap := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 2)  windowsSession imageMapper  map: self  image forGraphics: graphics.
 result := graphics  drawImage: bitmap at:0 @0.
 graphics release.
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api EndPaint  value: self  handle value: self  paintstruct address.
^0.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
image ^image! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
processWindowsMessage: args 
|  message |
 message := args message.
 message = (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api WM_ERASEBKGND ifTrue:[ 
^ self  processWM_ERASEBKGND: args.
].
 message = (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api WM_PAINT ifTrue:[ 
^ self  processWM_PAINT: args.
].
^ self  invokeDefWindowProc: args.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
initialWindowBounds 
^ self  topLeft - ( self  extent //2) extent: self  extent.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
dwExStyle 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api WS_EX_LAYERED | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api WS_EX_TRANSPARENT | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api WS_EX_TOPMOST | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api WS_EX_NOACTIVATE.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
processWM_ERASEBKGND: args 
^1.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
open 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  draggedImageWindowClass createWindowForAgent: self.
 self  handle =0 ifTrue:[ 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api reportError:'DragCue window creation failed'.
].
 self  paintstruct: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api PAINTSTRUCT newC.
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api ShowWindow  value: self  handle value: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api SW_SHOW.
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api SetLayeredWindowAttributes  value: self  handle value:0 value:160 value:1.
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api UpdateWindow value: self  handle.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
image: theImage at: initialTopLeft 
 self  BrazilMappingForWin32_WindowsSession_DragCueWindow_superInit_image: theImage at: initialTopLeft.
 self  BrazilMappingForWin32_WindowsSession_DragCueWindow_1_init_image: theImage at: initialTopLeft.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
paintstruct: paintstruct_val paintstruct := paintstruct_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
image: image_val image := image_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_DragCueWindow_1_init_image: theImage at: initialTopLeft 
 self image: theImage.
 self topLeft: initialTopLeft.
 self handle:0.
 self paintstruct:nil.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
isOpen 
^ self  handle ~=0.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  handle:0.
 self  paintstruct:0.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
topLeft ^topLeft! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
title 
^#''.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
moveTo: newTopLeft 
 self  topLeft: newTopLeft.
 self  isOpen ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api MoveWindow  value: self  handle value: self  topLeft x - ( self  image width //2) value: self  topLeft y - ( self  image height //2) value: self  image width value: self  image height value:1.
].
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_DragCueWindow_superInit_image: theImage at: initialTopLeft 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
handle ^handle! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
invokeDefWindowProc: args 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api DefWindowProc  unsignedValue: args hwnd value: args message value: args wParam value: args lParam.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
parentHandle 
^0.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
topLeft: topLeft_val topLeft := topLeft_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) methodsFor: 'unclassified' !
close 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow at: 1)  api DestroyWindow signedValue: self  handle.
 self  handle:0.
 self  paintstruct ifNotNil:[ 
 self  paintstruct free.
 self  paintstruct:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_DragCueWindow := eos ! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_DragCueWindow := mmd ! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DragCueWindow) classSide methodsFor: 'unclassified' !
image: theImage at: initialTopLeft 
^ self basicNew  image: theImage at: initialTopLeft.

! !

"September 28, 2010 -> 23:12:22"!

Delta define: #BrazilMappingForWin32_WindowsSession_FontMapper as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' arialFont charSet georgiaFont consolasFont verdanaFont fontHandlesBySize BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_slot preferredSize api defaultFont') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_FontMapper EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper') !


"September 28, 2010 -> 23:12:22"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper)
comment: 
'Manages Windows font handles corresponding to Brazil fonts.'!


"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
createFontHandleForSize: size 
|  hfont |
#'BOGUS' yourself.
( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper at: 2)  Alien newCString: self  defaultFont faceName) freeAfter:[ : faceName | 
 hfont := self  api CreateFont unsignedValueWithArguments:(( self Array new:14)  at:1 put: size negated; 
  at:2 put:0; 
  at:3 put:0; 
  at:4 put:0; 
  at:5 put:0; 
  at:6 put:0; 
  at:7 put:0; 
  at:8 put:0; 
  at:9 put: self  defaultCharsetId; 
  at:10 put:0; 
  at:11 put:0; 
  at:12 put: self  api NONANTIALIASED_QUALITY; 
  at:13 put:0; 
  at:14 put: faceName address; 
 yourself).
 hfont =0 ifTrue:[ 
^ self  api reportError:'CreateFont() failed'.
].
].
^ hfont.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_FontMapper_superInit_usingApi: api_ 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_FontMapper_1_init: api_ 
 self api: api_.
 self fontHandlesBySize: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper at: 2)  Dictionary new.
 self arialFont:( self  FontPreference  forFaceNamed:'Arial' sizes:(( self Array new:5)  at:1 put:10; 
  at:2 put:11; 
  at:3 put:13; 
  at:4 put:16; 
  at:5 put:20; 
 yourself)).
 self verdanaFont:( self  FontPreference  forFaceNamed:'Verdana' sizes:(( self Array new:5)  at:1 put:9; 
  at:2 put:10; 
  at:3 put:11; 
  at:4 put:13; 
  at:5 put:16; 
 yourself)).
 self georgiaFont:( self  FontPreference  forFaceNamed:'Georgia' sizes:(( self Array new:5)  at:1 put:10; 
  at:2 put:11; 
  at:3 put:13; 
  at:4 put:16; 
  at:5 put:20; 
 yourself)).
 self consolasFont:( self  FontPreference  forFaceNamed:'Consolas' sizes:(( self Array new:5)  at:1 put:10; 
  at:2 put:11; 
  at:3 put:13; 
  at:4 put:16; 
  at:5 put:20; 
 yourself)).
 self defaultFont: self  arialFont.
 self preferredSize:#'regular'.
 self charSet:nil.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
charSet ^charSet! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
consolasFont ^consolasFont! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
verdanaFont ^verdanaFont! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
fontSizesMap 
^ self  defaultFontSizesMap.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
defaultControlFontHandle 
^ self  handleForFont: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper at: 2)  Font normal.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
api ^api! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
fontHandlesBySize ^fontHandlesBySize! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
defaultCharsetId 
|  codepage |
 self  charSet isNil ifTrue:[ 
 codepage := self  api KernelDLL GetACP unsignedValue.
 self  charSet:((( self Array new:9)  at:1 put:1250 ->238; 
  at:2 put:1251 ->204; 
  at:3 put:1253 ->161; 
  at:4 put:1254 ->162; 
  at:5 put:1255 ->177; 
  at:6 put:1256 ->178; 
  at:7 put:1257 ->186; 
  at:8 put:1258 ->222; 
  at:9 put:874 ->163; 
 yourself)  detect:[ : elt | 
 elt key = codepage.
] ifNone:[ 
0 ->0.
]) value.
].
^ self  charSet.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
georgiaFont: georgiaFont_val georgiaFont := georgiaFont_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
preferredSize ^preferredSize! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
defaultFont ^defaultFont! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
verdanaFont: verdanaFont_val verdanaFont := verdanaFont_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  charSet:nil.
 self  fontHandlesBySize keys do:[ : each | 
 self  fontHandlesBySize removeKey: each.
].
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
arialFont ^arialFont! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
handleForFont: font 
|  translatedSize |
 translatedSize := self  fontSizesMap at: font sizeX.
^ self  fontHandlesBySize  at: translatedSize ifAbsentPut:[ 
 self  createFontHandleForSize: translatedSize.
].

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
defaultFont: defaultFont_val defaultFont := defaultFont_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
fontHandlesBySize: fontHandlesBySize_val fontHandlesBySize := fontHandlesBySize_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
georgiaFont ^georgiaFont! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
consolasFont: consolasFont_val consolasFont := consolasFont_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
FontPreference
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_WindowsSession_FontMapper 
			nestedMixins at: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_WindowsSession_FontMapper Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_slot := myNested.
		].
	^BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_slot! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
preferredSize: preferredSize_val preferredSize := preferredSize_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
arialFont: arialFont_val arialFont := arialFont_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
usingApi: api_ 
 self BrazilMappingForWin32_WindowsSession_FontMapper_superInit_usingApi: api_.
 self BrazilMappingForWin32_WindowsSession_FontMapper_1_init: api_.
^ self.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
charSet: charSet_val charSet := charSet_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
defaultFontSizesMap 
^ self  defaultFont fontSizes.

! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) methodsFor: 'unclassified' !
api: api_val api := api_val! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper := eos ! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_FontMapper := mmd ! !

"September 28, 2010 -> 23:12:22"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper) classSide methodsFor: 'unclassified' !
usingApi: api_ 
^ self basicNew usingApi: api_.

! !

"September 28, 2010 -> 23:12:23"!

Delta define: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' faceName fontSizes') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference') !


"September 28, 2010 -> 23:12:23"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference)
comment: 
'Describe the class in this comment.'!


"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
hugeFontSizes 
^ self  fontSizes *3/2 collect:[ : i | 
 i rounded.
].

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
faceName ^faceName! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
preferredSizes 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference at: 1)  preferredSize =#'large' ifTrue:[ 
^ self  largeFontSizes.
].
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference at: 1)  preferredSize =#'huge' ifTrue:[ 
^ self  hugeFontSizes.
].
^ self  fontSizes.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_superInit_forFaceNamed: fn sizes: sizes 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
fontSizes: fontSizes_val fontSizes := fontSizes_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
faceName: faceName_val faceName := faceName_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_1_init_forFaceNamed: fn sizes: sizes 
 self faceName: fn.
 self fontSizes: sizes.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
largeFontSizes 
^ self  fontSizes *6/5 collect:[ : i | 
 i rounded.
].

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
fontSizes ^fontSizes! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) methodsFor: 'unclassified' !
forFaceNamed: fn sizes: sizes 
 self  BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_superInit_forFaceNamed: fn sizes: sizes.
 self  BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference_1_init_forFaceNamed: fn sizes: sizes.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference := eos ! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference := mmd ! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_FontMapper_FontPreference) classSide methodsFor: 'unclassified' !
forFaceNamed: fn sizes: sizes 
^ self basicNew  forFaceNamed: fn sizes: sizes.

! !

"September 28, 2010 -> 23:12:23"!

Delta define: #BrazilMappingForWin32_WindowsSession_WindowClass as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' classStruct agentBeingCreated style bgBrush lastAgent lastHandle agentsByHandle className windowProc iconIdOrName createWindowEx defWindowProc name classAtom') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_WindowClass EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass') !


"September 28, 2010 -> 23:12:23"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass)
comment: 
'Represents a Windows window class, manages its registration and dispatches Windows notifications to agent instances open as windows of this class.'!


"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
setupClassStruct 
 self  classStruct: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api WNDCLASS newC.
 self  classStruct style: self  style; 
 lpfnWndProc: self  windowProc thunk asUnsignedLong; 
 hInstance: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  applicationInstanceHandle; 
 hIcon: self  loadIcon; 
 hCursor: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  loadArrowCursor; 
 hbrBackground: self  bgBrush; 
 lpszClassName: self  className address.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_WindowClass_superInit_name: theName style: styleBits bg: theBrush 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
setupWindowProc 
 self  windowProc:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api Callback  block:[ : args : result | 
 result returnInteger:( self  dispatchMessage: args).
] stdcallArgsClass: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api WindowProc).
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
name: theName style: styleBits bg: theBrush 
 self  BrazilMappingForWin32_WindowsSession_WindowClass_superInit_name: theName style: styleBits bg: theBrush.
 self  BrazilMappingForWin32_WindowsSession_WindowClass_1_init_name: theName style: styleBits bg: theBrush.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
defWindowProc ^defWindowProc! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
createWindowForAgent: agent 
|  title  bounds  handle |
 self  ensureRegistration.
 self  agentBeingCreated: agent.
 title := agent title asAlien.
 bounds := agent initialWindowBounds.
 handle := self  createWindowEx  unsignedValue: agent dwExStyle value: self  className address value: title address value: agent dwStyle value: bounds left value: bounds top value: bounds width value: bounds height value: agent parentHandle value:0 value: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  applicationInstanceHandle value:0.
 title free.
 handle =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api reportError:'CreateWindowEx failed'.
].
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
lastAgent ^lastAgent! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
createWindowEx ^createWindowEx! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
dispatchMessageUnsafe: args 
|  handle |
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  lastActivity: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 2)  Time millisecondClockValue.
 handle := args hwnd.
 self  lastHandle = handle ifTrue:[ 
^ self  lastAgent processWindowsMessage: args.
].
( self  agentsByHandle  at: handle ifAbsent:[ 
nil.
]) ifNotNil:[ : agent | 
 self  lastHandle: handle.
 self  lastAgent: agent.
^ agent processWindowsMessage: args.
].
( self  agentBeingCreated notNil and:[ 
 args message =129.
]) ifTrue:[ 
 self  lastHandle: handle.
 self  lastAgent: self  agentBeingCreated.
 self  agentsByHandle  at: handle put: self  agentBeingCreated.
 self  agentBeingCreated handle: handle.
 self  agentBeingCreated:nil.
^ self  lastAgent processWindowsMessage: args.
].
^ self  defWindowProc  unsignedValue: args hwnd value: args message value: args wParam value: args lParam.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  classAtom:0.
 self  className:nil.
 self  windowProc:nil.
 self  classStruct:nil.
 self  agentsByHandle do:[ : each | 
 each resetForNewImageSession.
].
 self  agentsByHandle:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 2)  Dictionary new:10).
 self  agentBeingCreated:nil.
 self  lastHandle:nil.
 self  lastAgent:nil.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
ensureRegistration 
 self  isRegistered ifFalse:[ 
 self  setupClassName.
 self  setupWindowProc.
 self  setupClassStruct.
 self  registerWindowClass.
].
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
lastAgent: lastAgent_val lastAgent := lastAgent_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
unregisterWindowForAgent: agent 
 self  agentsByHandle  removeKey: agent handle ifAbsent:[ 
^ self.
].
 agent handle:nil.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
windowProc: windowProc_val windowProc := windowProc_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
registerWindowClass 
|  result |
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api UnregisterClass  value: self  className address value: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  applicationInstanceHandle.
 result := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api RegisterClass unsignedValue: self  classStruct address.
 result =0 ifTrue:[ 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api reportError:'RegisterClass failed'.
].
 self  classAtom: result.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
name: name_val name := name_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_WindowClass_1_init_name: theName style: styleBits bg: theBrush 
 self name: theName.
 self style: styleBits.
 self bgBrush: theBrush.
 self iconIdOrName:nil.
 self classAtom:0.
 self className:nil.
 self windowProc:nil.
 self classStruct:nil.
 self agentsByHandle:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 2)  Dictionary new:10).
 self lastHandle:nil.
 self lastAgent:nil.
 self agentBeingCreated:nil.
 self defWindowProc: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api DefWindowProc.
 self createWindowEx: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api CreateWindowEx.
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
classAtom ^classAtom! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
classStruct ^classStruct! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
lastHandle: lastHandle_val lastHandle := lastHandle_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
classAtom: classAtom_val classAtom := classAtom_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
bgBrush: bgBrush_val bgBrush := bgBrush_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
setupClassName 
 self  className:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 2)  Alien newCString: self  name).
^ self.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
style ^style! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
createWindowEx: createWindowEx_val createWindowEx := createWindowEx_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
agentBeingCreated: agentBeingCreated_val agentBeingCreated := agentBeingCreated_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
iconIdOrName: iconIdOrName_val iconIdOrName := iconIdOrName_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
agentsByHandle ^agentsByHandle! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
classStruct: classStruct_val classStruct := classStruct_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
loadIconWithName: iconName 
^( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 2)  Alien newCString: iconName) freeAfter:[ : cString | 
|  iconHandle |
 iconHandle := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api LoadIcon  unsignedValue: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  applicationInstanceHandle value: cString.
 iconHandle =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api reportError:'LoadIcon failed'.
].
 iconHandle.
].

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
isRegistered 
^ self  classAtom ~=0.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
className ^className! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
dispatchMessage: args 
^ self  dispatchMessageUnsafe: args.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
iconIdOrName ^iconIdOrName! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
style: style_val style := style_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
loadIcon 
^ self  iconIdOrName  ifNil:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  loadApplicationIcon.
] ifNotNil:[ 
 self  iconIdOrName isString  ifTrue:[ 
 self  loadIconWithName: self  iconIdOrName.
] ifFalse:[ 
 self  loadIconWithId: self  iconIdOrName.
].
].

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
name ^name! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
agentBeingCreated ^agentBeingCreated! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
bgBrush ^bgBrush! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
className: className_val className := className_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
lastHandle ^lastHandle! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
defWindowProc: defWindowProc_val defWindowProc := defWindowProc_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
windowProc ^windowProc! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
loadIconWithId: iconId 
|  iconHandle |
 iconHandle := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api LoadIcon  unsignedValue: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  applicationInstanceHandle value:( iconId bitAnd:65535).
 iconHandle =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass at: 1)  api reportError:'LoadIcon failed'.
].
^ iconHandle.

! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) methodsFor: 'unclassified' !
agentsByHandle: agentsByHandle_val agentsByHandle := agentsByHandle_val! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_WindowClass := eos ! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_WindowClass := mmd ! !

"September 28, 2010 -> 23:12:23"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_WindowClass) classSide methodsFor: 'unclassified' !
name: theName style: styleBits bg: theBrush 
^ self basicNew  name: theName style: styleBits bg: theBrush.

! !

"September 28, 2010 -> 23:12:24"!

Delta define: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' extents inUse bitmaps') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager EnclosingObjects_BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager') !


"September 28, 2010 -> 23:12:24"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager)
comment: 
'Responsible for managing double buffering bitmaps we use for painting things. Holds onto one bitmap and its extent. A client requests a bitmap to use by sending #withBitmapOfExtent:for:do:.

The action block is evaluated with a Bitmap instance of the extent at least equal to the requested. If the existing bitmap is large enough, it is reused. If not, the old one is released and a new one is created. The instance has an ''inUse'' lock. An error is signalled if a buffer is requested while the action block of a prior #withBitmapOfExtent:for:do: request is still running.'!


"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  bitmaps:nil.
 self  extents:nil.
 self  inUse:false.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
bitmaps ^bitmaps! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
withBitmapOfExtent: requestedExtent do: action 
|  result  bitmap |
 bitmap := self  createBitmapOfExtent: requestedExtent.
^[ 
 action value: bitmap.
] ensure:[ 
 bitmap release.
].

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
inUse ^inUse! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
ORIGwithBitmapOfExtent: requestedExtent do: action 
 self  inUse ifTrue:[ 
^ self error:'nested call to double buffering manager - bitmap in use'.
].
 self  inUse:true.
( self bitmap isNil or:[ 
 self extent < requestedExtent.
]) ifTrue:[ 
 self bitmap notNil ifTrue:[ 
 self bitmap release.
].
 self  createBitmapOfExtent: requestedExtent.
].
^[ 
 action value: self bitmap.
] ensure:[ 
 self  inUse:false.
].

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
createBitmapOfExtent: requestedExtent 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager at: 1)  gdiPlus Bitmap  width: requestedExtent x height: requestedExtent y format:2498570.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
NOCACHEwithBitmapOfExtent: requestedExtent do: action 
 self  inUse ifTrue:[ 
^ self error:'nested call to double buffering manager - bitmap in use'.
].
 self  inUse:true.
 self  createBitmapOfExtent: requestedExtent.
^[ 
 action value: self bitmap.
] ensure:[ 
 self bitmap release.
 self bitmap:nil.
 self  inUse:false.
].

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
inUse: inUse_val inUse := inUse_val! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
bitmaps: bitmaps_val bitmaps := bitmaps_val! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_1_init 
 self bitmaps:nil.
 self extents:nil.
 self inUse:false.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
extents ^extents! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
extents: extents_val extents := extents_val! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_superInit_new.
 self BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager := eos ! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager := mmd ! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_DoubleBufferingSurfaceManager) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:24"!

Delta define: #BrazilMappingForWin32_WindowsSession_TextMeasurer as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' requestResizeContinuation handle textEditorHandle') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowsSession_TextMeasurer EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer') !


"September 28, 2010 -> 23:12:24"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer)
comment: 
'Manages an invisible window with a text control that we use to measure natural extent of rich edit controls. An instance used for that is maintained by WindowsSession.'!


"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
dwStyle 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api WS_OVERLAPPEDWINDOW.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
requestResizeContinuation: requestResizeContinuation_val requestResizeContinuation := requestResizeContinuation_val! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
sendMessage: msg wParam: wParam lParam: lParam 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api SendMessage  unsignedValue: self  textEditorHandle value: msg value: wParam value: lParam.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
processWM_NOTIFY: args 
|  header  requested |
 header := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api NMHDR atAddress: args lParam.
 header code = (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api EN_REQUESTRESIZE ifTrue:[ 
 self  requestResizeContinuation notNil ifTrue:[ 
 requested :=( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api REQRESIZE atAddress: header address) asRectangle.
 self  requestResizeContinuation value: requested.
].
].
^0.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
setEditorText: newText 
( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 2)  Alien newCString: newText asString) freeAfter:[ : cString | 
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api WM_SETTEXT wParam:0 lParam: cString address.
].
 newText isText ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 2)  TextDecorator  decorateControlWithHandle: self  textEditorHandle accordingTo: newText.
].
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
measureText: text heightForWidth: width 
 self  setEditorText: text.
 self  setEditorWidth: width.
^ self  requestEditorCurrentNaturalHeight.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
processWindowsMessage: args 
 args message = (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api WM_NOTIFY ifTrue:[ 
^ self  processWM_NOTIFY: args.
].
^ self  invokeDefWindowProc: args.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
initialWindowBounds 
^0 @0 extent:(10000 @10000).

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_TextMeasurer_1_init 
 self handle:0.
 self textEditorHandle:0.
 self requestResizeContinuation:nil.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
textEditorHandle: textEditorHandle_val textEditorHandle := textEditorHandle_val! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
dwExStyle 
^0.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
setEditorWidth: width 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api MoveWindow  value: self  textEditorHandle value:0 value:0 value: width value:10000 value:0.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
textEditorHandle ^textEditorHandle! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
handle: handle_val handle := handle_val! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowsSession_TextMeasurer_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_WindowsSession_TextMeasurer_superInit_new.
 self BrazilMappingForWin32_WindowsSession_TextMeasurer_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
resetForNewImageSession 
 self handle:0.
 self textEditorHandle:0.
 self  requestResizeContinuation:nil.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
requestResizeContinuation ^requestResizeContinuation! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
title 
^'BrazilTextMeasurer'.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
handle ^handle! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
createTextEditor 
|  eventMask  hfont |
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  ensureRichEdit20Loaded.
( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 2)  Alien newCString:'RICHEDIT20A') freeAfter:[ : className | 
 self textEditorHandle:( (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api CreateWindowEx unsignedValueWithArguments:(( self Array new:12)  at:1 put: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api WS_EX_CLIENTEDGE; 
  at:2 put: className address; 
  at:3 put:0; 
  at:4 put: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api WS_VISIBLE | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api WS_CHILD | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api ES_MULTILINE; 
  at:5 put:0; 
  at:6 put:0; 
  at:7 put:10000; 
  at:8 put:10000; 
  at:9 put: self  handle; 
  at:10 put:0; 
  at:11 put: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  applicationInstanceHandle; 
  at:12 put:0; 
 yourself)).
].
 self  textEditorHandle =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api reportError:'TextMeasurer control creation failed'.
].
 eventMask := self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api EM_GETEVENTMASK wParam:0 lParam:0.
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api EM_SETEVENTMASK wParam:0 lParam: eventMask | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api ENM_REQUESTRESIZE | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api ENM_CHANGE | (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api ENM_KEYEVENTS.
 hfont := (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  fontMapper defaultControlFontHandle.
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api WM_SETFONT wParam: hfont lParam:1.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
invokeDefWindowProc: args 
^ (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api DefWindowProc  unsignedValue: args hwnd value: args message value: args wParam value: args lParam.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
parentHandle 
^0.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
requestEditorCurrentNaturalHeight 
|  answer |
 answer :=0.
 self  requestResizeContinuation:[ : desiredRect | 
 answer := desiredRect height.
].
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api EM_REQUESTRESIZE wParam:0 lParam:0.
 self  requestResizeContinuation:nil.
^ answer.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) methodsFor: 'unclassified' !
startup 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  textMeasurerWindowClass createWindowForAgent: self.
 self  handle =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer at: 1)  api reportError:'TextMeasurer window creation failed'.
].
 self  createTextEditor.
^ self.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowsSession_TextMeasurer := eos ! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowsSession_TextMeasurer := mmd ! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowsSession_TextMeasurer) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:24"!

Delta define: #BrazilMappingForWin32_NullAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' lastMouseEventConsumer') classVariables: 'MixinMetadata_BrazilMappingForWin32_NullAgent EnclosingObjects_BrazilMappingForWin32_NullAgent') !


"September 28, 2010 -> 23:12:24"!

(Delta mirrorFor: #BrazilMappingForWin32_NullAgent)
comment: 
'This is an agent of a visual that does not map to a Windows artifact. Its important feature is that the #handle it reports upon request is the handle of the parent, so that any descendents can obtain the handle of the window artifact they belong to.'!


"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
isNull 
^true.

! !

"September 28, 2010 -> 23:12:24"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
handle 
^ self parent handle.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
connectArtifactsOfChild: childAgent 
 self parent connectArtifactsOfChild: childAgent.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
createOwnArtifacts 
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
lastMouseEventConsumer: lastMouseEventConsumer_val lastMouseEventConsumer := lastMouseEventConsumer_val! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
matchVisualsBounds 
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
lastMouseEventConsumer ^lastMouseEventConsumer! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_NullAgent_1_init: visual 
 self lastMouseEventConsumer:nil.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
super  destroyOwnArtifacts.
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
noteBeginningOfBoundsChangeAndProvideEndContinuation 
 self areBoundsChanging:true.
^ self areBoundsInAncestorsChanging  ifTrue:[ 
[ 
 self areBoundsChanging:false.
].
] ifFalse:[ 
|  originalBounds |
 originalBounds := self visual bounds.
[ 
 self parent ifNotNil:[ : it | 
 it invalidateRectangle: originalBounds.
].
 self invalidate.
 self areBoundsChanging:false.
].
].

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_NullAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_NullAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_NullAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: point 
|  pointRelativeToSelf |
( self visual bounds containsPoint: point) ifFalse:[ 
^nil.
].
 pointRelativeToSelf := point translateBy: self visual origin negated.
 self childrenReverseDo:[ : each | 
( each findConsumerForMouseEventAt: pointRelativeToSelf) ifNotNil:[ : consumer | 
 self  lastMouseEventConsumer: each.
^ consumer.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_NullAgent := eos ! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_NullAgent := mmd ! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:25"!

Delta define: #BrazilMappingForWin32_LabelAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' naturalExtent_') classVariables: 'MixinMetadata_BrazilMappingForWin32_LabelAgent EnclosingObjects_BrazilMappingForWin32_LabelAgent') !


"September 28, 2010 -> 23:12:25"!

(Delta mirrorFor: #BrazilMappingForWin32_LabelAgent)
comment: 
'Handles the Label visuals. This agent does not create a Windows control and instead contributes to WM_PAINT messages to display its visual. The agent is also passive with respect to mouse input.'!


"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
getDCWhile: action ifNotMapped: unmappedAction 
|  hwnd  hdc |
 hwnd := self windowHandle.
 hwnd isNil ifTrue:[ 
^ unmappedAction value.
].
 hdc := (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api GetDC unsignedValue: hwnd.
 hdc =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api reportError:'GetDC() failed'.
].
^[ 
 action value: hdc.
] ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api ReleaseDC  value: hwnd value: hdc.
].

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
naturalExtent 
 self  naturalExtent_ isNil ifTrue:[ 
 self   getDCWhile:[ : hdc | 
 self  naturalExtent_:( self  measureLabelUsing: hdc).
] ifNotMapped:[ 
^0 @0.
].
].
^ self  naturalExtent_.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
 self  map: self visual textA to: self ~#'matchVisualsText:'.
 self  map: self visual colorA to: self ~#'matchVisualsColor:'.
super  connectOwnArtifacts.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
matchVisualsColor: newColor 
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
|  windowRelativeBounds |
( self visual visible and:[ 
 self visual bounds intersects: parentRelativeUpdateRect.
]) ifTrue:[ 
 windowRelativeBounds := self visual bounds translateBy: parentOrigin.
 self   configureDC: hdc around:[ 
 self   paintOn: hdc inside: windowRelativeBounds.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
measureLabelUsing: hdc 
|  text  result |
 text := self visual text asString.
 self  selectProperFontInto: hdc.
^ (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api POINT newC freeAfter:[ : sizeBuffer | 
 result := (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api GetTextExtentPoint32  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  UnsafeAlien forPointerTo: text) value: text size value: sizeBuffer address.
 result =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api reportError:'GetTextExtentPoint32() failed'.
].
 sizeBuffer asPoint.
].

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
naturalExtent_ ^naturalExtent_! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
selectProperFontInto: hdc 
|  hfont |
 hfont := (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  windowsSession fontMapper handleForFont: self visual font.
 (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api SelectObject  value: hdc value: hfont.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_LabelAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_LabelAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_LabelAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
naturalExtent_: naturalExtent__val naturalExtent_ := naturalExtent__val! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
configureDC: hdc around: action 
|  oldMode |
 oldMode := (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api SetBkMode  unsignedValue: hdc value:1.
 self  selectProperColorInto: hdc.
 self  selectProperFontInto: hdc.
^ action ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api SetBkMode  unsignedValue: hdc value: oldMode.
].

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  naturalExtent_:nil.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
super  destroyOwnArtifacts.
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_LabelAgent_1_init: v 
 self naturalExtent_:nil.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
matchVisualsText: newText 
 self invalidate.
 self  flushLayoutCaches.
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
paintOn: hdc inside: box 
|  visualsText  success |
 visualsText := self visual text asString.
( (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  Alien newCString: visualsText) freeAfter:[ : buffer | 
 success := (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api TextOut  boolValue: hdc value: box left value: box top value: buffer address value: visualsText size.
].
 success ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api reportError:'TextOut() failed'.
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) methodsFor: 'unclassified' !
selectProperColorInto: hdc 
 (EnclosingObjects_BrazilMappingForWin32_LabelAgent at: 1)  api SetTextColor  value: hdc value: self visual color asColorref.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_LabelAgent := eos ! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_LabelAgent := mmd ! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_LabelAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:25"!

Delta define: #BrazilMappingForWin32_WindowControlAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' currentBounds lastHostRelativeBounds') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowControlAgent EnclosingObjects_BrazilMappingForWin32_WindowControlAgent') !


"September 28, 2010 -> 23:12:25"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent)
comment: 
'This is the abstract superclass of agents that represent Windows controls such as buttons and list boxes. It provides the behavior required to register the agent with the top-level window so that WM_COMMAND notifications are passed from the window to the control agent. It also implements #matchVisualsBounds to move the Windows control to match the bounds of the visual.'!


"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
dwStyle 
^ (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api WS_TABSTOP | (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api WS_CHILD | (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api WS_CLIPSIBLINGS.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowControlAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual visibleA to: self ~#'matchVisualsVisibility:'.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
selectControlFontInto: hdc 
|  hfont |
 hfont := (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  windowsSession fontMapper defaultControlFontHandle.
 (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api SelectObject  value: hdc value: hfont.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
matchVisualsVisibility: shouldBeVisible 
 self handle ifNotNil:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api ShowWindow  value: self handle value:( shouldBeVisible  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api SW_SHOW.
] ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api SW_HIDE.
]).
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
createOwnArtifacts 
|  className  title  windowRelativeBounds |
 className := (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  Alien newCString: self  controlClassName.
 title := (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  Alien newCString: self  controlWindowTitle asString.
 windowRelativeBounds := self visual bounds  translateFrom: self visual parent to: self visual window.
 self handle:( (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api CreateWindowEx unsignedValueWithArguments:(( self Array new:12)  at:1 put: self  dwExStyle; 
  at:2 put: className address; 
  at:3 put: title address; 
  at:4 put: self  dwStyle; 
  at:5 put: windowRelativeBounds left; 
  at:6 put: windowRelativeBounds top; 
  at:7 put: windowRelativeBounds width; 
  at:8 put: windowRelativeBounds height; 
  at:9 put: self parent handle; 
  at:10 put:0; 
  at:11 put: (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  windowsSession applicationInstanceHandle; 
  at:12 put:0; 
 yourself)).
 className free.
 title free.
 self handle =0  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api reportError:( self  controlClassName ,' creation failed').
] ifFalse:[ 
 self  setControlFont.
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
dwExStyle 
^0.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
setControlFont 
|  hfont |
 hfont := (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  windowsSession fontMapper defaultControlFontHandle.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api WM_SETFONT wParam: hfont lParam:1.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
currentBounds ^currentBounds! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_WindowControlAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_WindowControlAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
lastHostRelativeBounds: lastHostRelativeBounds_val lastHostRelativeBounds := lastHostRelativeBounds_val! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
currentBounds: currentBounds_val currentBounds := currentBounds_val! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
collectControlsByHandleInto: aDictionary 
 self handle notNil ifTrue:[ 
 aDictionary  at: self handle put: self.
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowControlAgent_1_init: visual 
 self currentBounds:(0 @0 extent:(0 @0)).
 self lastHostRelativeBounds:nil.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
controlClassName 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
processCommand: code 
^0.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
processNotification: code data: lparam 
^0.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
super  destroyOwnArtifacts.
 self handle ifNotNil:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api DestroyWindow value: self handle.
 self handle:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
lastHostRelativeBounds ^lastHostRelativeBounds! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
controlWindowTitle 
^#''.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) methodsFor: 'unclassified' !
matchVisualsBounds 
 self handle notNil ifTrue:[ 
 self currentBounds:( self parent rectangleRelativeToHostWindow: self visual bounds).
 self  lastHostRelativeBounds = self  currentBounds ifTrue:[ 
^ self.
].
 self  lastHostRelativeBounds: self  currentBounds.
 (EnclosingObjects_BrazilMappingForWin32_WindowControlAgent at: 1)  api MoveWindow valueWithArguments:(( self Array new:6)  at:1 put: self handle; 
  at:2 put: self  currentBounds left asInteger; 
  at:3 put: self  currentBounds top asInteger; 
  at:4 put: self  currentBounds width asInteger; 
  at:5 put: self  currentBounds height asInteger; 
  at:6 put:1; 
 yourself).
].
^ self.

! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowControlAgent := eos ! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowControlAgent := mmd ! !

"September 28, 2010 -> 23:12:25"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowControlAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:26"!

Delta define: #BrazilMappingForWin32_RichEditControlAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' knownControlContents cachedNaturalHeightWidth cachedNaturalHeightForWidth cachedNaturalExtent') classVariables: 'MixinMetadata_BrazilMappingForWin32_RichEditControlAgent EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent') !


"September 28, 2010 -> 23:12:26"!

(Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent)
comment: 
'The abstract superclass of agents that map to Rich Edit controls, such as text views and text displays. Implements the bulk of the machinery that has to do with measuring text extent.'!


"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
dwStyle 
^ (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api WS_CHILD | (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api ES_MULTILINE | (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api ES_WANTRETURN.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
processEN_CHANGE 
|  controlText |
 controlText := self getWindowTextIfNone:[ 
^0.
].
( controlText size ~= self  knownControlContents size or:[ 
 controlText ~= self  knownControlContents.
]) ifTrue:[ 
 self  knownControlContents: controlText.
 self visual acceptTextFromAgent: controlText.
].
^0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
clearEventMaskBits: bitsToClear 
|  eventMask |
 eventMask := self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_GETEVENTMASK wParam:0 lParam:0.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_SETEVENTMASK wParam:0 lParam:( eventMask bitClear: bitsToClear).
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
processEN_MSGFILTER: lparam 
^0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
createOwnArtifacts 
 (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  windowsSession ensureRichEdit20Loaded.
super  createOwnArtifacts.
 self  setEventMaskBits:( (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api ENM_CHANGE | (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api ENM_KEYEVENTS).
 self flag:#'BOGUS'.
 self  setTabStops:((1 to:32) collect:[ : i | 
 i *360.
]).
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_RichEditControlAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
dwExStyle 
^ (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api WS_EX_CLIENTEDGE.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
withSelectionIndicesDo: block 
|  min  max |
 (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api CHARRANGE newC freeAfter:[ : rangeBuffer | 
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_EXGETSEL wParam:0 lParam: rangeBuffer address.
 min := rangeBuffer cpMin.
 max := rangeBuffer cpMax.
].
^ block  value: min +1 value: max.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
selectProperFontInto: hdc 
|  hfont |
 hfont := (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  windowsSession fontMapper handleForFont: self visual font.
 (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api SelectObject  value: hdc value: hfont.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
ignoreEN_CHANGEWhile: action 
 self  clearEventMaskBits: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api ENM_CHANGE.
^ action ensure:[ 
 self  setEventMaskBits: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api ENM_CHANGE.
].

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
currentLineRange 
|  start  stop |
 start := self  currentLineCharacterStart +1.
 stop := start + self  currentLineLength.
^( self Array new:2)  at:1 put: start; 
  at:2 put: stop; 
 yourself.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
knownControlContents ^knownControlContents! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
currentLineCharacterStart 
^ self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_LINEINDEX wParam: self  currentLineIndex lParam:0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
selectAll 
^ self   selectFrom:1 to: self visual text size.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
knownControlContents: knownControlContents_val knownControlContents := knownControlContents_val! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
currentLineIndex 
^ self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_LINEFROMCHAR wParam:-1 lParam:0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_RichEditControlAgent_1_init: visual 
 self cachedNaturalExtent:nil.
 self cachedNaturalHeightWidth:nil.
 self cachedNaturalHeightForWidth:nil.
 self knownControlContents:#''.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
computeNaturalHeightForWidth: width orIfUnmapped: aBlock 
^( (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  windowsSession textMeasurer  measureText: self visual text heightForWidth: width) +10.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
controlClassName 
^'RICHEDIT20A'.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
measureWidth 
^ self  getDCWhile:[ : hdc | 
 self  measureWidthUsing: hdc.
] ifNotMapped:[ 
0 @0.
].

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
flushLayoutCaches 
 self  cachedNaturalExtent:nil.
 self  cachedNaturalHeightWidth:nil.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
setStandardTabStops 
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_SETPARAFORMAT wParam:0 lParam:( (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  UnsafeAlien forPointerTo: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  windowsSession paraformatWithStandardTabStops).
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
selectionRange 
^ self  withSelectionIndicesDo:[ : min : max | 
( self Array new:2)  at:1 put: min; 
  at:2 put: max; 
 yourself.
].

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
selectFrom: startIndex to: endIndex 
 (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api CHARRANGE newC freeAfter:[ : rangeBuffer | 
 rangeBuffer cpMin:( startIndex - 1); 
 cpMax: endIndex.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_EXSETSEL wParam:0 lParam: rangeBuffer address.
].
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
reemphasizeText: text 
 text isText ifTrue:[ 
 self  setTextAttributesFrom: text.
].
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
naturalHeightForWidth: width 
^ self  cachedNaturalHeightWidth = width  ifTrue:[ 
 self  cachedNaturalHeightForWidth.
] ifFalse:[ 
|  height |
 height := self   computeNaturalHeightForWidth: width orIfUnmapped:[ 
^25.
].
 self  cachedNaturalHeightWidth: width.
 self  cachedNaturalHeightForWidth: height.
 self  cachedNaturalHeightForWidth.
].

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
naturalExtent 
^ self  cachedNaturalExtent ifNil:[ 
 self  cachedNaturalExtent:( self  computeNaturalExtentOrIfUnmapped:[ 
^100 @25.
]).
 self  cachedNaturalExtent.
].

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
 self  map: self visual textA to:[ : text | 
 self  setControlText: text.
].
super  connectOwnArtifacts.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth: cachedNaturalHeightForWidth_val cachedNaturalHeightForWidth := cachedNaturalHeightForWidth_val! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
cachedNaturalHeightWidth ^cachedNaturalHeightWidth! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
setTabStops: tabStops 
|  paraformat |
 tabStops size >32 ifTrue:[ 
 self error:'too many tabstops'.
].
 paraformat := (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api PARAFORMAT newC.
 paraformat dwMask: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api PFM_TABSTOPS; 
 cTabCount: tabStops size.
 tabStops keysAndValuesDo:[ : index : each | 
 paraformat  rgxTabsAt: index put: each.
].
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_SETPARAFORMAT wParam:0 lParam: paraformat address.
 paraformat free.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
processCommand: code 
 code = (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EN_CHANGE ifTrue:[ 
^ self  processEN_CHANGE.
].
^0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_RichEditControlAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_RichEditControlAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
currentLineLength 
^ self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_LINELENGTH wParam: self  currentLineCharacterStart lParam:0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
selectedText 
^ self  withSelectionIndicesDo:[ : min : max | 
 self visual text  copyFrom: min to:( self visual text size min: max).
].

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
cachedNaturalHeightWidth: cachedNaturalHeightWidth_val cachedNaturalHeightWidth := cachedNaturalHeightWidth_val! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
cachedNaturalHeightForWidth ^cachedNaturalHeightForWidth! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
cachedNaturalExtent ^cachedNaturalExtent! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
computeNaturalExtentOrIfUnmapped: aBlock 
|  originalWidth  presumedWidth  answer |
 self flag:#'BOGUS'.
 self handle isNil ifTrue:[ 
^ aBlock value.
].
 originalWidth := self currentBounds width.
 self flag:#'BOGUS'.
 presumedWidth := self  measureWidth +18.
 answer := (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  windowsSession textMeasurer  measureText: self visual text heightForWidth: presumedWidth.
^ presumedWidth @ answer +10.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
processNotification: code data: lparam 
 code = (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EN_MSGFILTER ifTrue:[ 
^ self  processEN_MSGFILTER: lparam.
].
^0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
cachedNaturalExtent: cachedNaturalExtent_val cachedNaturalExtent := cachedNaturalExtent_val! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
hasUnacceptedEdits 
^true.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
setEventMaskBits: newBits 
|  eventMask |
 eventMask := self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_GETEVENTMASK wParam:0 lParam:0.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api EM_SETEVENTMASK wParam:0 lParam: eventMask | newBits.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
measureWidthUsing: hdc 
|  text  result |
 text := self visual text asString.
 self  selectProperFontInto: hdc.
 (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api POINT newC freeAfter:[ : sizeBuffer | 
 result := (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api GetTextExtentPoint32  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  UnsafeAlien forPointerTo: text) value: text size value: sizeBuffer address.
 result =0 ifTrue:[ 
^ (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api reportError:'GetTextExtentPoint32() failed'.
].
 result := sizeBuffer asPoint.
].
^ result x.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
setControlText: text 
 self  flushLayoutCaches.
 self  knownControlContents: text asString.
( (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  Alien newCString: self  knownControlContents) freeAfter:[ : buffer | 
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  api WM_SETTEXT wParam:0 lParam: buffer address.
].
 text isText ifTrue:[ 
 self  setTextAttributesFrom: text.
].
 self visual reportNaturalExtentChange.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) methodsFor: 'unclassified' !
setTextAttributesFrom: text 
 self  ignoreEN_CHANGEWhile:[ 
 (EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent at: 1)  TextDecorator  decorateControlWithHandle: self handle accordingTo: text.
].
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_RichEditControlAgent := eos ! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_RichEditControlAgent := mmd ! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_RichEditControlAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:26"!

Delta define: #BrazilMappingForWin32_TextViewAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_TextViewAgent EnclosingObjects_BrazilMappingForWin32_TextViewAgent') !


"September 28, 2010 -> 23:12:26"!

(Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent)
comment: 
'Responsible for materializing TextViews as native Windows RichEdit controls.'!


"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
dwStyle 
^super  dwStyle |( self visual suppressScrollbars  ifTrue:[ 
0.
] ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api WS_VSCROLL.
]).

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
processAcceptKeyThrough: msgfilter 
 self visual acceptKeyResponse isNil  ifTrue:[ 
 self  textMayHaveChanged.
] ifFalse:[ 
 self visual acceptKeyResponse reentrant value:[ 
nil.
].
^1.
].
^0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
textMayHaveChanged 
|  controlText |
 controlText := self getWindowTextIfNone:[ 
^ self.
].
( controlText size ~= self knownControlContents size or:[ 
 controlText ~= self knownControlContents.
]) ifTrue:[ 
 self knownControlContents: controlText.
 self visual acceptTextFromAgent: controlText.
].
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
scrollToEnd 
 (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api SCROLLINFO newC freeAfter:[ : scrolllinfo | 
 scrolllinfo fMask: (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api SIF_ALL.
 (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api GetScrollInfo  value: self handle value: (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api SB_VERT value: scrolllinfo address.
 (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api POINT newC freeAfter:[ : point | 
 point x:0; 
 y:( scrolllinfo nMax -  self visual bounds height +5).
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api EM_SETSCROLLPOS wParam:0 lParam: point address.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
selectLine 
|  start |
 start := self currentLineCharacterStart +1.
 self  selectFrom: start to: start + self currentLineLength.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
processEN_MSGFILTER: lparam 
|  msgfilter  charCode |
 msgfilter := (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api MSGFILTER atAddress: lparam address.
 charCode := msgfilter wParam.
 charCode =13 ifTrue:[ 
^ self  processEnterKeyThrough: msgfilter.
].
 charCode =27 ifTrue:[ 
^ self  processEscapeKeyThrough: msgfilter.
].
 charCode =19 ifTrue:[ 
^ self  processAcceptKeyThrough: msgfilter.
].
 msgfilter msg = (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api WM_CHAR ifTrue:[ 
 self  textMayHaveChanged.
 self  textExtentMayHaveChanged.
].
^0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
processEscapeKeyThrough: msgfilter 
 self visual escapeKeyResponse isNil  ifTrue:[ 
 msgfilter msg = (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api WM_CHAR ifTrue:[ 
 self  textMayHaveChanged.
].
] ifFalse:[ 
 msgfilter msg = (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api WM_KEYDOWN ifTrue:[ 
 self visual escapeKeyResponse reentrant value:[ 
nil.
].
].
^1.
].
^0.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_TextViewAgent_1_init: visual 
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_TextViewAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:26"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
processEnterKeyThrough: msgfilter 
 self visual enterKeyResponse isNil  ifTrue:[ 
 msgfilter msg = (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api WM_CHAR ifTrue:[ 
 self  textMayHaveChanged.
].
] ifFalse:[ 
 msgfilter msg = (EnclosingObjects_BrazilMappingForWin32_TextViewAgent at: 1)  api WM_KEYDOWN ifTrue:[ 
 self visual enterKeyResponse reentrant value:[ 
nil.
].
].
^1.
].
^0.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
textExtentMayHaveChanged 
 self visual reportNaturalExtentChange.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
selectionInterval 
|  range |
 range := self selectionRange.
^ range first to: range second.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_TextViewAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_TextViewAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_TextViewAgent := eos ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_TextViewAgent := mmd ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextViewAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:27"!

Delta define: #BrazilMappingForWin32_NullColoredAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_NullColoredAgent EnclosingObjects_BrazilMappingForWin32_NullColoredAgent') !


"September 28, 2010 -> 23:12:27"!

(Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent)
comment: 
'Maps container visuals that have a colored background.'!


"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
paintGradient: rectToPaint on: hdc translatedBy: parentOrigin 
 self  fillRectangle:( self visual bounds translateBy: parentOrigin) on: hdc withGradient: self visual color.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
needsPaintingRect: parentRelativeRect 
^ self  needsPainting and:[ 
 self visual bounds intersects: parentRelativeRect.
].

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
needsPainting 
^ self visual visible and:[ 
 self visual color notNil and:[ 
 self visual color asColor isTransparent not.
].
].

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual colorA to:[ : ignoredNewColor | 
 self invalidate.
].
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_NullColoredAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_NullColoredAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
isColor: color 
^ color asColor == color.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
( self  needsPaintingRect: parentRelativeUpdateRect) ifTrue:[ 
|  rectToPaint |
 rectToPaint := self visual bounds intersect: parentRelativeUpdateRect.
( self  isColor: self visual color)  ifTrue:[ 
 self   paintSolid: rectToPaint on: hdc translatedBy: parentOrigin.
] ifFalse:[ 
 self   paintGradient: rectToPaint on: hdc translatedBy: parentOrigin.
].
].
super   contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
paintSolid: rectToPaint on: hdc translatedBy: parentOrigin 
 self  fillRectangle:( rectToPaint translateBy: parentOrigin) on: hdc withSolidColor: self visual color.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_NullColoredAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_NullColoredAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_NullColoredAgent := eos ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_NullColoredAgent := mmd ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_NullColoredAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:27"!

Delta define: #BrazilMappingForWin32_BogusAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_BogusAgent EnclosingObjects_BrazilMappingForWin32_BogusAgent') !


"September 28, 2010 -> 23:12:27"!

(Delta mirrorFor: #BrazilMappingForWin32_BogusAgent)
comment: 
'An agent we use in cases when there is no real agent yet that we could use.'!


"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) methodsFor: 'unclassified' !
matchScrollbarRange 
 self flag:#'BOGUS'.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) methodsFor: 'unclassified' !
scrollbarHeight 
 self flag:#'BOGUS'.
^15.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) methodsFor: 'unclassified' !
naturalHeightForWidth: ignored 
^20.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) methodsFor: 'unclassified' !
naturalExtent 
^100 @20.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_BogusAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_BogusAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_BogusAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_BogusAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_BogusAgent := eos ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_BogusAgent := mmd ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_BogusAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:27"!

Delta define: #BrazilMappingForWin32_VerticalViewportAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_VerticalViewportAgent EnclosingObjects_BrazilMappingForWin32_VerticalViewportAgent') !


"September 28, 2010 -> 23:12:27"!

(Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent)
comment: 
'Maps Brazil VerticalViewports. The difference between this and the superclass is in how the extent of the content is computed: because VerticalViewports squeeze the contents, their agents should size their inner windows according to the natural height of the content.'!


"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_VerticalViewportAgent_1_init: aVisual 
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent) methodsFor: 'unclassified' !
setInnerWindowBounds 
|  availableWidth  requiredHeight  newBounds |
 availableWidth := self visual innerExtent x.
 requiredHeight := self visual naturalHeightForWidth: availableWidth.
 newBounds := self visual scrollPosition negated extent:( availableWidth @ requiredHeight).
 self innerAgent setWindowBounds: newBounds.
 newBounds bottom < self visual innerExtent y ifTrue:[ 
 self outerAgent invalidateRectangle:(0 @ newBounds bottom corner: self visual innerBounds corner).
].
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_VerticalViewportAgent_superInit_forVisual: aVisual 
super  forVisual: aVisual.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent) methodsFor: 'unclassified' !
forVisual: aVisual 
 self BrazilMappingForWin32_VerticalViewportAgent_superInit_forVisual: aVisual.
 self BrazilMappingForWin32_VerticalViewportAgent_1_init: aVisual.
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_VerticalViewportAgent := eos ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_VerticalViewportAgent := mmd ! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_VerticalViewportAgent) classSide methodsFor: 'unclassified' !
forVisual: aVisual 
^ self basicNew forVisual: aVisual.

! !

"September 28, 2010 -> 23:12:27"!

Delta define: #BrazilMappingForWin32_ImageAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_ImageAgent EnclosingObjects_BrazilMappingForWin32_ImageAgent') !


"September 28, 2010 -> 23:12:27"!

(Delta mirrorFor: #BrazilMappingForWin32_ImageAgent)
comment: 
'Handles the Icon visual.'!


"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
visualImage 
^ self visual image.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual imageA to:[ : newImage | 
 self invalidate.
].
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
paintUsing: graphics inside: windowRelativeBounds 
|  squeakImage  extent  bitmap  result |
 squeakImage := self  visualImage.
 squeakImage isNil ifTrue:[ 
^ self.
].
 extent := squeakImage extent.
 bitmap := (EnclosingObjects_BrazilMappingForWin32_ImageAgent at: 1)  windowsSession imageMapper  map: squeakImage forGraphics: graphics.
 result := graphics  drawImage: bitmap at: windowRelativeBounds center - ( extent //2).
 result =0 ifFalse:[ 
'DrawImage() failed'.
].
^ self.

! !

"September 28, 2010 -> 23:12:27"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
|  windowRelativeBounds |
( self visual visible and:[ 
 self visual bounds intersects: parentRelativeUpdateRect.
]) ifTrue:[ 
 windowRelativeBounds := self visual bounds translateBy: parentOrigin.
 self   paintOn: hdc inside: windowRelativeBounds.
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
super  destroyOwnArtifacts.
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ImageAgent_1_init: visual 
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_ImageAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_ImageAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
paintOn: hdc inside: windowRelativeBounds 
|  graphics |
 graphics := (EnclosingObjects_BrazilMappingForWin32_ImageAgent at: 1)  windowsSession gdiPlus Graphics fromHDC: hdc.
[ 
 self   paintUsing: graphics inside: windowRelativeBounds.
] ensure:[ 
 graphics release.
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ImageAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ImageAgent := eos ! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ImageAgent := mmd ! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_ImageAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:28"!

Delta define: #BrazilMappingForWin32_Agent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' areBoundsChanging api_ agentFactory_') classVariables: 'MixinMetadata_BrazilMappingForWin32_Agent EnclosingObjects_BrazilMappingForWin32_Agent') !


"September 28, 2010 -> 23:12:28"!

(Delta mirrorFor: #BrazilMappingForWin32_Agent)
comment: 
'This is the common superclass of all Agents used for mapping Brazil visuals to Windows artifacts.'!


"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
areBoundsHereOrInAncestorsChanging 
^ self  areBoundsChanging or:[ 
 self parent  ifNil:[ 
false.
] ifNotNil:[ : it | 
 it areBoundsHereOrInAncestorsChanging.
].
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
rectangleRelativeToHostWindow: rect 
^ self parent  ifNil:[ 
 rect.
] ifNotNil:[ : it | 
 it rectangleRelativeToHostWindow:( rect translateBy: self visual origin).
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
grabMouse 
 self  hostWindowAgent setMouseGrabTo: self.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
processMouseEntry 
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
api_ ^api_! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
mousePoint 
^ self visual desktop  ifNil:[ 
0 @0.
] ifNotNil:[ : it | 
 it mousePoint  translateFrom: it to: self visual.
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
agentFactory_: agentFactory__val agentFactory_ := agentFactory__val! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
releaseMouse 
 self  hostWindowAgent releaseMouseGrabFrom: self.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
areBoundsChanging ^areBoundsChanging! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
invalidate 
 self parent ifNotNil:[ : it | 
 it invalidateRectangle: self visual bounds.
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
areBoundsChanging: areBoundsChanging_val areBoundsChanging := areBoundsChanging_val! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
fillRectangle: rect on: hdc withGradient: gradient 
|  topColor  bottomColor  sizeofTrivertex  vertices  gradientRect |
 topColor := gradient startColor.
 bottomColor := gradient endColor.
 sizeofTrivertex := self  api TRIVERTEX dataSize.
 vertices := (EnclosingObjects_BrazilMappingForWin32_Agent at: 1)  Alien newC:( sizeofTrivertex *2).
( self  api TRIVERTEX atAddress: vertices address) x: rect left; 
 y: rect top; 
 red:( topColor red *65535) asInteger; 
 green:( topColor green *65535) asInteger; 
 blue:( topColor blue *65535) asInteger.
( self  api TRIVERTEX atAddress:( vertices address + sizeofTrivertex)) x: rect right; 
 y: rect bottom; 
 red:( bottomColor red *65535) asInteger; 
 green:( bottomColor green *65535) asInteger; 
 blue:( bottomColor blue *65535) asInteger.
 gradientRect := self  api GRADIENT_RECT newC.
 gradientRect UpperLeft:0; 
 LowerRight:1.
 self  api GradientFill  value: hdc value: vertices address value:2 value: gradientRect address value:1 value: self  api GRADIENT_FILL_RECT_V.
 gradientRect free.
 vertices free.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
collectControlsByHandleInto: aDictionary 
 self childrenDo:[ : each | 
 each collectControlsByHandleInto: aDictionary.
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
invalidateWindow 
 self  windowHandle ifNotNil:[ : hwnd | 
 self  api InvalidateRect  value: hwnd value:0 value:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
agentFactory_ ^agentFactory_! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
hostWindowAgent 
^ self parent ifNotNil:[ : it | 
 it hostWindowAgent.
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
noteBeginningOfBoundsChangeAndProvideEndContinuation 
 self  areBoundsChanging:true.
^[ 
 self  areBoundsChanging:false.
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
areBoundsInAncestorsChanging 
^ self parent  ifNil:[ 
false.
] ifNotNil:[ : it | 
 it areBoundsHereOrInAncestorsChanging.
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
BrazilMappingForWin32_Agent_1_init: visual 
 self api_:nil.
 self agentFactory_:nil.
 self areBoundsChanging:false.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
isLeftButtonDown 
^( self  api GetKeyState unsignedValue: self  api VK_LBUTTON) >1.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
ensureUpToDateAppearance 
 self  handle ifNotNil:[ : it | 
 self  api UpdateWindow value: it.
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
windowHandle 
^ self visual window ifNotNil:[ : it | 
 it agent ifNotNil:[ : wagent | 
 wagent handle.
].
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
api_: api__val api_ := api__val! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
processMouseDownLeft 
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
matchVisualsBounds 
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
windowsSession 
^ (EnclosingObjects_BrazilMappingForWin32_Agent at: 1)  windowsSession.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
invalidateRectangle: rectangle 
 self parent ifNotNil:[ : it | 
 it invalidateRectangle:( rectangle translateBy: self visual origin).
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
BrazilMappingForWin32_Agent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_Agent_superInit_forVisual: visual.
 self BrazilMappingForWin32_Agent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: parentRelativePoint 
^nil.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
agentFactory 
^ self  agentFactory_ ifNil:[ 
 self  agentFactory_: (EnclosingObjects_BrazilMappingForWin32_Agent at: 1)  agentFactory.
 self  agentFactory_.
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
handle 
 self subclassResponsibility.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
fillRectangle: rect on: hdc withSolidColor: color 
|  oldBrush  oldPen |
 oldBrush := self  api SelectObject  unsignedValue: hdc value:( self  api GetStockObject unsignedValue: self  api DC_BRUSH).
 oldPen := self  api SelectObject  unsignedValue: hdc value:( self  api GetStockObject unsignedValue:8).
 self  api SetDCBrushColor  unsignedValue: hdc value: color asColorref.
 self  api Rectangle  value: hdc value: rect left value: rect top value: rect right +1 value: rect bottom +1.
 self  api SelectObject  value: hdc value: oldBrush.
 self  api SelectObject  value: hdc value: oldPen.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
|  translatedUpdateRect  myOrigin |
 translatedUpdateRect := parentRelativeUpdateRect translateBy: self visual origin negated.
 myOrigin := parentOrigin + self visual origin.
 self childrenDo:[ : each | 
 each  contributeToWM_PAINTOn: hdc inside: translatedUpdateRect translatedBy: myOrigin.
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
processMouseExit 
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
api 
^ self  api_ ifNil:[ 
 self  api_: (EnclosingObjects_BrazilMappingForWin32_Agent at: 1)  api.
 self  api_.
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
processMouseMove 
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) methodsFor: 'unclassified' !
processMouseUpLeft 
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_Agent := eos ! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_Agent := mmd ! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_Agent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:28"!

Delta define: #BrazilMappingForWin32_MenuAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' itemsById menu_ menuHandle') classVariables: 'MixinMetadata_BrazilMappingForWin32_MenuAgent EnclosingObjects_BrazilMappingForWin32_MenuAgent') !


"September 28, 2010 -> 23:12:28"!

(Delta mirrorFor: #BrazilMappingForWin32_MenuAgent)
comment: 
'Maps a Menu to a Windows pop-up menu.'!


"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
openAt: topLeftCorner 
|  selectedItemId |
 self  buildMenuArtifactIfNeeded.
 self  menuHandle =0 ifTrue:[ 
^ self.
].
 selectedItemId := (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  api TrackPopupMenu unsignedValueWithArguments:(( self Array new:7)  at:1 put: self  menuHandle; 
  at:2 put: (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  api TPM_RETURNCMD | (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  api TPM_NONOTIFY; 
  at:3 put: topLeftCorner x; 
  at:4 put: topLeftCorner y; 
  at:5 put:0; 
  at:6 put: self  windowHandle; 
  at:7 put:0; 
 yourself).
 selectedItemId =0 ifFalse:[ 
 self   captureModifierKeyState: self  createCurrentModifierKeyState while:[ 
( self  itemsById at: selectedItemId) action reentrant value.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
menuHandle ^menuHandle! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
windowHandle 
^ self  menu ownerVisual window agent handle.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
menu: menu 
 self BrazilMappingForWin32_MenuAgent_superInit_menu: menu.
 self BrazilMappingForWin32_MenuAgent_1_init: menu.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
itemsById: itemsById_val itemsById := itemsById_val! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
menu 
^ self  menu_.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
menuHandle: menuHandle_val menuHandle := menuHandle_val! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
menu_: menu__val menu_ := menu__val! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
itemsById ^itemsById! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_MenuAgent_1_init: menu 
 self menu_: menu.
 self menuHandle:0.
 self itemsById:nil.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
menu_ ^menu_! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
captureModifierKeyState: eventInputState while: action 
^ self  menu ownerVisual desktop  ifNotNil:[ : it | 
 it agent  setModifierKeyState: eventInputState while: action.
] ifNil:[ 
 action value.
].

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
createCurrentModifierKeyState 
|  getKeyState |
 getKeyState := (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  api GetKeyState.
^ (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  ModifierKeyState new shiftPressed:(( getKeyState unsignedValue: (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  api VK_SHIFT) >1); 
 controlPressed:(( getKeyState unsignedValue: (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  api VK_CONTROL) >1); 
 altPressed:(( getKeyState unsignedValue: (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  api VK_MENU) >1).

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
respondToMenuChange 
 self menuHandle:0.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_MenuAgent_superInit_menu: menu 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:28"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) methodsFor: 'unclassified' !
buildMenuArtifactIfNeeded 
|  builder |
 self  menuHandle =0 ifTrue:[ 
 builder := (EnclosingObjects_BrazilMappingForWin32_MenuAgent at: 1)  MenuBuilder new.
 self menuHandle:( builder buildFrom: self  menu_).
 self  itemsById: builder itemsById.
].
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_MenuAgent := eos ! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_MenuAgent := mmd ! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuAgent) classSide methodsFor: 'unclassified' !
menu: menu 
^ self basicNew menu: menu.

! !

"September 28, 2010 -> 23:12:29"!

Delta define: #BrazilMappingForWin32_DesktopAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' modifierKeyStateForCurrentEventX desktop') classVariables: 'MixinMetadata_BrazilMappingForWin32_DesktopAgent EnclosingObjects_BrazilMappingForWin32_DesktopAgent') !


"September 28, 2010 -> 23:12:29"!

(Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent)
comment: 
'This agent maps the desktop of the host platform.'!


"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
areBoundsHereOrInAncestorsChanging 
^false.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
modifierKeyStateForCurrentEvent 
^ self  modifierKeyStateForCurrentEventX ifNil:[ 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  ModifierKeyState new.
].

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
updateDraggedImagePosition 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession moveDragCueTo: self  mousePoint.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
mousePoint 
|  api |
 api := (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  api.
^ api POINT newC freeAfter:[ : point | 
|  result |
 result := api GetCursorPos unsignedValue: point address.
 result =0  ifTrue:[ 
 api reportError:'GetCursorPos() failed'.
0 @0.
] ifFalse:[ 
 point asPoint.
].
].

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
noticeChangeInChildAgentStructure 
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
modifierKeyStateForCurrentEventX: modifierKeyStateForCurrentEventX_val modifierKeyStateForCurrentEventX := modifierKeyStateForCurrentEventX_val! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
modifierKeyStateForCurrentEventX ^modifierKeyStateForCurrentEventX! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_DesktopAgent_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
desktopBounds 
^ (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession systemMetrics desktopBounds.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_DesktopAgent_1_init 
 self desktop:nil.
 self modifierKeyStateForCurrentEventX:nil.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
ensureUpToDateAppearance 
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
connectArtifactsOfChild: ignored 
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
setDraggedImage: image 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession  placeDragCue: image at: self  mousePoint.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
scheduleUIInstallment: action 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  NsFFISessionManager soleInstance scheduleDeferredInstallment: action.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_DesktopAgent_superInit_new.
 self BrazilMappingForWin32_DesktopAgent_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
scheduleUIAction: action 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  NsFFISessionManager soleInstance scheduleDeferredAction: action.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
desktop ^desktop! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
mapping 
^ (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  agentFactory.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
desktop: desktop_val desktop := desktop_val! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
isNull 
^false.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
setModifierKeyState: state while: action 
|  oldValue |
 oldValue := self  modifierKeyStateForCurrentEventX.
 self  modifierKeyStateForCurrentEventX: state.
^ action ensure:[ 
 self  modifierKeyStateForCurrentEventX: oldValue.
].

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
isMorphic 
^false.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
usableDesktopBounds 
^ (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession systemMetrics workArea.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
isWindows 
^true.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
clearDraggedImage 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession removeDragCue.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
disableUserInputDuring: action 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession disableAll.
[ 
^ action value.
] ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession enableAll.
].
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
windowAtPoint: point 
|  pointStruct  hwnd |
 pointStruct := (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  api POINT new initializeFromPoint: point.
 hwnd := (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  api WindowFromPoint unsignedValue: pointStruct.
 hwnd =0 ifTrue:[ 
^nil.
].
 hwnd := (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  api GetAncestor  unsignedValue: hwnd value: (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  api GA_ROOT.
 hwnd =0 ifTrue:[ 
^nil.
].
^ self  desktop windows  detect:[ : some | 
 some agent handle = hwnd.
] ifNone:[ 
nil.
].

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) methodsFor: 'unclassified' !
systemIsIdle 
|  now |
 now := (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  Time millisecondClockValue.
^ now -  (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  windowsSession lastActivity >300000 and:[ 
 now -  (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  WorldState currentEvent timeStamp >300000.
].

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_DesktopAgent := eos ! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_DesktopAgent := mmd ! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) classSide methodsFor: 'unclassified' !
desktop: desktop 
^ (EnclosingObjects_BrazilMappingForWin32_DesktopAgent at: 1)  DesktopAgent new desktop: desktop.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_DesktopAgent) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:29"!

Delta define: #BrazilMappingForWin32_WindowAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' messageDispatchTable inputManager paintstruct lockVisualBoundsMatching') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowAgent EnclosingObjects_BrazilMappingForWin32_WindowAgent') !


"September 28, 2010 -> 23:12:29"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowAgent)
comment: 
'This agent takes care of mapping a Brazil Window visual to a Windows artifact. It is also a very important player in Windows mapping scheme in general, as it dispatches WM_COMMAND notifications to their appropriate controls, coordinates painting of soft widgets and delivers mouse events to them.'!


"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
populateDispatchTable 
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:#'processWM_CREATE:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_CREATE.
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:#'processWM_CLOSE:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_CLOSE.
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:#'processWM_DESTROY:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_DESTROY.
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:#'processWM_NCDESTROY:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_NCDESTROY.
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:#'processWM_ERASEBKGND:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_ERASEBKGND.
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:( (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  useDoubleBuffering  ifTrue:[ 
#'processWM_PAINTDoubleBuffered:'.
] ifFalse:[ 
#'processWM_PAINTUnbuffered:'.
]); 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_PAINT.
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:#'processWM_WINDOWPOSCHANGED:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_WINDOWPOSCHANGED.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_COMMAND:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_SYSCOMMAND.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_COMMAND:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_COMMAND.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_NOTIFY:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_NOTIFY.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_LBUTTONDOWN:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_LBUTTONDOWN.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_LBUTTONUP:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_LBUTTONUP.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_MOUSELEAVE:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_MOUSELEAVE.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_MOUSEMOVE:'; 
 yourself) asHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_MOUSEMOVE.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
dwStyle 
^ (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WS_OVERLAPPEDWINDOW | (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WS_CLIPCHILDREN.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
rectangleRelativeToHostWindow: rect 
^ rect.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
paintstruct ^paintstruct! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
setMouseGrabTo: agent 
 self  inputManager setMouseGrabTo: agent.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
modalOpenWhileFalse: doneValueProvider afterOpening: setupBlock 
 self  disableAllOther.
 setupBlock value.
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  NsFFISessionManager soleInstance drainEventsWhileFalse:[ 
 doneValueProvider value or:[ 
 self visual agent isNil.
].
].
 self visual close.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
setMenuBarMenu: newMenu 
|  menuHandle  builder |
 newMenu isNil  ifTrue:[ 
 menuHandle :=0.
 self  inputManager menuItemsById: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  Dictionary new.
] ifFalse:[ 
 builder := (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  MenuBuilder new.
 menuHandle := builder buildMenuBarFrom: newMenu.
 self  inputManager menuItemsById: builder itemsById.
].
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api SetMenu  unsignedValue: self handle value: menuHandle.
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api DrawMenuBar unsignedValue: self handle.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
initialWindowBounds 
^ self  innerToOuter: self visual bounds.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
noticeChangeInChildAgentStructure 
super  noticeChangeInChildAgentStructure.
 self  inputManager updateControlsByHandle.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
dwExStyle 
^0.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
register: receiverSelectorTuple asHandlerFor: messageCode 
 self  messageDispatchTable  at: messageCode put: receiverSelectorTuple.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
modalOpenWhileFalse: doneValueProvider 
^ self   modalOpenWhileFalse: doneValueProvider afterOpening:[ 
nil.
].

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
invalidate 
^ self invalidateWindow.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
isOpen 
 self ifHandleValid:[ 
^true.
].
^false.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
xprocessWM_PAINTUnbuffered: args 
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
unregisterHandlerFor: messageName while: action 
|  code  handler |
 code := (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api perform: messageName.
 handler := self  messageDispatchTable at: code.
 self  messageDispatchTable removeKey: code.
^ action ensure:[ 
 self  messageDispatchTable  at: code put: handler.
].

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
createOwnArtifacts 
 self  windowClass createWindowForAgent: self.
 self handle isNil ifTrue:[ 
 self error:'no WM_NCCREATE received for the new window'.
].
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_PAINTUnbuffered: args 
|  hdc |
 hdc := (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api BeginPaint  unsignedValue: self handle value: self  paintstruct address.
 self   paintBackgroundIn: self  paintstruct paintRectangle on: hdc.
 self visual content agent  contributeToWM_PAINTOn: hdc inside: self  paintstruct paintRectangle translatedBy:0 @0.
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api EndPaint  value: self handle value: self  paintstruct address.
^0.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
disableAllOther 
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  windowsSession disableAll.
 self handle ifNotNil:[ : hwnd | 
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api EnableWindow  boolValue: hwnd value:1.
].
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
xprocessWM_PAINTDoubleBuffered: args 
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
paintBackgroundIn: rectangle using: graphics 
|  gdip |
 gdip := (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  windowsSession gdiPlus.
 graphics clear:( gdip Color  a:255 r:236 g:233 b:216).
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
invokeDefWindowProc: args 
^ (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api DefWindowProc  unsignedValue: args hwnd value: args message value: args wParam value: args lParam.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowAgent_1_init: visual 
 self inputManager:( (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  WindowContentManager forAgent: self).
 self lockVisualBoundsMatching:false.
 self messageDispatchTable: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  Dictionary new.
 self paintstruct:nil.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
hostWindowAgent 
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
close 
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  windowsSession enableAll.
 self destroy.
 self visual mappedWindowClosed.
^ self.

! !

"September 28, 2010 -> 23:12:29"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
releaseMouseGrabFrom: agent 
 self  inputManager releaseMouseGrabFrom: agent.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
createArtifactsForSubtree 
super  createArtifactsForSubtree.
 self  inputManager updateControlsByHandle.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_DESTROY: args 
 self visual mappedWindowClosed.
^0.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual titleA to: self ~#'matchVisualsTitle:'.
 self  map: self visual visibleA to: self ~#'matchVisualsVisibility:'.
 self  map: self visual menuBarMenuA to: self ~#'setMenuBarMenu:'.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
messageDispatchTable: messageDispatchTable_val messageDispatchTable := messageDispatchTable_val! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
matchVisualsVisibility: shouldBeVisible 
 self handle ifNotNil:[ 
 shouldBeVisible  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api ShowWindow  value: self handle value: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api SW_SHOW.
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api UpdateWindow value: self handle.
] ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api ShowWindow  value: self handle value: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api SW_HIDE.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWindowsMessage: args 
|  message  handler |
 message := args message.
 handler := self  messageDispatchTable  at: message ifAbsent:[ 
^ self  invokeDefWindowProc: args.
].
^( handler at:1)  perform:( handler at:2) with: args.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
innerToOuter: rect 
^ self  withOriginAndCornerCorrectionsDo:[ : oc : cc | 
 rect origin + oc corner:( rect corner + cc).
].

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
matchVisualsBounds 
|  outerBounds |
( self  lockVisualBoundsMatching ==true or:[ 
 self handle isNil.
]) ifTrue:[ 
^ self.
].
 outerBounds := self  innerToOuter: self visual bounds.
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api MoveWindow  value: self handle value: outerBounds left asInteger value: outerBounds top asInteger value: outerBounds width asInteger value: outerBounds height asInteger value:1.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
title 
^ self visual title.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_WINDOWPOSCHANGED: args 
|  windowpos |
 windowpos := (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WINDOWPOS atAddress: args lParam.
 self  lockVisualBoundsMatching:true.
[ 
 self visual resizeFromUserTo:( self  outerToInner: windowpos asRectangle).
] ensure:[ 
 self  lockVisualBoundsMatching:false.
].
^0.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_ERASEBKGND: args 
^1.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
invalidateRectangle: rectangle 
|  expanded |
 rectangle hasPositiveExtent ifFalse:[ 
^ self.
].
 expanded := rectangle origin extent:( rectangle extent +1).
 self handle ifNotNil:[ : hwnd | 
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api RECT newC freeAfter:[ : rect | 
 rect initializeFromRectangle: expanded.
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api InvalidateRect  value: hwnd value: rect address value:0.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
paintstruct: paintstruct_val paintstruct := paintstruct_val! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_CLOSE: args 
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  NsFFISessionManager soleInstance scheduleDeferredAction:[ 
 self visual hasPermissionToClose ifTrue:[ 
 self  close.
].
].
^0.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_CREATE: args 
 self  paintstruct: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api PAINTSTRUCT newC.
^0.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_NCDESTROY: args 
 self  paintstruct ifNotNil:[ 
 self  paintstruct free.
 self  paintstruct:nil.
].
 self  windowClass unregisterWindowForAgent: self.
^0.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
withOriginAndCornerCorrectionsDo: action 
^ (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api RECT newC freeAfter:[ : rect | 
 rect left:100; 
 top:100; 
 right:500; 
 bottom:500.
 (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api AdjustWindowRect  value: rect address value: self  dwStyle value:( self visual menuBarMenu isNil  ifTrue:[ 
0.
] ifFalse:[ 
1.
]).
 action  value: rect left - 100 @( rect top - 100) value: rect right - 500 @( rect bottom - 500).
].

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_WindowAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_WindowAgent_1_init: visual.
 self  populateDispatchTable.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
outerToInner: rect 
^ self  withOriginAndCornerCorrectionsDo:[ : oc : cc | 
 rect origin -  oc corner:( rect corner -  cc).
].

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
inputManager: inputManager_val inputManager := inputManager_val! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
paintBackgroundIn: rectangle on: hdc 
 self  fillRectangle: rectangle on: hdc withSolidColor:( (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  BlackMarket Graphics Color gray:9/10).
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
unregisterHandlerFor: messageCode 
 self  messageDispatchTable removeKey: messageCode.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
messageDispatchTable ^messageDispatchTable! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
matchVisualsTitle: newTitle 
 self setWindowText: newTitle.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
lockVisualBoundsMatching: lockVisualBoundsMatching_val lockVisualBoundsMatching := lockVisualBoundsMatching_val! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
inputManager ^inputManager! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
lockVisualBoundsMatching ^lockVisualBoundsMatching! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
super  destroyOwnArtifacts.
 self handle ifNotNil:[ 
 self  unregisterHandlerFor: (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api WM_DESTROY.
( (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  api DestroyWindow signedValue: self handle) ~=0 ifTrue:[ 
 self handle:nil.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
parentHandle 
^0.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
processWM_PAINTDoubleBuffered: args 
^ self  processWM_PAINTUnbuffered: args.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) methodsFor: 'unclassified' !
windowClass 
^ (EnclosingObjects_BrazilMappingForWin32_WindowAgent at: 1)  windowsSession standardTopLevelWindowClass.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowAgent := eos ! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowAgent := mmd ! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:30"!

Delta define: #BrazilMappingForWin32_ActiveLabelAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveLabelAgent EnclosingObjects_BrazilMappingForWin32_ActiveLabelAgent') !


"September 28, 2010 -> 23:12:30"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent)
comment: 
'Represents Brazil ActiveLabels. Largely the same as LabelAgent, but expresses interest in mouse events and forwards them to the visual.'!


"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
processMouseEntry 
 self visual respondToMouseEntry.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveLabelAgent_1_init: v 
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
processMouseDownLeft 
 self visual respondToMouseDownLeft.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveLabelAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_ActiveLabelAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_ActiveLabelAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
processMouseUpLeft 
 self visual respondToMouseUpLeft.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
processMouseExit 
 self visual respondToMouseExit.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
processMouseMove 
 self visual respondToMouseMove.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: parentRelativePoint 
^( self visual bounds containsPoint: parentRelativePoint)  ifTrue:[ 
 self.
] ifFalse:[ 
nil.
].

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveLabelAgent := eos ! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveLabelAgent := mmd ! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveLabelAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:30"!

Delta define: #BrazilMappingForWin32_TextDecorator as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' charrange charformat controlHandle originalSelection') classVariables: 'MixinMetadata_BrazilMappingForWin32_TextDecorator EnclosingObjects_BrazilMappingForWin32_TextDecorator') !


"September 28, 2010 -> 23:12:30"!

(Delta mirrorFor: #BrazilMappingForWin32_TextDecorator)
comment: 
'Warning: not for general consumption. This is a private class with the API kept at a low level, intended to be used internally by a number of other classes of the mapping.

Sets character formats of a RichEdit control to match a given Text instance. Instances of TextDecorator are normally single-use. The control to work with is specified at the instance creation time. The instance is then sent the #applyEmphasesFrom: message. It is assumed that the content of the control already match the content of the text and only the emphasis needs to be applied.'!


"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
sendMessage: id wParam: wParam lParam: lParam 
^ (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api SendMessage  unsignedValue: self  controlHandle value: id value: wParam value: lParam.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
applyEmphases: emphases from: start to: stop 
|  result |
 self   selectFrom: start - 1 to: stop.
 self  translateToCharformat: emphases.
 result := self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api EM_SETCHARFORMAT wParam:1 lParam: self  charformat address.
 result =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api reportError:'EM_SETCHARFORMAT failed'.
].
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
controlHandle ^controlHandle! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
forControlWithHandle: handle 
 self BrazilMappingForWin32_TextDecorator_superInit_forControlWithHandle: handle.
 self BrazilMappingForWin32_TextDecorator_1_init: handle.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
originalSelection ^originalSelection! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
charformat: charformat_val charformat := charformat_val! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
charrange ^charrange! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
setRedraw: state 
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api WM_SETREDRAW wParam:( state  ifTrue:[ 
1.
] ifFalse:[ 
0.
]) lParam:0.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
controlHandle: controlHandle_val controlHandle := controlHandle_val! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
translateToCharformat: emphases 
 self  charformat dwMask:0; 
 dwEffects:0.
 emphases do:[ : each | 
( each isKindOf: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  BlackMarket Collections TextColor) ifTrue:[ 
 self  charformat setDwMaskBits: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_COLOR; 
 crTextColor: each color asColorref.
].
( each isKindOf: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  BlackMarket Collections TextEmphasis) ifTrue:[ 
 each emphasisCode =1 ifTrue:[ 
 self  charformat setDwMaskBits: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_BOLD; 
 setDwEffectsBits: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFE_BOLD.
].
 each emphasisCode =2 ifTrue:[ 
 self  charformat setDwMaskBits: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_ITALIC; 
 setDwEffectsBits: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFE_ITALIC.
].
 each emphasisCode =4 ifTrue:[ 
 self  charformat setDwMaskBits: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_UNDERLINE; 
 setDwEffectsBits: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFE_UNDERLINE.
].
].
].
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
applyEmphasesFrom: text 
 (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  Alien autoFreeAfter:[ : free | 
 self  charformat:( free value: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CHARFORMAT2 newC).
 self  charrange:( free value: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CHARRANGE newC).
 self  saveSelectionRange.
 self  setRedraw:false.
 self  clearExistingEmphases.
 text runs withStartStopAndValueDo:[ : start : stop : emphases | 
 self   applyEmphases: emphases from: start to: stop.
].
 self  restoreSelectionRange.
 self  setRedraw:true.
 self  invalidate.
].
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
saveSelectionRange 
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api EM_EXGETSEL wParam:0 lParam: self  charrange address.
 self  originalSelection:(( self Array new:2)  at:1 put: self  charrange cpMin; 
  at:2 put: self  charrange cpMax; 
 yourself).
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
selectFrom: startIndex to: stopIndex 
|  result |
 self  charrange cpMin: startIndex; 
 cpMax: stopIndex.
 result := self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api EM_EXSETSEL wParam:0 lParam: self  charrange address.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
BrazilMappingForWin32_TextDecorator_superInit_forControlWithHandle: handle 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
clearExistingEmphases 
 self  charformat dwMask:( (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_BOLD | (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_ITALIC | (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_UNDERLINE | (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFM_COLOR); 
 dwEffects: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api CFE_AUTOCOLOR.
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api EM_SETCHARFORMAT wParam:4 lParam: self  charformat address.
^ self.

! !

"September 28, 2010 -> 23:12:30"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
BrazilMappingForWin32_TextDecorator_1_init: handle 
 self controlHandle: handle.
 self originalSelection:nil.
 self charformat:nil.
 self charrange:nil.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
invalidate 
 (EnclosingObjects_BrazilMappingForWin32_TextDecorator at: 1)  api InvalidateRect  value: self  controlHandle value:0 value:0.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
restoreSelectionRange 
 self   selectFrom:( self  originalSelection at:1) to:( self  originalSelection at:2).
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
charformat ^charformat! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
originalSelection: originalSelection_val originalSelection := originalSelection_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) methodsFor: 'unclassified' !
charrange: charrange_val charrange := charrange_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_TextDecorator := eos ! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_TextDecorator := mmd ! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) classSide methodsFor: 'unclassified' !
decorateControlWithHandle: handle accordingTo: text 
( self forControlWithHandle: handle) applyEmphasesFrom: text.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_TextDecorator) classSide methodsFor: 'unclassified' !
forControlWithHandle: handle 
^ self basicNew forControlWithHandle: handle.

! !

"September 28, 2010 -> 23:12:31"!

Delta define: #BrazilMappingForWin32_WindowContentManager as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' mouseGrabbingAgent lastMouseEventConsumer trackingNow controlsByHandle owner menuItemsById') classVariables: 'MixinMetadata_BrazilMappingForWin32_WindowContentManager EnclosingObjects_BrazilMappingForWin32_WindowContentManager') !


"September 28, 2010 -> 23:12:31"!

(Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager)
comment: 
'Manages mouse event and control message delivery to descendents of the owner. Used by agents that map to Windows windows containing other windows in them, such as WindowAgent and ViewportAgent`InnerSubAgent.'!


"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
collectControlsByHandle 
|  result |
 result := self  newControlsByHandleMap.
 self  owner collectControlsByHandleInto: result.
^ result.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
lastMouseEventConsumer ^lastMouseEventConsumer! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
requestMouseTracking 
|  success |
 self  api TRACKMOUSEEVENT newC freeAfter:[ : trackStruct | 
 trackStruct dwFlags:2; 
 hwndTrack: self  handle.
 success := self  api TrackMouseEvent boolValue: trackStruct address.
].
 success ifFalse:[ 
 self  api reportError:'TrackMouseEvent() failed'.
].
 self  trackingNow:true.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
mouseGrabbingAgent: mouseGrabbingAgent_val mouseGrabbingAgent := mouseGrabbingAgent_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
processWM_LBUTTONUP: args 
 self   captureModifierKeyState:( self  createModifierKeyStateFrom: args) while:[ 
 self   dispatchMouseEvent: args using:[ : consumer | 
 consumer processMouseUpLeft.
].
].
^0.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
controlsByHandle: controlsByHandle_val controlsByHandle := controlsByHandle_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
processWM_COMMAND: args 
|  controlHandle  control |
 controlHandle := args lParam.
 control := self  controlsByHandle  at: controlHandle ifAbsent:[ 
^ self  maybeProcessMenuItemCommand: args.
].
^ control processCommand: args wParamHiWord.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
setMouseGrabTo: agent 
 self  mouseGrabbingAgent: agent.
 self  api SetCapture value: self  owner handle.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
trackingNow ^trackingNow! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
lastMouseEventConsumer: lastMouseEventConsumer_val lastMouseEventConsumer := lastMouseEventConsumer_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
mouseGrabbingAgent ^mouseGrabbingAgent! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
owner: owner_val owner := owner_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
dispatchMouseEvent: args using: action 
|  thisConsumer |
 thisConsumer := self  findConsumerForMouseEventAt: args lParamAsPoint.
 thisConsumer == self  lastMouseEventConsumer ifFalse:[ 
 self  lastMouseEventConsumer notNil ifTrue:[ 
 self  lastMouseEventConsumer processMouseExit.
].
 thisConsumer notNil ifTrue:[ 
 thisConsumer processMouseEntry.
].
 self  lastMouseEventConsumer: thisConsumer.
].
 thisConsumer ifNotNil:[ 
 action value: thisConsumer.
].
^0.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
controlsByHandle ^controlsByHandle! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
owner ^owner! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
releaseMouseGrabFrom: agent 
 self  mouseGrabbingAgent == agent ifTrue:[ 
 self  mouseGrabbingAgent:nil.
 self  api ReleaseCapture value.
].
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
processWM_NOTIFY: args 
|  header  controlHandle  control |
 header := self  api NMHDR atAddress: args lParam.
 controlHandle := header hwndFrom.
 control := self  controlsByHandle  at: controlHandle ifAbsent:[ 
^ self  owner invokeDefWindowProc: args.
].
^ control  processNotification: header code data: header.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowContentManager_1_init: agent 
 self owner: agent.
 self controlsByHandle: self  newControlsByHandleMap.
 self menuItemsById: (EnclosingObjects_BrazilMappingForWin32_WindowContentManager at: 1)  Dictionary new.
 self lastMouseEventConsumer:nil.
 self mouseGrabbingAgent:nil.
 self trackingNow:false.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
updateControlsByHandle 
 self  controlsByHandle: self  collectControlsByHandle.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
createModifierKeyStateFrom: args 
|  wParam |
 wParam := args wParam.
^ (EnclosingObjects_BrazilMappingForWin32_WindowContentManager at: 1)  ModifierKeyState new shiftPressed:( wParam anyMask: self  api MK_SHIFT); 
 controlPressed:( wParam anyMask: self  api MK_CONTROL).

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
BrazilMappingForWin32_WindowContentManager_superInit_forAgent: agent 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
captureModifierKeyState: eventInputState while: action 
^ self  owner visual desktop  ifNotNil:[ : it | 
 it agent  setModifierKeyState: eventInputState while: action.
] ifNil:[ 
 action value.
].

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
processWM_MOUSEMOVE: args 
 self   captureModifierKeyState:( self  createModifierKeyStateFrom: args) while:[ 
 self   dispatchMouseEvent: args using:[ : consumer | 
 consumer processMouseMove.
].
].
 self  trackingNow ifFalse:[ 
 self  requestMouseTracking.
].
^0.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
processWM_MOUSELEAVE: args 
 self   captureModifierKeyState:( self  createModifierKeyStateFrom: args) while:[ 
 self  lastMouseEventConsumer notNil ifTrue:[ 
 self  lastMouseEventConsumer processMouseExit.
 self  lastMouseEventConsumer:nil.
].
].
 self  trackingNow:false.
^0.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: point 
 self  mouseGrabbingAgent ifNotNil:[ : it | 
^ it.
].
 self  owner childrenDo:[ : each | 
( each findConsumerForMouseEventAt: point) ifNotNil:[ : consumer | 
^ consumer.
].
].
^nil.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
processWM_LBUTTONDOWN: args 
 self   captureModifierKeyState:( self  createModifierKeyStateFrom: args) while:[ 
 self   dispatchMouseEvent: args using:[ : consumer | 
 consumer processMouseDownLeft.
].
].
^0.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
menuItemsById: menuItemsById_val menuItemsById := menuItemsById_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
maybeProcessMenuItemCommand: args 
|  item |
 args wParam.
 item := self  menuItemsById  at: args wParam ifAbsent:[ 
^ self  owner invokeDefWindowProc: args.
].
 item action value.
^0.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
trackingNow: trackingNow_val trackingNow := trackingNow_val! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
handle 
^ self  owner handle.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
menuItemsById ^menuItemsById! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
newControlsByHandleMap 
^ (EnclosingObjects_BrazilMappingForWin32_WindowContentManager at: 1)  Dictionary new:20.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
forAgent: agent 
 self BrazilMappingForWin32_WindowContentManager_superInit_forAgent: agent.
 self BrazilMappingForWin32_WindowContentManager_1_init: agent.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) methodsFor: 'unclassified' !
api 
^ self  owner api.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_WindowContentManager := eos ! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_WindowContentManager := mmd ! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_WindowContentManager) classSide methodsFor: 'unclassified' !
forAgent: agent 
^ self basicNew forAgent: agent.

! !

"September 28, 2010 -> 23:12:31"!

Delta define: #BrazilMappingForWin32_ListBoxAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_ListBoxAgent EnclosingObjects_BrazilMappingForWin32_ListBoxAgent') !


"September 28, 2010 -> 23:12:31"!

(Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent)
comment: 
'This is the Win32 agent representing a ListBox Brazil widget.'!


"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
dwStyle 
^ (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_CHILD | (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_VISIBLE | (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LBS_HASSTRINGS | (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LBS_NOTIFY | (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LBS_NOINTEGRALHEIGHT | self  verticalScrollbarBits | self  horizontalScrollbarBits.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
naturalExtent 
 self flag:#'BOGUS'.
^100 @25.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
 self  map: self visual showHScrollbarA to: self ~#'matchHScrollbarStateFromVisual:'.
 self  map: self visual showVScrollbarA to: self ~#'matchVScrollbarStateFromVisual:'.
 self  map: self visual objectsHolder to: self ~#'matchListFromVisual:'.
 self  map: self visual selectionIndexHolder to: self ~#'matchSelectionIndexFromVisual:'.
super  connectOwnArtifacts.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
verticalScrollbarBits 
^ self visual showVScrollbar  ifNil:[ 
 (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_VSCROLL.
] ifNotNil:[ : doShowAlways | 
 doShowAlways  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_VSCROLL | (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LBS_DISABLENOSCROLL.
] ifFalse:[ 
0.
].
].

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
matchHScrollbarStateFromVisual: newState 
 self setWindowStyle:( self  horizontalScrollbarBits |( self getWindowStyle bitClear: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_HSCROLL)).
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
dwExStyle 
^ (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_EX_CLIENTEDGE.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
matchListFromVisual: objects 
|  strings  maxSize  buffer |
 strings := self visual objectsAsStrings.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LB_RESETCONTENT wParam:0 lParam:0.
 maxSize := strings  inject:0 into:[ : max : each | 
 max max: each size.
].
 strings size >100 ifTrue:[ 
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LB_INITSTORAGE wParam: strings size lParam: maxSize +1.
].
 buffer := (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  Alien rawNewC:( maxSize +1).
 strings do:[ : each | 
 buffer  replaceFrom:1 to: each size with: each startingAt:1; 
  unsignedByteAt: each size +1 put:0.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LB_ADDSTRING wParam:0 lParam: buffer address.
].
 buffer free.
 self  shouldTrackHorizontalScrollRange ifTrue:[ 
 self  setHorizontalScrollRangeFor: strings.
].
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
processCommand: code 
 (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LBN_SELCHANGE = code ifTrue:[ 
 self  respondToSelectionChange.
^0.
].
 (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LBN_DBLCLK = code ifTrue:[ 
 self  respondToDoubleClick.
^0.
].
^0.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ListBoxAgent_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_ListBoxAgent_superInit_forVisual: visual.
 self BrazilMappingForWin32_ListBoxAgent_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:31"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
matchSelectionIndexFromVisual: index1based 
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LB_SETCURSEL wParam: index1based - 1 lParam:0.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
controlClassName 
^'LISTBOX'.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
measureMaxWidthOfStringIn: strings 
^ self  getDCWhile:[ : hdc | 
|  maxWidth |
 maxWidth :=0.
 self selectControlFontInto: hdc.
 (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api POINT newC freeAfter:[ : sizeBuffer | 
 strings do:[ : each | 
|  result |
 result := (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api GetTextExtentPoint32  unsignedValue: hdc value:( (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  UnsafeAlien forPointerTo: each) value: each size value: sizeBuffer address.
 result =0 ifTrue:[ 
^ (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api reportError:'GetTextExtentPoint32() failed'.
].
 maxWidth := maxWidth max: sizeBuffer x.
].
].
 maxWidth.
] ifNotMapped:[ 
0.
].

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
respondToDoubleClick 
 self visual doubleClickAction ifNotNil:[ : it | 
 it clone value.
].
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
setHorizontalScrollRangeFor: strings 
|  maxWidth |
 maxWidth := self  measureMaxWidthOfStringIn: strings.
 self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LB_SETHORIZONTALEXTENT wParam: maxWidth lParam:0.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ListBoxAgent_1_init: visual 
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
horizontalScrollbarBits 
^ self visual showHScrollbar  ifNil:[ 
 (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_HSCROLL.
] ifNotNil:[ : doShowAlways | 
 doShowAlways  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_HSCROLL | (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LBS_DISABLENOSCROLL.
] ifFalse:[ 
0.
].
].

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
shouldTrackHorizontalScrollRange 
^ self visual showHScrollbar ~~false.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
matchVScrollbarStateFromVisual: newState 
 self setWindowStyle:( self  verticalScrollbarBits |( self getWindowStyle bitClear: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api WS_VSCROLL)).
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) methodsFor: 'unclassified' !
respondToSelectionChange 
|  index |
 index := self  sendMessage: (EnclosingObjects_BrazilMappingForWin32_ListBoxAgent at: 1)  api LB_GETCURSEL wParam:0 lParam:0.
 self visual selectionIndexHolder acceptValueFromMapping:( index +1).
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ListBoxAgent := eos ! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ListBoxAgent := mmd ! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ListBoxAgent) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:32"!

Delta define: #BrazilMappingForWin32_ViewportAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' scrollbarHeightCached innerAgent currentBounds BrazilMappingForWin32_ViewportAgent_InnerSubAgent_slot outerAgent scrollbarWidthCached BrazilMappingForWin32_ViewportAgent_OuterSubAgent_slot') classVariables: 'MixinMetadata_BrazilMappingForWin32_ViewportAgent EnclosingObjects_BrazilMappingForWin32_ViewportAgent') !


"September 28, 2010 -> 23:12:32"!

(Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent)
comment: 
'Maps Brazil Viewport visuals. A visual is mapped to two windows: the outer one that provides scrollbars and manages scrolling and the inner one holding the actual content of the viewport. This allows to easily scroll the content by simply moving the inner window.'!


"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
rectangleRelativeToHostWindow: rect 
^ rect.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
InnerSubAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ViewportAgent_InnerSubAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_ViewportAgent 
			nestedMixins at: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_ViewportAgent Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_ViewportAgent size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_ViewportAgent at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ViewportAgent_InnerSubAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ViewportAgent_InnerSubAgent_slot! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
visualsColorref 
^ self visual color asColorref.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
setMouseGrabTo: agent 
 self  innerAgent setMouseGrabTo: agent.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
currentBounds: currentBounds_val currentBounds := currentBounds_val! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
createOwnArtifacts 
 self  outerAgent createWindow.
 self  innerAgent createWindow.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
noticeChangeInChildAgentStructure 
super  noticeChangeInChildAgentStructure.
 self  innerAgent updateControlsByHandle.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
innerAgent: innerAgent_val innerAgent := innerAgent_val! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
contributeToInnerWM_PAINTOn: hdc inside: parentRelativeRect 
 self visual color isTransparent ifFalse:[ 
 self  fillRectangle: parentRelativeRect on: hdc withSolidColor: self visual color asColor.
].
 self childrenDo:[ : each | 
 each  contributeToWM_PAINTOn: hdc inside: parentRelativeRect translatedBy:0 @0.
].
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
currentBounds ^currentBounds! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
outerAgent ^outerAgent! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
invalidate 
 self  innerAgent invalidateWindow.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
OuterSubAgent
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_ViewportAgent_OuterSubAgent_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_ViewportAgent 
			nestedMixins at: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_ViewportAgent Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_ViewportAgent size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_ViewportAgent at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_ViewportAgent_OuterSubAgent_slot := myNested.
		].
	^BrazilMappingForWin32_ViewportAgent_OuterSubAgent_slot! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
invalidateWindow 
 self  innerAgent invalidateWindow.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
scrollbarHeightCached ^scrollbarHeightCached! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ViewportAgent_1_init: v 
 self innerAgent:( self  InnerSubAgent inside: self).
 self outerAgent:( self  OuterSubAgent inside: self).
 self currentBounds:nil.
 self scrollbarHeightCached:nil.
 self scrollbarWidthCached:nil.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
scrollbarWidth 
^ self  scrollbarWidthCached ifNil:[ 
 self  scrollbarWidthCached: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent at: 1)  windowsSession systemMetrics scrollbarWidth.
 self  scrollbarWidthCached.
].

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
hostWindowAgent 
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
noteBeginningOfBoundsChangeAndProvideEndContinuation 
 self areBoundsChanging:true.
^[ 
 self  setInnerWindowBounds.
 self areBoundsChanging:false.
].

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
releaseMouseGrabFrom: agent 
 self  innerAgent releaseMouseGrabFrom: agent.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
createArtifactsForSubtree 
super  createArtifactsForSubtree.
 self  innerAgent updateControlsByHandle.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual visibleA to: self ~#'matchVisualsVisibility:'.
 self  map: self visual scrollPositionH to:[ : newOrigin | 
 self  scrollTo: newOrigin.
].
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
scrollTo: newOrigin 
 self  innerAgent setWindowBounds:( newOrigin negated extent: self visual virtualExtent).
 self  matchScrollbarRange.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
scrollbarWidthCached: scrollbarWidthCached_val scrollbarWidthCached := scrollbarWidthCached_val! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
invokeDefWindowProc: args 
^ (EnclosingObjects_BrazilMappingForWin32_ViewportAgent at: 1)  api DefWindowProc  unsignedValue: args hwnd value: args message value: args wParam value: args lParam.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
matchVisualsVisibility: shouldBeVisible 
 shouldBeVisible  ifTrue:[ 
 self  outerAgent showWindow.
] ifFalse:[ 
 self  outerAgent hideWindow.
].
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
innerAgent ^innerAgent! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
noticeChangeInNaturalExtent 
 self  setInnerWindowBounds.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
matchVisualsBounds 
|  newBounds |
 newBounds := self parent rectangleRelativeToHostWindow: self visual bounds.
 newBounds = self  currentBounds ifTrue:[ 
^ self.
].
 self  currentBounds: newBounds.
 self  outerAgent setWindowBounds: self  currentBounds.
 self  setInnerWindowBounds.
 self  matchScrollbarRange.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
matchScrollbarRange 
 self  outerAgent matchScrollbarRange.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
scrollbarHeight 
^ self  scrollbarHeightCached ifNil:[ 
 self  scrollbarHeightCached: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent at: 1)  windowsSession systemMetrics scrollbarHeight.
 self  scrollbarHeightCached.
].

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
innerWindowBounds 
^ self  innerAgent windowArtifactBounds translateBy: self visual scrollPosition negated.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
invalidateRectangle: rectangle 
 self  innerAgent invalidateRectangle: rectangle.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
scrollbarWidthCached ^scrollbarWidthCached! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
forVisual: v 
 self BrazilMappingForWin32_ViewportAgent_superInit_forVisual: v.
 self BrazilMappingForWin32_ViewportAgent_1_init: v.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
scrollbarHeightCached: scrollbarHeightCached_val scrollbarHeightCached := scrollbarHeightCached_val! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
setInnerWindowBounds 
|  newBounds  corner |
 newBounds := self visual scrollPosition negated extent: self visual virtualExtent.
 self  innerAgent setWindowBounds: newBounds.
 corner := self visual innerExtent.
 newBounds corner x < corner x ifTrue:[ 
 self  outerAgent invalidateRectangle:( newBounds corner x @0 corner: corner).
].
 newBounds corner y < corner y ifTrue:[ 
 self  outerAgent invalidateRectangle:(0 @ newBounds corner y corner: corner).
].
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
handle 
^ self  innerAgent handle.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
outerAgent: outerAgent_val outerAgent := outerAgent_val! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
contributeToWM_PAINTOn: hdc inside: parentRelativeUpdateRect translatedBy: parentOrigin 
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
destroyOwnArtifacts 
super  destroyOwnArtifacts.
 self  innerAgent destroyWindow.
 self  outerAgent destroyWindow.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
initialOuterWindowBounds 
^ self parent rectangleRelativeToHostWindow: self visual bounds.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ViewportAgent_superInit_forVisual: v 
super  forVisual: v.
^ self.

! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ViewportAgent := eos ! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ViewportAgent := mmd ! !

"September 28, 2010 -> 23:12:32"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent) classSide methodsFor: 'unclassified' !
forVisual: v 
^ self basicNew forVisual: v.

! !

"September 28, 2010 -> 23:12:32"!

Delta define: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' messageDispatchTable lastMS handle owner inputManager apiInvalidateRect') classVariables: 'MixinMetadata_BrazilMappingForWin32_ViewportAgent_InnerSubAgent EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent') !


"September 28, 2010 -> 23:12:32"!

(Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent)
comment: 
'Manages the inner window of the viewport.'!


"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
populateDispatchTable 
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:#'processWM_ERASEBKGND:'; 
 yourself) asHandlerFor: self  owner api WM_ERASEBKGND.
 self   register:(( self Array new:2)  at:1 put: self; 
  at:2 put:( (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  useDoubleBuffering  ifTrue:[ 
#'processWM_PAINTDoubleBuffered:'.
] ifFalse:[ 
#'processWM_PAINTUnbuffered:'.
]); 
 yourself) asHandlerFor: self  owner api WM_PAINT.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_COMMAND:'; 
 yourself) asHandlerFor: self  owner api WM_COMMAND.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_NOTIFY:'; 
 yourself) asHandlerFor: self  owner api WM_NOTIFY.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_MOUSEMOVE:'; 
 yourself) asHandlerFor: self  owner api WM_MOUSEMOVE.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_MOUSELEAVE:'; 
 yourself) asHandlerFor: self  owner api WM_MOUSELEAVE.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_LBUTTONDOWN:'; 
 yourself) asHandlerFor: self  owner api WM_LBUTTONDOWN.
 self   register:(( self Array new:2)  at:1 put: self  inputManager; 
  at:2 put:#'processWM_LBUTTONUP:'; 
 yourself) asHandlerFor: self  owner api WM_LBUTTONUP.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
dwStyle 
^ self  owner api WS_CHILD | self  owner api WS_VISIBLE | self  owner api WS_CLIPCHILDREN | self  owner api WS_CLIPSIBLINGS.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
setWindowBounds: newBounds 
 self  handle ~=0 ifTrue:[ 
 self  owner api MoveWindow  value: self  handle value: newBounds left asInteger value: newBounds top asInteger value: newBounds width asInteger value: newBounds height asInteger value:1.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
setMouseGrabTo: agent 
 self  inputManager setMouseGrabTo: agent.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
initialWindowBounds 
^0 @0 extent: self  owner visual virtualExtent.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
dwExStyle 
^ (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  api WS_EX_TRANSPARENT.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
register: receiverSelectorTuple asHandlerFor: messageCode 
 self  messageDispatchTable  at: messageCode put: receiverSelectorTuple.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  handle:0.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
title 
^#''.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
inside: outerAgent 
 self BrazilMappingForWin32_ViewportAgent_InnerSubAgent_superInit_inside: outerAgent.
 self BrazilMappingForWin32_ViewportAgent_InnerSubAgent_1_init: outerAgent.
 self  populateDispatchTable.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
processWM_PAINTUnbuffered: args 
|  paintstruct  hdc |
 paintstruct := self  owner api PAINTSTRUCT newC.
 hdc := self  owner api BeginPaint  unsignedValue: self  handle value: paintstruct address.
 self  owner  contributeToInnerWM_PAINTOn: hdc inside: paintstruct paintRectangle.
 self  owner api EndPaint  value: self  handle value: paintstruct address.
 paintstruct free.
^0.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
windowArtifactBounds 
^ (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  api RECT newC freeAfter:[ : rect | 
|  ok |
 ok := (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  api GetClientRect  unsignedValue: self  handle value: rect address.
 ok =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  api reportError:'GetClientRect() failed'.
^0 @0 extent:(0 @0).
].
 rect asRectangle.
].

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ViewportAgent_InnerSubAgent_superInit_inside: outerAgent 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
owner: owner_val owner := owner_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
lastMS ^lastMS! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
owner ^owner! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
destroyWindow 
 self  handle ~=0 ifTrue:[ 
 self  owner api DestroyWindow value: self  handle.
 self  handle:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
releaseMouseGrabFrom: agent 
 self  inputManager releaseMouseGrabFrom: agent.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
invalidateWindow 
 self  handle =0 ifFalse:[ 
 self  apiInvalidateRect  value: self  handle value:0 value:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
handle: handle_val handle := handle_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
lastMS: lastMS_val lastMS := lastMS_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
createWindow 
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  windowsSession viewportContentCarrierWindowClass createWindowForAgent: self.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
processWindowsMessage: args 
|  message  handler |
 message := args message.
 handler := self  messageDispatchTable  at: message ifAbsent:[ 
^ (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 1)  invokeDefWindowProc: args.
].
^( handler at:1)  perform:( handler at:2) with: args.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
updateControlsByHandle 
 self  inputManager updateControlsByHandle.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
apiInvalidateRect: apiInvalidateRect_val apiInvalidateRect := apiInvalidateRect_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
processWM_ERASEBKGND: args 
^1.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
invalidateRectangle: rectangle 
|  expanded |
( self  handle ~=0 and:[ 
 rectangle hasPositiveExtent.
]) ifTrue:[ 
 expanded := rectangle origin extent:( rectangle extent +1).
 self  owner api RECT newC freeAfter:[ : rect | 
 rect initializeFromRectangle: expanded.
 self  apiInvalidateRect  value: self  handle value: rect address value:0.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
apiInvalidateRect ^apiInvalidateRect! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
messageDispatchTable: messageDispatchTable_val messageDispatchTable := messageDispatchTable_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ViewportAgent_InnerSubAgent_1_init: outerAgent 
 self owner: outerAgent.
 self handle:0.
 self inputManager:( (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  WindowContentManager forAgent: outerAgent).
 self messageDispatchTable: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  Dictionary new.
 self lastMS:0.
 self apiInvalidateRect: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent at: 2)  api InvalidateRect.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
handle ^handle! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
inputManager ^inputManager! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
parentHandle 
^ self  owner outerAgent handle ifNil:[ 
 self error:'no parent handle'.
].

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
processWM_PAINTDoubleBuffered: args 
^ self  processWM_PAINTUnbuffered: args.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
inputManager: inputManager_val inputManager := inputManager_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) methodsFor: 'unclassified' !
messageDispatchTable ^messageDispatchTable! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ViewportAgent_InnerSubAgent := eos ! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ViewportAgent_InnerSubAgent := mmd ! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_InnerSubAgent) classSide methodsFor: 'unclassified' !
inside: outerAgent 
^ self basicNew inside: outerAgent.

! !

"September 28, 2010 -> 23:12:33"!

Delta define: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' handle owner') classVariables: 'MixinMetadata_BrazilMappingForWin32_ViewportAgent_OuterSubAgent EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent') !


"September 28, 2010 -> 23:12:33"!

(Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent)
comment: 
'Manages the outer window of a viewport. The class of this window is registered with a null background brush, and it handles WM_ERASEBKGND to make the color set in the visual.'!


"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
dwStyle 
^ self  owner api WS_CHILD | self  owner api WS_CLIPCHILDREN | self  owner api WS_CLIPSIBLINGS |( self  owner visual allowsHorizontalScrolling  ifTrue:[ 
 self  owner api WS_HSCROLL.
] ifFalse:[ 
0.
]) |( self  owner visual allowsVerticalScrolling  ifTrue:[ 
 self  owner api WS_VSCROLL.
] ifFalse:[ 
0.
]).

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
handle: handle_val handle := handle_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
setWindowBounds: newBounds 
 self  handle ~=0 ifTrue:[ 
 self  owner api MoveWindow  value: self  handle value: newBounds left asInteger value: newBounds top asInteger value: newBounds width asInteger value: newBounds height asInteger value:1.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
hideWindow 
 self  handle ~=0 ifTrue:[ 
 self  owner api ShowWindow  value: self  handle value: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SW_HIDE.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
processWindowsMessage: args 
 args message = (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api WM_ERASEBKGND ifTrue:[ 
^ self  processWM_ERASEBKGND: args.
].
 args message = (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api WM_HSCROLL ifTrue:[ 
^ self  processWM_HSCROLL: args.
].
 args message = (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api WM_VSCROLL ifTrue:[ 
^ self  processWM_VSCROLL: args.
].
^ self  owner invokeDefWindowProc: args.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
initialWindowBounds 
^ self  owner initialOuterWindowBounds.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
dwExStyle 
^0.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
processWM_HSCROLL: args 
|  command  thumbPosition  success  target |
 command := args wParamLoWord.
 command >5 ifTrue:[ 
^0.
].
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SCROLLINFO newC freeAfter:[ : scrollinfo | 
 scrollinfo fMask:16.
 success := (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api GetScrollInfo  boolValue: self  handle value: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SB_HORZ value: scrollinfo address.
 thumbPosition := scrollinfo nTrackPos.
].
 target := self   transformScrollValue: self  owner visual scrollPosition x by: command thumbPosition: thumbPosition pageSize: self  owner visual innerExtent x maxValue: self  owner visual virtualExtent x.
 success ifTrue:[ 
 self  owner visual scrollPosition:( target @ self  owner visual scrollPosition y).
].
^0.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
processWM_ERASEBKGND: args 
|  hdc  hbrush |
 hdc := args wParam.
 hbrush := (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api CreateSolidBrush unsignedValue: self  owner visualsColorref.
 hbrush =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api reportError:'CreateSolidBrush() failed'.
^0.
].
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api RECT newC freeAfter:[ : rect | 
|  ok |
 ok := (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api GetClientRect  unsignedValue: args hwnd value: rect address.
 ok =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api reportError:'GetClientRect() failed'.
^0.
].
 self   paintUncoveredBackgroundOn: hdc with: hbrush inside: rect asRectangle.
].
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api DeleteObject value: hbrush.
^1.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
invalidateRectangle: rectangle 
|  expanded |
 self  handle =0 ifFalse:[ 
 expanded := rectangle origin extent:( rectangle extent +1).
 self  owner api RECT newC freeAfter:[ : rect | 
 rect initializeFromRectangle: expanded.
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api InvalidateRect  value: self  handle value: rect address value:0.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
paintUncoveredBackgroundOn: hdc with: hbrush inside: myBounds 
|  contentBounds |
 contentBounds := self  owner innerWindowBounds.
 contentBounds bottom < myBounds bottom ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api RECT newC freeAfter:[ : buffer | 
 buffer left: myBounds left; 
 top: contentBounds bottom; 
 right: myBounds right; 
 bottom: myBounds bottom.
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api FillRect  value: hdc value: buffer address value: hbrush.
].
].
 contentBounds right < myBounds right ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api RECT newC freeAfter:[ : buffer | 
 buffer left: contentBounds right; 
 top: myBounds top; 
 right: myBounds right; 
 bottom: myBounds bottom.
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api FillRect  value: hdc value: buffer address value: hbrush.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
showWindow 
 self  handle ~=0 ifTrue:[ 
 self  owner api ShowWindow  value: self  handle value: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SW_SHOW.
 self  owner api UpdateWindow value: self  handle.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  handle:0.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
createWindow 
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  windowsSession viewportWindowClass createWindowForAgent: self.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
transformScrollValue: position by: command thumbPosition: thumbPosition pageSize: pageSize maxValue: maxValue 
 command =0 ifTrue:[ 
^ position -  self  smallScrollStep max:0.
].
 command =1 ifTrue:[ 
^ position + self  smallScrollStep min:( maxValue -  pageSize).
].
 command =2 ifTrue:[ 
^ position -  pageSize max:0.
].
 command =3 ifTrue:[ 
^ position + pageSize min:( maxValue -  pageSize).
].
( command =4 or:[ 
 command =5.
]) ifTrue:[ 
^ thumbPosition.
].
^ position.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
title 
^#''.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ViewportAgent_OuterSubAgent_1_init: outerAgent 
 self owner: outerAgent.
 self handle:0.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
inside: outerAgent 
 self BrazilMappingForWin32_ViewportAgent_OuterSubAgent_superInit_inside: outerAgent.
 self BrazilMappingForWin32_ViewportAgent_OuterSubAgent_1_init: outerAgent.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
matchScrollbarRange 
|  desired  available  optimalPosition |
 desired := self  owner visual virtualExtent.
 available := self  owner visual innerExtent max:(0 @0).
 optimalPosition :=( self  owner visual scrollPosition min:( desired -  available)) max:(0 @0).
 self  owner visual scrollPosition = optimalPosition ifFalse:[ 
 self  owner visual scrollPosition: optimalPosition.
].
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SCROLLINFO newC freeAfter:[ : scrollinfo | 
 scrollinfo fMask: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SIF_ALL; 
 nMin:0.
 self  owner visual allowsHorizontalScrolling ifTrue:[ 
 scrollinfo nMax: desired x; 
 nPage: available x; 
 nPos: optimalPosition x.
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SetScrollInfo  value: self  handle value: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SB_HORZ value: scrollinfo address value:1.
].
 self  owner visual allowsVerticalScrolling ifTrue:[ 
 scrollinfo nMax: desired y; 
 nPage: available y; 
 nPos: optimalPosition y.
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SetScrollInfo  value: self  handle value: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SB_VERT value: scrollinfo address value:1.
].
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
handle ^handle! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
invalidateWindow 
 self  handle =0 ifFalse:[ 
 self  owner api InvalidateRect  value: self  handle value:0 value:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ViewportAgent_OuterSubAgent_superInit_inside: outerAgent 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
owner: owner_val owner := owner_val! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
parentHandle 
^ self  owner parent handle ifNil:[ 
 self error:'no parent handle'.
].

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
owner ^owner! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
destroyWindow 
 self  handle ~=0 ifTrue:[ 
 self  owner api DestroyWindow value: self  handle.
 self  handle:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
smallScrollStep 
^20.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) methodsFor: 'unclassified' !
processWM_VSCROLL: args 
|  command  thumbPosition  success  target |
 command := args wParamLoWord.
 command >5 ifTrue:[ 
^0.
].
 (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SCROLLINFO newC freeAfter:[ : scrollinfo | 
 scrollinfo fMask:16.
 success := (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api GetScrollInfo  boolValue: self  handle value: (EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent at: 2)  api SB_VERT value: scrollinfo address.
 thumbPosition := scrollinfo nTrackPos.
].
 target := self   transformScrollValue: self  owner visual scrollPosition y by: command thumbPosition: thumbPosition pageSize: self  owner visual innerExtent y maxValue: self  owner visual virtualExtent y.
 success ifTrue:[ 
 self  owner visual scrollPosition:( self  owner visual scrollPosition x @ target).
].
^0.

! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ViewportAgent_OuterSubAgent := eos ! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ViewportAgent_OuterSubAgent := mmd ! !

"September 28, 2010 -> 23:12:33"!

! (Delta mirrorFor: #BrazilMappingForWin32_ViewportAgent_OuterSubAgent) classSide methodsFor: 'unclassified' !
inside: outerAgent 
^ self basicNew inside: outerAgent.

! !

"September 28, 2010 -> 23:12:34"!

Delta define: #BrazilMappingForWin32_AgentFactory as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_AgentFactory EnclosingObjects_BrazilMappingForWin32_AgentFactory') !


"September 28, 2010 -> 23:12:34"!

(Delta mirrorFor: #BrazilMappingForWin32_AgentFactory)
comment: 
'The rest of Brazil refers to classes such as this one as mappings, however from here on we''ll consider a mapping to be the entire body of code that handles the representation of Brazil visuals as a particular set of native UI primitives. What was previously known as mappings will now be called agent factories of mappings.'!


"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForIcon: icon 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  ImageAgent forVisual: icon.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForVerticalVisualSequence: visual 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  VerticalVisualSequenceAgent forVisual: visual.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForActiveIcon: icon 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  ActiveImageAgent forVisual: icon.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForVerticalViewport: viewport 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  VerticalViewportAgent forVisual: viewport.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForCompositeVisual: visual 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  NullColoredAgent forVisual: visual.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForHyperlink: link 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  HyperlinkAgent forVisual: link.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForBlank: blank 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  NullAgent forVisual: blank.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForLineShape: shape 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  LineShapeAgent forVisual: shape.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForWrapper: wrapper 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  NullColoredAgent forVisual: wrapper.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForActiveLabel: label 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  ActiveLabelAgent forVisual: label.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForLabel: label 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  LabelAgent forVisual: label.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForWindow: window 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  WindowAgent forVisual: window.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
BrazilMappingForWin32_AgentFactory_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForRectangleShape: shape 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  RectangleShapeAgent forVisual: shape.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForPushButton: button 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  ButtonAgent forVisual: button.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForMenu: menu 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  MenuAgent menu: menu.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_AgentFactory_superInit_new.
 self BrazilMappingForWin32_AgentFactory_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForTextDisplay: visual 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  TextDisplayAgent forVisual: visual.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForEllipseShape: shape 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  EllipseShapeAgent forVisual: shape.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForSensitiveIcon: icon 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  SensitiveImageAgent forVisual: icon.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForDesktop: aDesktop 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  DesktopAgent desktop: aDesktop.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForTextView: textView 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  TextViewAgent forVisual: textView.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForViewport: viewport 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  ViewportAgent forVisual: viewport.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
BrazilMappingForWin32_AgentFactory_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForListBox: listBox 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  ListBoxAgent forVisual: listBox.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForVisualSequence: visual 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  NullColoredAgent forVisual: visual.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) methodsFor: 'unclassified' !
createAgentForPolygonShape: shape 
^ (EnclosingObjects_BrazilMappingForWin32_AgentFactory at: 1)  PolygonShapeAgent forVisual: shape.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_AgentFactory := eos ! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_AgentFactory := mmd ! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentFactory) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:34"!

Delta define: #BrazilMappingForWin32_ActiveImageAgent as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' state') classVariables: 'MixinMetadata_BrazilMappingForWin32_ActiveImageAgent EnclosingObjects_BrazilMappingForWin32_ActiveImageAgent') !


"September 28, 2010 -> 23:12:34"!

(Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent)
comment: 
'Maps ActiveIcon visuals.'!


"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
visualImage 
^ self  state image.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
connectOwnArtifacts 
super  connectOwnArtifacts.
 self  map: self visual disabledImageA to:[ : newImage | 
 self invalidate.
].
 self  map: self visual hoverImageA to:[ : newImage | 
 self invalidate.
].
 self  map: self visual downImageA to:[ : newImage | 
 self invalidate.
].
 self  map: self visual enabledA to:[ : newEnabledState | 
 self invalidate.
].
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
processMouseEntry 
 self  state respondToMouseEntry.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
state ^state! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgent_1_init: image 
 self state:( (EnclosingObjects_BrazilMappingForWin32_ActiveImageAgent at: 1)  activeImageAgentStates NormalState forAgent: self).
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
enterState: stateClass 
 self  state:( stateClass forAgent: self).
 self invalidate.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
BrazilMappingForWin32_ActiveImageAgent_superInit_forVisual: image 
super  forVisual: image.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
processMouseUpLeft 
 self  state respondToMouseUpLeft.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
processMouseExit 
 self  state respondToMouseExit.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
state: state_val state := state_val! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
processMouseDownLeft 
 self  state respondToMouseDownLeft.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
forVisual: image 
 self BrazilMappingForWin32_ActiveImageAgent_superInit_forVisual: image.
 self BrazilMappingForWin32_ActiveImageAgent_1_init: image.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) methodsFor: 'unclassified' !
findConsumerForMouseEventAt: parentRelativePoint 
^( self visual bounds containsPoint: parentRelativePoint)  ifTrue:[ 
 self.
] ifFalse:[ 
nil.
].

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_ActiveImageAgent := eos ! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_ActiveImageAgent := mmd ! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_ActiveImageAgent) classSide methodsFor: 'unclassified' !
forVisual: image 
^ self basicNew forVisual: image.

! !

"September 28, 2010 -> 23:12:34"!

Delta define: #BrazilMappingForWin32_HyperlinkAgentStateClasses as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_slot BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_slot BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_slot BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_slot') classVariables: 'MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses') !


"September 28, 2010 -> 23:12:34"!

(Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses)
comment: 
'This is a nested module containing the classes used internally by HyperlinkAgent,  to avoid creating unique class instances for each agent instance.'!


"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) methodsFor: 'unclassified' !
AgentState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_slot := myNested.
		].
	^BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_slot! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) methodsFor: 'unclassified' !
PressedState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses Mirror on: self  AgentState)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_slot := myNested.
		].
	^BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_slot! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) methodsFor: 'unclassified' !
NormalState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses Mirror on: self  AgentState)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_slot := myNested.
		].
	^BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_slot! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_superInit_new.
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) methodsFor: 'unclassified' !
HoverState
	| nestedClass enclosingObjectArray myNested depth |
	BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses 
			nestedMixins at: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState.
		myNested := (nestedClass mixin |>  (MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses Mirror on: self  AgentState)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_slot := myNested.
		].
	^BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_slot! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses := eos ! !

"September 28, 2010 -> 23:12:34"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses := mmd ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:35"!

Delta define: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState') !


"September 28, 2010 -> 23:12:35"!

(Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState)
comment: 
'Captures the behavior of the agent that in has when the mouse is not hovering over it.'!


"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) methodsFor: 'unclassified' !
color 
^ self agent visual color.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_superInit_forAgent: theAgent 
super  forAgent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState_1_init: theAgent 
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) methodsFor: 'unclassified' !
isNormal 
^true.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) methodsFor: 'unclassified' !
shouldShowUnderline 
^ self agent visual underlineNormal.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState := eos ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState := mmd ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_NormalState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:35"!

Delta define: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState') !


"September 28, 2010 -> 23:12:35"!

(Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState)
comment: 
'Captures the behavior of the agent that in has when the mouse is hovering over it.'!


"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_1_init: theAgent 
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) methodsFor: 'unclassified' !
shouldShowUnderline 
^ self agent visual underlineHover.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) methodsFor: 'unclassified' !
isHover 
^true.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) methodsFor: 'unclassified' !
color 
^ self agent visual hoverColor.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState_superInit_forAgent: theAgent 
super  forAgent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState := eos ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState := mmd ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_HoverState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:35"!

Delta define: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState') !


"September 28, 2010 -> 23:12:35"!

(Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState)
comment: 
'Captures the behavior of the agent that in has when the left mouse button is held down over it.'!


"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) methodsFor: 'unclassified' !
color 
^ self agent visual downColor.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_superInit_forAgent: theAgent 
super  forAgent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState_1_init: theAgent 
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) methodsFor: 'unclassified' !
isPressed 
^true.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) methodsFor: 'unclassified' !
respondToButtonRelease 
 self agent visual doAction.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) methodsFor: 'unclassified' !
shouldShowUnderline 
^ self agent visual underlineHover.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState := eos ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState := mmd ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_PressedState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:35"!

Delta define: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' agent') classVariables: 'MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState') !


"September 28, 2010 -> 23:12:35"!

(Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState)
comment: 
'The common superclass of all hyperlink agent states.'!


"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_superInit_forAgent: theAgent 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
agent: agent_val agent := agent_val! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_1_init: theAgent 
 self agent: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
forAgent: theAgent 
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_superInit_forAgent: theAgent.
 self BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState_1_init: theAgent.
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
isHover 
^false.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
isNormal 
^false.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
isPressed 
^false.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
respondToButtonRelease 
^ self.

! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) methodsFor: 'unclassified' !
agent ^agent! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState := eos ! !

"September 28, 2010 -> 23:12:35"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState := mmd ! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_HyperlinkAgentStateClasses_AgentState) classSide methodsFor: 'unclassified' !
forAgent: theAgent 
^ self basicNew forAgent: theAgent.

! !

"September 28, 2010 -> 23:12:36"!

Delta define: #BrazilMappingForWin32_AgentWithHandle as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' handle') classVariables: 'MixinMetadata_BrazilMappingForWin32_AgentWithHandle EnclosingObjects_BrazilMappingForWin32_AgentWithHandle') !


"September 28, 2010 -> 23:12:36"!

(Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle)
comment: 
'This is an abstract superclass of those agents that create an actual Windows window to represent their visuals. The ''handle'' slot holds the integer value of the handle, if it exists. The class also provides some facilities common to window management such as enabling and disabling the window, sending it messages, or changing its style.'!


"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
getDCWhile: action ifNotMapped: unmappedAction 
|  hdc |
 self  handle isNil ifTrue:[ 
^ unmappedAction value.
].
 hdc := (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api GetDC unsignedValue: self  handle.
 hdc =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api reportError:'GetDC() failed'.
].
^[ 
 action value: hdc.
] ensure:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api ReleaseDC  value: self  handle value: hdc.
].

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
sendMessage: msg wParam: wParam lParam: lParam 
^ self  ifHandleValid:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api SendMessage  unsignedValue: self  handle value: msg value: wParam value: lParam.
].

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
getWindowExStyle 
^ self  getWindowLong: (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api GWL_EXSTYLE.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
updateWindow 
 self  ifHandleValid:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api UpdateWindow value: self  handle.
].
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
BrazilMappingForWin32_AgentWithHandle_superInit_forVisual: visual 
super  forVisual: visual.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
setWindowText: newText 
( (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  Alien newCString: newText) freeAfter:[ : cString | 
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api WM_SETTEXT wParam:0 lParam: cString address.
].
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
ifHandleValid: block 
^ self  handle ifNotNil:[ 
 block value.
].

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
setWindowLong: index to: value 
 self  ifHandleValid:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api SetWindowLong  unsignedValue: self  handle value: index value: value.
].
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
setWindowStyle: value 
 self   setWindowLong: (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api GWL_STYLE to: value.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
BrazilMappingForWin32_AgentWithHandle_1_init: visual 
 self handle:nil.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
enableWindow: doEnable 
|  success |
 self  ifHandleValid:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api EnableWindow  boolValue: self  handle value:( doEnable  ifTrue:[ 
1.
] ifFalse:[ 
0.
]).
].
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
forVisual: visual 
 self BrazilMappingForWin32_AgentWithHandle_superInit_forVisual: visual.
 self BrazilMappingForWin32_AgentWithHandle_1_init: visual.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
setWindowExStyle: value 
 self   setWindowLong: (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api GWL_EXSTYLE to: value.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  handle:nil.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
handle ^handle! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
getWindowTextIfNone: noneBlock 
|  length |
 self  handle ifNil:[ 
^ noneBlock value.
].
 length := self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api WM_GETTEXTLENGTH wParam:0 lParam:0.
^( (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  Alien newC:( length +1)) freeAfter:[ : buffer | 
 self   sendMessage: (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api WM_GETTEXT wParam: length +1 lParam: buffer address.
 buffer strcpy withSqueakLineEndings.
].

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
getWindowLong: index 
 self  handle isNil ifTrue:[ 
 self error:'agent has no window handle'.
].
^ (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api GetWindowLong  unsignedValue: self  handle value: index.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
getWindowStyle 
^ self  getWindowLong: (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api GWL_STYLE.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
handle: handle_val handle := handle_val! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
showWindow: doShow 
 self  ifHandleValid:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api ShowWindow  value: self  handle value:( doShow  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api SW_SHOW.
] ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_AgentWithHandle at: 1)  api SW_HIDE.
]).
].
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) methodsFor: 'unclassified' !
getWindowText 
^ self  getWindowTextIfNone:[ 
 self String new.
].

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_AgentWithHandle := eos ! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_AgentWithHandle := mmd ! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_AgentWithHandle) classSide methodsFor: 'unclassified' !
forVisual: visual 
^ self basicNew forVisual: visual.

! !

"September 28, 2010 -> 23:12:36"!

Delta define: #BrazilMappingForWin32_MenuBuilder as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' nextAvailableId itemsById handleStack') classVariables: 'MixinMetadata_BrazilMappingForWin32_MenuBuilder EnclosingObjects_BrazilMappingForWin32_MenuBuilder') !


"September 28, 2010 -> 23:12:36"!

(Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder)
comment: 
'An instance of this class is used to build a Windows menu from a Brazil counterpart.'!


"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
isMenuBuilt 
^ self  handle ~=0.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
itemsById: itemsById_val itemsById := itemsById_val! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
flagsForMenuItem: item 
^ item enabled  ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api MF_ENABLED.
] ifFalse:[ 
 (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api MF_DISABLED | (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api MF_GRAYED.
].

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
buildMenuBarFrom: menu 
 self  pushNewMenuBarHandle.
 menu dispatchTo: self.
^ self  popMenuHandle.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
pushNewMenuHandle 
|  newHandle |
 newHandle := (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api CreatePopupMenu unsignedValue.
 newHandle =0 ifTrue:[ 
^ (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api reportError:'CreatePopupMenu() failed'.
].
 self  handleStack addLast: newHandle.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
buildFrom: menu 
 self  pushNewMenuHandle.
 menu dispatchTo: self.
^ self  popMenuHandle.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
BrazilMappingForWin32_MenuBuilder_1_init 
 self handleStack: (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  OrderedCollection new.
 self itemsById: (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  Dictionary new.
 self nextAvailableId:10000.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
nextAvailableId ^nextAvailableId! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
visitSeparatorItem: separator 
|  result |
 result := (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api AppendMenu  value: self  handle value: (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api MF_SEPARATOR value: self  nextAvailableId value:0.
 result =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api reportError:'AppendMenu() failed'.
].
 self  itemsById  at: self  nextAvailableId put: separator.
 self  nextAvailableId:( self  nextAvailableId +1).
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
new 
 self BrazilMappingForWin32_MenuBuilder_superInit_new.
 self BrazilMappingForWin32_MenuBuilder_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
handleStack: handleStack_val handleStack := handleStack_val! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
BrazilMappingForWin32_MenuBuilder_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
nextAvailableId: nextAvailableId_val nextAvailableId := nextAvailableId_val! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
handle 
^ self  handleStack isEmpty  ifTrue:[ 
0.
] ifFalse:[ 
 self  handleStack last.
].

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
pushNewMenuBarHandle 
|  newHandle |
 newHandle := (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api CreateMenu unsignedValue.
 newHandle =0 ifTrue:[ 
^ (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api reportError:'CreateMenu() failed'.
].
 self  handleStack addLast: newHandle.
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
popMenuHandle 
^ self  handleStack removeLast.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
handleStack ^handleStack! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
visitMenuItem: item 
 item visible ifTrue:[ 
|  result |
( (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  Alien newCString: item label) freeAfter:[ : label | 
 result := (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api AppendMenu  value: self  handle value:( self  flagsForMenuItem: item) value: self  nextAvailableId value: label address.
].
 result =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api reportError:'AppendMenu() failed'.
].
 self  itemsById  at: self  nextAvailableId put: item.
 self  nextAvailableId:( self  nextAvailableId +1).
].
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
itemsById ^itemsById! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) methodsFor: 'unclassified' !
visitSubmenuItem: item 
|  submenuHandle  result |
 self  pushNewMenuHandle.
 item submenu dispatchTo: self.
 submenuHandle := self  popMenuHandle.
( (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  Alien newCString: item label) freeAfter:[ : label | 
 result := (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api AppendMenu  value: self  handle value: (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api MF_POPUP value: submenuHandle value: label address.
].
 result =0 ifTrue:[ 
 (EnclosingObjects_BrazilMappingForWin32_MenuBuilder at: 1)  api reportError:'AppendMenu() failed'.
].
^ self.

! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_BrazilMappingForWin32_MenuBuilder := eos ! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_BrazilMappingForWin32_MenuBuilder := mmd ! !

"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #BrazilMappingForWin32_MenuBuilder) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:36"!

Delta define: #CAPI as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' CAPI_CFunction_slot CAPI_CMacro_slot libraries Callback CAPI_CLibrary_slot OrderedCollection Dictionary exportedFunctions Alien') classVariables: 'MixinMetadata_CAPI EnclosingObjects_CAPI') !


"September 28, 2010 -> 23:12:36"!

(Delta mirrorFor: #CAPI)
comment: 
'The generic C language API module. Defines classes for modeling C language artifacts and the facilities for accessing the artifacts.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:36"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
Callback: Callback_val Callback := Callback_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
Alien: Alien_val Alien := Alien_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
Dictionary: Dictionary_val Dictionary := Dictionary_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
platform: platform 
 self CAPI_superInit_platform: platform.
 self CAPI_1_init: platform.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
exportFunction: function as: name 
 self  exportedFunctions  at: name put: function.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
libraries ^libraries! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
CMacro
	| nestedClass enclosingObjectArray myNested depth |
	CAPI_CMacro_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_CAPI 
			nestedMixins at: #CAPI_CMacro.
		myNested := (nestedClass mixin |>  (MixinMetadata_CAPI Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_CAPI size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_CAPI at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		CAPI_CMacro_slot := myNested.
		].
	^CAPI_CMacro_slot! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
Callback ^Callback! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
Alien ^Alien! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
bits: selectors 
^ selectors  inject:0 into:[ : mask : each | 
 mask bitOr:( self perform: each).
].

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
libraries: libraries_val libraries := libraries_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
exportedFunctions ^exportedFunctions! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
CFunction
	| nestedClass enclosingObjectArray myNested depth |
	CAPI_CFunction_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_CAPI 
			nestedMixins at: #CAPI_CFunction.
		myNested := (nestedClass mixin |>  (MixinMetadata_CAPI Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_CAPI size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_CAPI at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		CAPI_CFunction_slot := myNested.
		].
	^CAPI_CFunction_slot! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
OrderedCollection: OrderedCollection_val OrderedCollection := OrderedCollection_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  libraries do:[ : each | 
 each resetForNewImageSession.
].
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
exportFunction: function 
 self   exportFunction: function as: function name.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
CAPI_superInit_platform: platform 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
addLibrary: library 
 self  libraries add: library.
 library exportFunctionsTo: self.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
Dictionary ^Dictionary! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
CAPI_1_init: platform 
 self Alien: platform NsFFI Alien.
 self Callback: platform NsFFI Callback.
 self Dictionary: platform Collections Dictionary.
 self OrderedCollection: platform Collections OrderedCollection.
 self libraries: self  OrderedCollection new.
 self exportedFunctions:( self  Dictionary new:100).
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
addLibraryNoImport: library 
 self  libraries add: library.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
OrderedCollection ^OrderedCollection! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
doesNotUnderstand: message 
(( self  exportedFunctions includesKey: message selector) and:[ 
 message arguments isEmpty.
]) ifTrue:[ 
^ self  exportedFunctions at: message selector.
].
^super  doesNotUnderstand: message.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
exportedFunctions: exportedFunctions_val exportedFunctions := exportedFunctions_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) methodsFor: 'unclassified' !
CLibrary
	| nestedClass enclosingObjectArray myNested depth |
	CAPI_CLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_CAPI 
			nestedMixins at: #CAPI_CLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_CAPI Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_CAPI size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_CAPI at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		CAPI_CLibrary_slot := myNested.
		].
	^CAPI_CLibrary_slot! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_CAPI := eos ! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_CAPI := mmd ! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI) classSide methodsFor: 'unclassified' !
platform: platform 
^ self basicNew platform: platform.

! !

"September 28, 2010 -> 23:12:37"!

Delta define: #CAPI_CLibrary as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' dllName alien functions') classVariables: 'MixinMetadata_CAPI_CLibrary EnclosingObjects_CAPI_CLibrary') !


"September 28, 2010 -> 23:12:37"!

(Delta mirrorFor: #CAPI_CLibrary)
comment: 
'Represents an external dynamically linked library.'!


"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
dllName: dllName_val dllName := dllName_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
unlink 
 self  alien notNil ifTrue:[ 
 self  alien free.
 self  alien:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
alien: alien_val alien := alien_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
functionNamed: functionName argc: argc 
^ self  functions  at: functionName ifAbsentPut:[ 
 self  functionClass  library: self name: functionName argc: argc.
].

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
functions: functions_val functions := functions_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
functions ^functions! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
exportFunctionsTo: capi 
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
alien ^alien! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  alien:nil.
 self  functions do:[ : each | 
 each resetForNewImageSession.
].
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
functionClass 
^ (EnclosingObjects_CAPI_CLibrary at: 1)  CFunction.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
CAPI_CLibrary_superInit_name: theName 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
isLinked 
^ self  alien notNil.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
ensureLinkage 
 self  alien ifNil:[ 
 self  alien: self  createAlien.
].
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
name: theName 
 self CAPI_CLibrary_superInit_name: theName.
 self CAPI_CLibrary_1_init: theName.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
dllName ^dllName! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
linkFunction: symbol 
 self  ensureLinkage.
^( (EnclosingObjects_CAPI_CLibrary at: 1)  Alien new:4)  unsignedLongAt:1 put:( self  alien primFindSymbol: symbol); 
 yourself.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
createAlien 
^( (EnclosingObjects_CAPI_CLibrary at: 1)  Alien new:4)  unsignedLongAt:1 put:( (EnclosingObjects_CAPI_CLibrary at: 1)  Alien primLoadLibrary: self  dllName); 
 yourself.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
CAPI_CLibrary_1_init: theName 
 self dllName: theName.
 self functions: (EnclosingObjects_CAPI_CLibrary at: 1)  Dictionary new.
 self alien:nil.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) methodsFor: 'unclassified' !
api 
^ (EnclosingObjects_CAPI_CLibrary at: 1) .

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_CAPI_CLibrary := eos ! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_CAPI_CLibrary := mmd ! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CLibrary) classSide methodsFor: 'unclassified' !
name: theName 
^ self basicNew name: theName.

! !

"September 28, 2010 -> 23:12:37"!

Delta define: #CAPI_CMacro as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' expansion name') classVariables: 'MixinMetadata_CAPI_CMacro EnclosingObjects_CAPI_CMacro') !


"September 28, 2010 -> 23:12:37"!

(Delta mirrorFor: #CAPI_CMacro)
comment: 
'Represents a C macro. For now, we expect that expansion is a single Integer value.'!


"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
name: theName expansion: tokens 
 self  CAPI_CMacro_superInit_name: theName expansion: tokens.
 self  CAPI_CMacro_1_init_name: theName expansion: tokens.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
CAPI_CMacro_superInit_name: theName expansion: tokens 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
name: name_val name := name_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
CAPI_CMacro_1_init_name: theName expansion: tokens 
 self name: theName.
 self expansion: tokens.
^ self.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
expansion: expansion_val expansion := expansion_val! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
expansion ^expansion! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
value 
|  head |
 head := self  expansion first.
 head isNumber ifFalse:[ 
 self error:'expansion is not a number'.
].
^ head.

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
api 
^ (EnclosingObjects_CAPI_CMacro at: 1) .

! !

"September 28, 2010 -> 23:12:37"!

! (Delta mirrorFor: #CAPI_CMacro) methodsFor: 'unclassified' !
name ^name! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CMacro) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_CAPI_CMacro := eos ! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CMacro) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_CAPI_CMacro := mmd ! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CMacro) classSide methodsFor: 'unclassified' !
name: theName expansion: tokens 
^ self basicNew  name: theName expansion: tokens.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CMacro) classSide methodsFor: 'unclassified' !
name: name value: value 
^ self  name: name expansion:(( self Array new:1)  at:1 put: value; 
 yourself).

! !

"September 28, 2010 -> 23:12:38"!

Delta define: #CAPI_CFunction as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' alien library argc name') classVariables: 'MixinMetadata_CAPI_CFunction EnclosingObjects_CAPI_CFunction') !


"September 28, 2010 -> 23:12:38"!

(Delta mirrorFor: #CAPI_CFunction)
comment: 
'Represents a C function.'!


"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 
^( self   value: arg1 value: arg2) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 
|  result |
 self  argc =9 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:9.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5 with: arg6 with: arg7 with: arg8 with: arg9.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
argc: argc_val argc := argc_val! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 
|  result |
 self  argc =6 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:6.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5 with: arg6.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 
^( self   value: arg1 value: arg2 value: arg3) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 
^( self   value: arg1 value: arg2 value: arg3 value: arg4) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 
|  result |
 self  argc =10 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:10.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5 with: arg6 with: arg7 with: arg8 with: arg9 with: arg10.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 
^( self   value: arg1 value: arg2 value: arg3) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value 
|  result |
 self  argc =0 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:0.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien primFFICallResult: result.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
alien ^alien! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValueWithArguments: args 
^( self  valueWithArguments: args) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 
|  result |
 self  argc =7 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:7.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5 with: arg6 with: arg7.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  alien:nil.
^ self.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
argc ^argc! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
reportIncorrectNumberOfArguments: argumentsGiven 
 self error:( self  name ,': incorrect number of arguments (' , argumentsGiven printString ,' instead of ' , self  argc printString ,')').
^ self.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
name ^name! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
isLinked 
^ self alen notNil.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg 
^( self  value: arg) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
ensureLinkage 
 self  alien ifNil:[ 
 self  alien:( self  library linkFunction: self  name).
].
^ self.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 
|  result |
 self  argc =5 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:5.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
library ^library! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg 
|  result |
 self  argc =1 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:1.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 
|  result |
 self  argc =8 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:8.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5 with: arg6 with: arg7 with: arg8.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg 
^( self  value: arg) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 
|  result |
 self  argc =2 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:2.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 
|  result |
 self  argc =3 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:3.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
CAPI_CFunction_1_init_library: theLibrary name: theName argc: numArgs 
 self library: theLibrary.
 self name: theName.
 self argc: numArgs.
 self alien:nil.
^ self.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
name: name_val name := name_val! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
alien: alien_val alien := alien_val! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue 
^ self  value asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 
|  result |
 self  argc =4 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:4.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 
^( self   value: arg1 value: arg2 value: arg3 value: arg4) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
library: theLibrary name: theName argc: numArgs 
 self  CAPI_CFunction_superInit_library: theLibrary name: theName argc: numArgs.
 self  CAPI_CFunction_1_init_library: theLibrary name: theName argc: numArgs.
^ self.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValueWithArguments: args 
^( self  valueWithArguments: args) asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 
^( self   value: arg1 value: arg2) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
CAPI_CFunction_superInit_library: theLibrary name: theName argc: numArgs 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
valueWithArguments: args 
|  result |
 self  argc = args size ifFalse:[ 
^ self  reportIncorrectNumberOfArguments: args size.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result withArguments: args.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
library: library_val library := library_val! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 
^( self   value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11) asUnsignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
signedValue 
^ self  value asSignedLong.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 
|  result |
 self  argc =11 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:11.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5 with: arg6 with: arg7 with: arg8 with: arg9 with: arg10 with: arg11.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
api 
^ (EnclosingObjects_CAPI_CFunction at: 1) .

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) methodsFor: 'unclassified' !
value: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12 
|  result |
 self  argc =12 ifFalse:[ 
^ self  reportIncorrectNumberOfArguments:12.
].
 self  ensureLinkage.
 result := (EnclosingObjects_CAPI_CFunction at: 1)  Alien new:4.
 self  alien  primFFICallResult: result with: arg1 with: arg2 with: arg3 with: arg4 with: arg5 with: arg6 with: arg7 with: arg8 with: arg9 with: arg10 with: arg11 with: arg12.
^ result.

! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_CAPI_CFunction := eos ! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_CAPI_CFunction := mmd ! !

"September 28, 2010 -> 23:12:38"!

! (Delta mirrorFor: #CAPI_CFunction) classSide methodsFor: 'unclassified' !
library: theLibrary name: theName argc: numArgs 
^ self basicNew  library: theLibrary name: theName argc: numArgs.

! !

"September 28, 2010 -> 23:12:38"!

Delta define: #EnumThreadWndProc as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_EnumThreadWndProc EnclosingObjects_EnumThreadWndProc') !


"September 28, 2010 -> 23:12:39"!

(Delta mirrorFor: #EnumThreadWndProc)
comment: 
'BOOL CALLBACK EnumThreadWndProc(      
    HWND hwnd,
    LPARAM lParam
);'!


"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) methodsFor: 'unclassified' !
EnumThreadWndProc_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) methodsFor: 'unclassified' !
EnumThreadWndProc_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) methodsFor: 'unclassified' !
new 
 self EnumThreadWndProc_superInit_new.
 self EnumThreadWndProc_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) methodsFor: 'unclassified' !
lParam 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) methodsFor: 'unclassified' !
hwnd 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_EnumThreadWndProc := eos ! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_EnumThreadWndProc := mmd ! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #EnumThreadWndProc) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:39"!

Delta define: #Win32API as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Comdlg32DLL Win32API_UserLibrary_slot Win32API_Process_slot UserDLL Win32API_GDIplus_slot CrLfFileStream MSG REQRESIZE Win32API_File_slot WINDOWPOS WNDCLASS PROCESS_INFORMATION SCROLLINFO POINT GDIplusFlatDLL PAINTSTRUCT Win32API_KernelLibrary_slot RECT GiveUp GDIDLL Win32API_GDIplusLibrary_slot Win32API_Pipe_slot Win32API_Win32Function_slot Win32API_WinLibrary_slot FIND_DATA Win32API_MsimgLibrary_slot MSGFILTER KernelDLL WCharAlien Win32API_Comdlg32Library_slot WindowProc Delay CHARFORMAT2 SECURITY_ATTRIBUTES CHARFORMAT TRIVERTEX Win32API_GDILibrary_slot MsimgDLL OPENFILENAME GRADIENT_RECT TRACKMOUSEEVENT STARTUPINFO PARAFORMAT CHARRANGE FileDirectory NMHDR Win32API_CommonDataTypes_slot') classVariables: 'MixinMetadata_Win32API EnclosingObjects_Win32API') !


"September 28, 2010 -> 23:12:39"!

(Delta mirrorFor: #Win32API)
comment: 
'This module provides access to select functions of Windows API from the following libraries: Kernel, GDI, User, Msimg32 and GDI+.

All of those functions are defined by nested subclasses of WinLibrary. For example, the functions from the User DLL are defined by the UserLibrary class. The module holds an instance of UserLibrary in its UserDLL slot. The same pattern is used for all the other libraries.

Most functions defined by the nested libraries are re-exported at the module level, so that it is possible to retrieve them by sending messages to the module. For example, instead of sending #GetLastError to KernelDLL it is possible to send the same message directly to Win32API instance. An exception to this rule is GDIplusFlatDLL. Its functions are not re-exported. Intead, the GDIplus inner module provides a class-based Newspeak wrapper interface, similar to that of the official C++ based GDI+ API.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_INITSTORAGE 
^424.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PM_REMOVE 
^1.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_EX_CLIENTEDGE 
^512.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MSG: MSG_val MSG := MSG_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FileDirectory: FileDirectory_val FileDirectory := FileDirectory_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_GETCURSEL 
^392.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GENERIC_WRITE 
^1073741824.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WNDCLASS ^WNDCLASS! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_SETSEL 
^389.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBS_EXTENDEDSEL 
^2048.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_COMMAND 
^273.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_SETFONT 
^48.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
TPM_RETURNCMD 
^256.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_HOR_POSITIVE 
^4.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Delay: Delay_val Delay := Delay_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GA_PARENT 
^1.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Process
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Process_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Process.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Process_slot := myNested.
		].
	^Win32API_Process_slot! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
DC_PEN 
^19.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_MOUSEWHEEL 
^522.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_EX_STATICEDGE 
^131072.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_SLIDE 
^262144.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CHARFORMAT2 ^CHARFORMAT2! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SWP_NOMOVE 
^2.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
INVALID_HANDLE_VALUE 
^16 rffffffff.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SB_HORZ 
^0.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GDIplusFlatDLL: GDIplusFlatDLL_val GDIplusFlatDLL := GDIplusFlatDLL_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_GETFONT 
^49.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WCharAlien: WCharAlien_val WCharAlien := WCharAlien_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_CMONITORS 
^80.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
TRACKMOUSEEVENT ^TRACKMOUSEEVENT! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFE_BOLD 
^1.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_RBUTTONDOWN 
^516.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CHARRANGE ^CHARRANGE! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FORMAT_MESSAGE_IGNORE_INSERTS 
^512.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_SETHORIZONTALEXTENT 
^404.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
DC_BRUSH 
^18.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_HIDE 
^65536.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ANSI_VAR_FONT 
^12.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_EXGETSEL 
^ self  WM_USER +52.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GDIDLL: GDIDLL_val GDIDLL := GDIDLL_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GA_ROOT 
^2.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
platform: platform 
 self Win32API_superInit_platform: platform.
 self Win32API_1_init: platform.
 self addLibrary: self  KernelDLL.
 self addLibrary: self  GDIDLL.
 self addLibrary: self  UserDLL.
 self addLibrary: self  MsimgDLL.
 self addLibraryNoImport: self  GDIplusFlatDLL.
 self addLibrary: self  Comdlg32DLL.
^ self.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SYSTEM_FONT 
^13.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_SETTEXT 
^12.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EN_CHANGE 
^768.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ENM_CHANGE 
^1.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_BLEND 
^524288.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PFM_TABSTOPS 
^16.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_CHILD 
^1073741824.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_SYSKEYDOWN 
^260.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GRADIENT_RECT ^GRADIENT_RECT! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_ACTIVATE 
^131072.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Comdlg32Library
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Comdlg32Library_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Comdlg32Library.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Comdlg32Library_slot := myNested.
		].
	^Win32API_Comdlg32Library_slot! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_EX_NOACTIVATE 
^134217728.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_MOUSEMOVE 
^512.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_MOUSELEAVE 
^675.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
POINT ^POINT! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
STARTUPINFO: STARTUPINFO_val STARTUPINFO := STARTUPINFO_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ANSI_FIXED_FONT 
^11.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_GETCOUNT 
^395.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SB_CTL 
^2.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_RESETCONTENT 
^388.

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
createPipeForWriting 
^ self  Alien autoFreeAfter:[ : autofree | 
|  readPipe  writePipe |
 readPipe := autofree value:( self  Alien newC:4 s).
 writePipe := autofree value:( self  Alien newC:4).
 self   createPipeForWriting: writePipe withChildPipe: readPipe.
 self  Pipe new myEnd: writePipe asUnsignedLong; 
 otherEnd: readPipe asUnsignedLong.
].

! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PAINTSTRUCT: PAINTSTRUCT_val PAINTSTRUCT := PAINTSTRUCT_val! !

"September 28, 2010 -> 23:12:39"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_CYHSCROLL 
^3.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Alien 
^super  Alien.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBS_MULTIPLESEL 
^8.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
OPENFILENAME: OPENFILENAME_val OPENFILENAME := OPENFILENAME_val! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GRADIENT_FILL_RECT_V 
^1.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
UserDLL: UserDLL_val UserDLL := UserDLL_val! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FORMAT_MESSAGE_FROM_HMODULE 
^2048.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_EXSETSEL 
^ self  WM_USER +55.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_ERASEBKGND 
^20.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_XVIRTUALSCREEN 
^76.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_CYVIRTUALSCREEN 
^79.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_HOR_NEGATIVE 
^2.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CHARRANGE: CHARRANGE_val CHARRANGE := CHARRANGE_val! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_PAINT 
^15.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
createPipeForWriting: writePipe withChildPipe: readPipe 
|  lpSecurityAttributes  result |
 lpSecurityAttributes := self  SECURITY_ATTRIBUTES newGC bInheritHandle:true.
 result := self CreatePipe  boolValue: readPipe address value: writePipe address value: lpSecurityAttributes address value:0.
 result ifFalse:[ 
^ self  reportError.
].
 result := self SetHandleInformation  boolValue: writePipe value:1 value:0.
 result ifFalse:[ 
^ self  reportError.
].
^ self.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Win32API_superInit_platform: platform 
super  platform: platform.
^ self.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CW_USEDEFAULT 
^2147483648.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_EX_TRANSPARENT 
^32.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBN_SELCHANGE 
^1.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
environmentVariables 
|  envp  env  string  strings  count  a  dict |
 envp := self GetEnvironmentStringsW unsignedValue.
 env := self  WCharAlien forPointer: envp.
 count :=1.
 strings := self OrderedCollection new.
[ 
 a := self Array streamContents:[ : s | 
|  c |
[ 
 c := env unsignedShortAt: count.
 count := count +2.
 c =0.
] whileFalse:[ 
 s nextPut:( self Character value: c).
].
].
 string := self String newFrom: a.
 string isEmpty.
] whileFalse:[ 
 strings add: string.
].
 self FreeEnvironmentStringsW boolValue: envp.
 dict := self Dictionary new.
 strings do:[ : ea | 
|  i  k  v |
 i := ea indexOf:$=.
 k := ea  copyFrom:1 to: i - 1.
 v := ea allButFirst: i.
 dict  at: k asUppercase asSymbol put: v.
].
^ dict.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
IDI_APPLICATION 
^32512.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
COLOR_BACKGROUND 
^1.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SW_HIDE 
^0.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_CXSCREEN 
^0.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
OPENFILENAME ^OPENFILENAME! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_LBUTTON 
^1.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
UserLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_UserLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_UserLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_UserLibrary_slot := myNested.
		].
	^Win32API_UserLibrary_slot! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ERROR_NO_MORE_FILES 
^18.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFE_ITALIC 
^2.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
BN_CLICKED 
^0.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBN_ERRSPACE 
^-2.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_ESCAPE 
^27.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_LBUTTONDBLCLK 
^515.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_LINELENGTH 
^193.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_GETEVENTMASK 
^ self  WM_USER +59.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WindowProc: WindowProc_val WindowProc := WindowProc_val! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_VSCROLL 
^2097152.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MsimgDLL: MsimgDLL_val MsimgDLL := MsimgDLL_val! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBS_HASSTRINGS 
^64.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFE_AUTOCOLOR 
^1073741824.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_VSCROLL 
^277.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CrLfFileStream: CrLfFileStream_val CrLfFileStream := CrLfFileStream_val! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFE_UNDERLINE 
^4.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Pipe
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Pipe_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Pipe.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Pipe_slot := myNested.
		].
	^Win32API_Pipe_slot! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SCROLLINFO ^SCROLLINFO! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_CLOSE 
^16.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_DESTROY 
^2.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_CREATE 
^1.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MK_MBUTTON 
^16.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FILE_FLAG_SEQUENTIAL_SCAN 
^2048.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CS_HREDRAW 
^2.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_SETREDRAW 
^11.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FILE_ATTRIBUTE_READONLY 
^1.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
STARTF_USESTDHANDLES 
^256.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBN_KILLFOCUS 
^5.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_PAUSE 
^19.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WCharAlien ^WCharAlien! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FILE_ATTRIBUTE_NORMAL 
^128.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
KernelDLL: KernelDLL_val KernelDLL := KernelDLL_val! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MF_DISABLED 
^2.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_CAPITAL 
^20.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CommonDataTypes
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_CommonDataTypes_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_CommonDataTypes.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_CommonDataTypes_slot := myNested.
		].
	^Win32API_CommonDataTypes_slot! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
TRIVERTEX ^TRIVERTEX! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
getLastErrorMessage 
^ self  getErrorMessage: self  getLastErrorCode.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Delay ^Delay! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_GETTEXTLENGTH 
^14.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SPI_GETWORKAREA 
^48.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SWP_NOREDRAW 
^8.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_EX_COMPOSITED 
^33554432.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SB_BOTH 
^2.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFM_COLOR 
^1073741824.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFM_BACKCOLOR 
^67108864.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBN_SETFOCUS 
^4.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MSG ^MSG! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_EX_LAYERED 
^524288.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WinLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_WinLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_WinLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self CLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_WinLibrary_slot := myNested.
		].
	^Win32API_WinLibrary_slot! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_NCDESTROY 
^130.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_GETPARAFORMAT 
^ self  WM_USER +61.

! !

"September 28, 2010 -> 23:12:40"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
getLastErrorCode 
^ self GetLastError unsignedValue.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
DEFAULT_QUALITY 
^0.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBN_DBLCLK 
^2.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ES_WANTRETURN 
^4096.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBS_NOINTEGRALHEIGHT 
^256.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_TABSTOP 
^65536.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FORMAT_MESSAGE_ALLOCATE_BUFFER 
^256.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FIND_DATA ^FIND_DATA! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PS_SOLID 
^0.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GDIplus
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_GDIplus.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_slot := myNested.
		].
	^Win32API_GDIplus_slot! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SECURITY_ATTRIBUTES ^SECURITY_ATTRIBUTES! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_LINEINDEX 
^187.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
createPipeForReading 
^ self  Alien autoFreeAfter:[ : autofree | 
|  readPipe  writePipe |
 readPipe := autofree value:( self  Alien newC:4).
 writePipe := autofree value:( self  Alien newC:4).
 self   createPipeForReading: readPipe withChildPipe: writePipe.
 self  Pipe new myEnd: readPipe asUnsignedLong; 
 otherEnd: writePipe asUnsignedLong.
].

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ENM_KEYEVENTS 
^65536.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ES_READONLY 
^2048.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GDIplusFlatDLL ^GDIplusFlatDLL! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MF_SEPARATOR 
^2048.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_GETTEXT 
^13.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_CLIPSIBLINGS 
^67108864.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_WINDOWPOSCHANGED 
^71.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MF_UNCHECKED 
^0.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_SYSMENU 
^524288.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CHARFORMAT: CHARFORMAT_val CHARFORMAT := CHARFORMAT_val! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_OVERLAPPED 
^0.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_MINIMIZEBOX 
^131072.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GA_ROOTOWNER 
^3.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_LINEFROMCHAR 
^201.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_VISIBLE 
^268435456.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_DISABLED 
^134217728.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_SYSCHAR 
^262.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_CXVSCROLL 
^2.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
NULL 
^0.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ES_MULTILINE 
^4.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ERROR_SHARING_VIOLATION 
^32.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_SHOWSCROLLBAR 
^ self  WM_USER +96.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
REQRESIZE: REQRESIZE_val REQRESIZE := REQRESIZE_val! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FORMAT_MESSAGE_FROM_SYSTEM 
^4096.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Win32API_1_init: platform 
 self KernelDLL: self  KernelLibrary new.
 self GDIDLL: self  GDILibrary new.
 self UserDLL: self  UserLibrary new.
 self MsimgDLL: self  MsimgLibrary new.
 self GDIplusFlatDLL: self  GDIplusLibrary new.
 self Comdlg32DLL: self  Comdlg32Library new.
 self CHARFORMAT: platform Win32API Win32apiCHARFORMAT.
 self CHARFORMAT2: platform Win32API Win32apiCHARFORMAT2.
 self CHARRANGE: platform Win32API Win32apiCHARRANGE.
 self FIND_DATA: platform Win32API Win32apiFINDDATA.
 self GRADIENT_RECT: platform Win32API Win32apiGRADIENTRECT.
 self MSG: platform Win32API Win32apiMSG.
 self MSGFILTER: platform Win32API Win32apiMSGFILTER.
 self NMHDR: platform Win32API Win32apiNMHDR.
 self OPENFILENAME: platform Win32API Win32apiOPENFILENAME.
 self PAINTSTRUCT: platform Win32API Win32apiPAINTSTRUCT.
 self PARAFORMAT: platform Win32API Win32apiPARAFORMAT.
 self POINT: platform Win32API Win32apiPOINT.
 self PROCESS_INFORMATION: platform Win32API Win32apiPROCESSINFORMATION.
 self RECT: platform Win32API Win32apiRECT.
 self REQRESIZE: platform Win32API Win32apiREQRESIZE.
 self SCROLLINFO: platform Win32API Win32apiSCROLLINFO.
 self SECURITY_ATTRIBUTES: platform Win32API Win32apiSECURITYATTRIBUTES.
 self STARTUPINFO: platform Win32API Win32apiSTARTUPINFO.
 self TRACKMOUSEEVENT: platform Win32API Win32apiTRACKMOUSEEVENT.
 self TRIVERTEX: platform Win32API Win32apiTRIVERTEX.
 self WNDCLASS: platform Win32API Win32apiWNDCLASS.
 self WINDOWPOS: platform Win32API Win32apiWINDOWPOS.
 self WindowProc: platform Win32API Win32apiWindowProc.
 self WCharAlien: platform NsFFI WCharAlien.
 self GiveUp: platform Win32API GiveUp.
 self CrLfFileStream: platform Files CrLfFileStream.
 self Delay: platform Kernel Delay.
 self FileDirectory: platform Files FileDirectory.
^ self.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MF_POPUP 
^16.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBS_DISABLENOSCROLL 
^4096.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_RBUTTONUP 
^517.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GDIDLL ^GDIDLL! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_CONTROL 
^17.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
reportError: message code: code 
^ self  error:( message ,' (' ,( self  getErrorMessage: code) ,')').

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
closeHandle: handle 
( self CloseHandle boolValue: handle) ifFalse:[ 
 self  reportError.
].
^ self.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FORMAT_MESSAGE_FROM_STRING 
^1024.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GDILibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDILibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_GDILibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDILibrary_slot := myNested.
		].
	^Win32API_GDILibrary_slot! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MF_ENABLED 
^0.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SIF_ALL 
^31.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
TRACKMOUSEEVENT: TRACKMOUSEEVENT_val TRACKMOUSEEVENT := TRACKMOUSEEVENT_val! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
createPipeForReading: readPipe withChildPipe: writePipe 
|  lpSecurityAttributes  result |
 lpSecurityAttributes := self  SECURITY_ATTRIBUTES newGC bInheritHandle:true.
 result := self CreatePipe  boolValue: readPipe address value: writePipe address value: lpSecurityAttributes address value:0.
 result ifFalse:[ 
^ self  reportError.
].
 result := self SetHandleInformation  boolValue: readPipe value:1 value:0.
 result ifFalse:[ 
^ self  reportError.
].
^ self.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
createTemporaryFile: inherit 
|  pathBuffer  tempName  result  hTempFile  lpSecurityAttributes |
 lpSecurityAttributes := self  SECURITY_ATTRIBUTES newGC bInheritHandle: inherit.
 self  Alien autoFreeAfter:[ : autoFree | 
 pathBuffer := self  Alien newGC:512.
 result := self GetTempPath  unsignedValue:512 value: pathBuffer address.
( result >512 or:[ 
 result =0.
]) ifTrue:[ 
^ self  reportError.
].
 tempName := self  Alien newGC:512.
 result := self GetTempFileName  unsignedValue: pathBuffer address value:( autoFree value:( self  Alien newCString:'NSP')) address value:0 value: tempName address.
 result =0 ifTrue:[ 
 self  reportError.
].
].
 hTempFile := self CreateFile  unsignedValue: tempName address value: self  GENERIC_WRITE value:0 value: lpSecurityAttributes address value: self  CREATE_ALWAYS value: self  FILE_ATTRIBUTE_NORMAL value: self  NULL.
 hTempFile = self  INVALID_HANDLE_VALUE ifTrue:[ 
 self  reportError.
].
^ self  File new name: tempName strcpy; 
 handle: hTempFile.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
RECT ^RECT! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FORMAT_MESSAGE_ARGUMENT_ARRAY 
^8192.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
COLOR_WINDOW 
^5.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
STARTUPINFO ^STARTUPINFO! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MK_SHIFT 
^4.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SWP_HIDEWINDOW 
^128.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
nullTerminatedCString: strings 
|  null |
 null := self Character value:0.
 strings isEmpty ifTrue:[ 
^ self  Alien newCString:(( self Array new:2)  at:1 put: null; 
  at:2 put: null; 
 yourself) asString.
].
^ self  Alien newCString:( self String streamContents:[ : s | 
 strings do:[ : string | 
 s nextPutAll: string.
 s nextPut: null.
].
 s nextPut: null.
]).

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MF_CHECKED 
^8.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Win32Function
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Win32Function_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Win32Function.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self CFunction)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Win32Function_slot := myNested.
		].
	^Win32API_Win32Function_slot! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_RBUTTON 
^2.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_HIDESELECTION 
^ self  WM_USER +63.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CS_VREDRAW 
^1.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFM_ITALIC 
^2.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_CHILDWINDOW 
^ self  WS_CHILD.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MsimgLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_MsimgLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_MsimgLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_MsimgLibrary_slot := myNested.
		].
	^Win32API_MsimgLibrary_slot! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
reportError: message 
^ self  error:( message ,' (' , self  getLastErrorMessage ,')').

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_SETEVENTMASK 
^ self  WM_USER +69.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GWL_STYLE 
^-16.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_HSCROLL 
^1048576.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_THICKFRAME 
^262144.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_HSCROLL 
^276.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFM_UNDERLINE 
^4.

! !

"September 28, 2010 -> 23:12:41"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
POINT: POINT_val POINT := POINT_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PROCESS_INFORMATION ^PROCESS_INFORMATION! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_SHIFT 
^16.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
IDC_ARROW 
^32512.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_SETCURSEL 
^390.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MK_RBUTTON 
^2.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CREATE_ALWAYS 
^2.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_GETSEL 
^391.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_CHAR 
^258.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_POPUPWINDOW 
^ self bits:(( self Array new:3)  at:1 put:#'WS_POPUP'; 
  at:2 put:#'WS_BORDER'; 
  at:3 put:#'WS_SYSMENU'; 
 yourself).

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FORMAT_MESSAGE_MAX_WIDTH_MASK 
^255.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MF_GRAYED 
^1.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
OUT_TT_PRECIS 
^4.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FILE_ATTRIBUTE_DIRECTORY 
^16.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_INSERTSTRING 
^385.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_ADDSTRING 
^384.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GWL_EXSTYLE 
^-20.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PROCESS_INFORMATION: PROCESS_INFORMATION_val PROCESS_INFORMATION := PROCESS_INFORMATION_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SWP_SHOWWINDOW 
^64.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_OVERLAPPEDWINDOW 
^ self bits:(( self Array new:6)  at:1 put:#'WS_OVERLAPPED'; 
  at:2 put:#'WS_CAPTION'; 
  at:3 put:#'WS_SYSMENU'; 
  at:4 put:#'WS_THICKFRAME'; 
  at:5 put:#'WS_MINIMIZEBOX'; 
  at:6 put:#'WS_MAXIMIZEBOX'; 
 yourself).

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
STARTF_USESHOWWINDOW 
^1.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SCROLLINFO: SCROLLINFO_val SCROLLINFO := SCROLLINFO_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LB_DELETESTRING 
^386.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
RECT: RECT_val RECT := RECT_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_DLGFRAME 
^4194304.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GRADIENT_RECT: GRADIENT_RECT_val GRADIENT_RECT := GRADIENT_RECT_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_CLIPCHILDREN 
^33554432.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SW_SHOW 
^5.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FileDirectory ^FileDirectory! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_SYSCOMMAND 
^274.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MK_CONTROL 
^8.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_MENU 
^18.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBN_SELCANCEL 
^3.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Comdlg32DLL ^Comdlg32DLL! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_KEYUP 
^257.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CHARFORMAT2: CHARFORMAT2_val CHARFORMAT2 := CHARFORMAT2_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CFM_BOLD 
^1.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_SETPARAFORMAT 
^ self  WM_USER +71.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_LBUTTONDOWN 
^513.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
UserDLL ^UserDLL! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_REQUESTRESIZE 
^ self  WM_USER +65.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CrLfFileStream ^CrLfFileStream! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EN_REQUESTRESIZE 
^1793.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
REQRESIZE ^REQRESIZE! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GDIplusLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplusLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_GDIplusLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplusLibrary_slot := myNested.
		].
	^Win32API_GDIplusLibrary_slot! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WINDOWPOS ^WINDOWPOS! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EN_MSGFILTER 
^1792.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_USER 
^1024.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_EX_TOPMOST 
^8.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PAINTSTRUCT ^PAINTSTRUCT! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WHITE_BRUSH 
^0.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
NONANTIALIASED_QUALITY 
^3.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
reportError 
^ self  error: self  getLastErrorMessage.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MSGFILTER ^MSGFILTER! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
FIND_DATA: FIND_DATA_val FIND_DATA := FIND_DATA_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_CENTER 
^16.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
getErrorMessage: errorCode 
( self  Alien newC:4) freeAfter:[ : lpMsgBuf | 
|  result |
 result := self FormatMessage  unsignedValue: self  FORMAT_MESSAGE_ALLOCATE_BUFFER | self  FORMAT_MESSAGE_FROM_SYSTEM | self  FORMAT_MESSAGE_IGNORE_INSERTS value: self  NULL value: errorCode value: self GetUserDefaultLangID unsignedValue value: lpMsgBuf address value:0 value: self  NULL.
 result =0 ifTrue:[ 
 self  error:('Could not retrieve error code: ' , errorCode asString ,' reason: ' , self  getLastErrorCode asString).
].
^(( self  Alien forPointer: lpMsgBuf asUnsignedLong) strcpy copyWithout: self Character lf) withBlanksTrimmed.
].
^ self.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
LBS_NOTIFY 
^1.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_POPUP 
^2147483648.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ES_PASSWORD 
^32.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SB_VERT 
^1.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_GETCHARFORMAT 
^ self  WM_USER +58.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
KernelDLL ^KernelDLL! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
KernelLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_KernelLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_KernelLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_KernelLibrary_slot := myNested.
		].
	^Win32API_KernelLibrary_slot! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SWP_NOSIZE 
^1.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WindowProc ^WindowProc! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PARAFORMAT ^PARAFORMAT! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SWP_NOZORDER 
^4.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SW_MINIMIZE 
^6.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MsimgDLL ^MsimgDLL! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
DRAFT_QUALITY 
^1.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_YVIRTUALSCREEN 
^77.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_CXVIRTUALSCREEN 
^78.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
AW_VER_NEGATIVE 
^8.

! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GiveUp: GiveUp_val GiveUp := GiveUp_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
NMHDR ^NMHDR! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WNDCLASS: WNDCLASS_val WNDCLASS := WNDCLASS_val! !

"September 28, 2010 -> 23:12:42"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_MINIMIZE 
^536870912.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_MAXIMIZEBOX 
^65536.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
TPM_NONOTIFY 
^128.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_CAPTION 
^12582912.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_NOTIFY 
^78.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_SETCHARFORMAT 
^ self  WM_USER +68.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
BCM_GETIDEALSIZE 
^5633.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SM_CYSCREEN 
^1.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
SECURITY_ATTRIBUTES: SECURITY_ATTRIBUTES_val SECURITY_ATTRIBUTES := SECURITY_ATTRIBUTES_val! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
VK_MBUTTON 
^4.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_LBUTTONUP 
^514.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
File
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_File_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_File.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_File_slot := myNested.
		].
	^Win32API_File_slot! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ENM_REQUESTRESIZE 
^262144.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
NMHDR: NMHDR_val NMHDR := NMHDR_val! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GRADIENT_FILL_RECT_H 
^0.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_RBUTTONDBLCLK 
^518.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_GROUP 
^131072.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
Comdlg32DLL: Comdlg32DLL_val Comdlg32DLL := Comdlg32DLL_val! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
error: message 
^ self  GiveUp signal: message.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
GiveUp ^GiveUp! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WINDOWPOS: WINDOWPOS_val WINDOWPOS := WINDOWPOS_val! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PARAFORMAT: PARAFORMAT_val PARAFORMAT := PARAFORMAT_val! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_BORDER 
^8388608.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
createProcess: commandLine withCurrentDirectory: dir withTitle: title withStdInput: stdInput withStdOutput: stdOutput withStdError: stdError 
|  lpProcessInformation  lpStartupInfo  result |
 lpProcessInformation := self  PROCESS_INFORMATION newGC.
 lpStartupInfo := self  STARTUPINFO newGC.
 self  Alien autoFreeAfter:[ : autoFree | 
 lpStartupInfo dwFlags:( self  STARTF_USESTDHANDLES | self  STARTF_USESHOWWINDOW); 
 wShowWindow: self  SW_HIDE; 
 lpTitle:( autoFree value:( self  Alien newCString: title)) address; 
 hStdInput:( stdInput isInteger  ifTrue:[ 
 stdInput.
] ifFalse:[ 
 stdInput asUnsignedLong.
]); 
 hStdOutput:( stdOutput isInteger  ifTrue:[ 
 stdOutput.
] ifFalse:[ 
 stdOutput asUnsignedLong.
]); 
 hStdError:( stdError isInteger  ifTrue:[ 
 stdError.
] ifFalse:[ 
 stdError asUnsignedLong.
]).
 result := self CreateProcess  boolValue:0 value:( autoFree value:( self  Alien newCString: commandLine)) address value:0 value:0 value:1 value:0 value:0 value:( autoFree value:( self  Alien newCString: dir fullName)) address value: lpStartupInfo address value: lpProcessInformation address.
 result ifFalse:[ 
^ self  reportError.
].
].
^ self  Process new lpProcessInformation: lpProcessInformation.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
PROOF_QUALITY 
^2.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ERROR_ALREADY_EXISTS 
^183.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WM_KEYDOWN 
^256.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MK_LBUTTON 
^1.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
WS_MAXIMIZE 
^16777216.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CHARFORMAT ^CHARFORMAT! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
INVALID_FILE_SIZE 
^16 rffffffff.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
MSGFILTER: MSGFILTER_val MSGFILTER := MSGFILTER_val! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
CLEARTYPE_QUALITY 
^5.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
EM_SETSCROLLPOS 
^ self  WM_USER +222.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
TRIVERTEX: TRIVERTEX_val TRIVERTEX := TRIVERTEX_val! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
COLOR_MENU 
^4.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified' !
ANTIALIASED_QUALITY 
^4.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API := eos ! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API := mmd ! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) classSide methodsFor: 'unclassified' !
platform: platform 
^ self basicNew platform: platform.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API) classSide methodsFor: 'unclassified' !
usingPlatform: platform 
^ self platform: platform.

! !

"September 28, 2010 -> 23:12:43"!

Delta define: #Win32API_MsimgLibrary as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_MsimgLibrary EnclosingObjects_Win32API_MsimgLibrary') !


"September 28, 2010 -> 23:12:43"!

(Delta mirrorFor: #Win32API_MsimgLibrary)
comment: 
'Describe the class in this comment.'!


"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) methodsFor: 'unclassified' !
new 
 self Win32API_MsimgLibrary_superInit_new.
 self Win32API_MsimgLibrary_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) methodsFor: 'unclassified' !
exportFunctionsTo: capi 
 capi exportFunction: self  GradientFill.
^ self.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) methodsFor: 'unclassified' !
Win32API_MsimgLibrary_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) methodsFor: 'unclassified' !
Win32API_MsimgLibrary_superInit_new 
super  name:'Msimg32'.
^ self.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) methodsFor: 'unclassified' !
GradientFill 
^ self  functionNamed:#'GradientFill' argc:6.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_MsimgLibrary := eos ! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_MsimgLibrary := mmd ! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_MsimgLibrary) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:43"!

Delta define: #Win32API_KernelLibrary as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_KernelLibrary EnclosingObjects_Win32API_KernelLibrary') !


"September 28, 2010 -> 23:12:43"!

(Delta mirrorFor: #Win32API_KernelLibrary)
comment: 
'Contains functions from the Kernel Windows library.'!


"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetFileSize 
^ self  functionNamed:#'GetFileSize' argc:2.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetModuleHandleA 
^ self  functionNamed:#'GetModuleHandleA' argc:1.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
FindNextFileA 
^ self  functionNamed:#'FindNextFileA' argc:2.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetTempFileNameA 
^ self  functionNamed:#'GetTempFileNameA' argc:4.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
FreeEnvironmentStringsW 
^ self  functionNamed:#'FreeEnvironmentStringsW' argc:1.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
WaitForSingleObject 
^ self  functionNamed:#'WaitForSingleObject' argc:2.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
LoadLibraryA 
^ self  functionNamed:#'LoadLibraryA' argc:1.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetLastError 
^ self  functionNamed:#'GetLastError' argc:0.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
CreatePipe 
^ self  functionNamed:#'CreatePipe' argc:4.

! !

"September 28, 2010 -> 23:12:43"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
SetHandleInformation 
^ self  functionNamed:#'SetHandleInformation' argc:3.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
CreateProcessA 
^ self  functionNamed:#'CreateProcessA' argc:10.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
Win32API_KernelLibrary_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
DeleteFileA 
^ self  functionNamed:#'DeleteFileA' argc:1.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetACP 
^ self  functionNamed:#'GetACP' argc:0.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetTempPathA 
^ self  functionNamed:#'GetTempPathA' argc:2.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
new 
 self Win32API_KernelLibrary_superInit_new.
 self Win32API_KernelLibrary_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetUserDefaultLangID 
^ self  functionNamed:#'GetUserDefaultLangID' argc:0.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
SetFileApisToOEM 
^ self  functionNamed:#'SetFileApisToOEM' argc:0.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
MoveFileA 
^ self  functionNamed:#'MoveFileA' argc:2.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
SetFilePointer 
^ self  functionNamed:#'SetFilePointer' argc:4.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
ReadFile 
^ self  functionNamed:#'ReadFile' argc:5.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
CreateFileA 
^ self  functionNamed:#'CreateFileA' argc:7.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetDiskFreeSpaceA 
^ self  functionNamed:#'GetDiskFreeSpaceA' argc:5.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
exportFunctionsTo: capi 
 capi exportFunction: self  CloseHandle; 
  exportFunction: self  CopyFileA as:#'CopyFile'; 
  exportFunction: self  CreateDirectoryA as:#'CreateDirectory'; 
  exportFunction: self  CreateFileA as:#'CreateFile'; 
 exportFunction: self  CreatePipe; 
  exportFunction: self  CreateProcessA as:#'CreateProcess'; 
  exportFunction: self  DeleteFileA as:#'DeleteFile'; 
 exportFunction: self  FindClose; 
  exportFunction: self  FindFirstFileA as:#'FindFirstFile'; 
  exportFunction: self  FindNextFileA as:#'FindNextFile'; 
  exportFunction: self  FormatMessageA as:#'FormatMessage'; 
 exportFunction: self  FreeEnvironmentStringsW; 
  exportFunction: self  GetCurrentDirectoryA as:#'GetCurrentDirectory'; 
 exportFunction: self  GetCurrentThread; 
  exportFunction: self  GetDiskFreeSpaceA as:#'GetDiskFreeSpace'; 
 exportFunction: self  GetEnvironmentStringsW; 
 exportFunction: self  GetExitCodeProcess; 
  exportFunction: self  GetFileAttributesA as:#'GetFileAttributes'; 
 exportFunction: self  GetFileSize; 
 exportFunction: self  GetLastError; 
  exportFunction: self  GetModuleHandleA as:#'GetModuleHandle'; 
 exportFunction: self  GetStdHandle; 
  exportFunction: self  GetTempFileNameA as:#'GetTempFileName'; 
  exportFunction: self  GetTempPathA as:#'GetTempPath'; 
 exportFunction: self  GetUserDefaultLangID; 
  exportFunction: self  LoadLibraryA as:#'LoadLibrary'; 
  exportFunction: self  MoveFileA as:#'MoveFile'; 
 exportFunction: self  MultiByteToWideChar; 
 exportFunction: self  ReadFile; 
  exportFunction: self  RemoveDirectoryA as:#'RemoveDirectory'; 
 exportFunction: self  SetFileApisToOEM; 
 exportFunction: self  SetFilePointer; 
 exportFunction: self  SetHandleInformation; 
 exportFunction: self  WaitForSingleObject; 
 exportFunction: self  WideCharToMultiByte; 
 exportFunction: self  WriteFile.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
WriteFile 
^ self  functionNamed:#'WriteFile' argc:5.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetExitCodeProcess 
^ self  functionNamed:#'GetExitCodeProcess' argc:2.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
CloseHandle 
^ self  functionNamed:#'CloseHandle' argc:1.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
FindFirstFileA 
^ self  functionNamed:#'FindFirstFileA' argc:2.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetCurrentDirectoryA 
^ self  functionNamed:#'GetCurrentDirectoryA' argc:2.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetEnvironmentStringsW 
^ self  functionNamed:#'GetEnvironmentStringsW' argc:0.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
RemoveDirectoryA 
^ self  functionNamed:#'RemoveDirectoryA' argc:1.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetFileAttributesA 
^ self  functionNamed:#'GetFileAttributesA' argc:1.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
CopyFileA 
^ self  functionNamed:#'CopyFileA' argc:3.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
Win32API_KernelLibrary_superInit_new 
super  name:'Kernel'.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
CreateDirectoryA 
^ self  functionNamed:#'CreateDirectoryA' argc:2.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetCurrentThread 
^ self  functionNamed:#'GetCurrentThread' argc:0.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
FindClose 
^ self  functionNamed:#'FindClose' argc:1.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
MultiByteToWideChar 
^ self  functionNamed:#'MultiByteToWideChar' argc:6.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
FormatMessageA 
^ self  functionNamed:#'FormatMessageA' argc:7.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
WideCharToMultiByte 
^ self  functionNamed:#'WideCharToMultiByte' argc:8.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified' !
GetStdHandle 
^ self  functionNamed:#'GetStdHandle' argc:1.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_KernelLibrary := eos ! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_KernelLibrary := mmd ! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_KernelLibrary) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:44"!

Delta define: #Win32API_CommonDataTypes as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_CommonDataTypes EnclosingObjects_Win32API_CommonDataTypes') !


"September 28, 2010 -> 23:12:44"!

(Delta mirrorFor: #Win32API_CommonDataTypes)
comment: 
''!


"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_CommonDataTypes) methodsFor: 'unclassified' !
Win32API_CommonDataTypes_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_CommonDataTypes) methodsFor: 'unclassified' !
Win32API_CommonDataTypes_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_CommonDataTypes) methodsFor: 'unclassified' !
new 
 self Win32API_CommonDataTypes_superInit_new.
 self Win32API_CommonDataTypes_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_CommonDataTypes) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_CommonDataTypes := eos ! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_CommonDataTypes) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_CommonDataTypes := mmd ! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_CommonDataTypes) classSide methodsFor: 'unclassified' !
specification 
^'
typedef int BOOL, *PBOOL, *LPBOOL;

typedef BYTE  BOOLEAN, *PBOOLEAN;

typedef WCHAR  * BSTR;

typedef unsigned char BYTE, *PBYTE, *LPBYTE;

typedef char CHAR, *PCHAR;

typedef unsigned long DWORD, *PDWORD, *LPDWORD;

typedef ULONGLONG  DWORDLONG, *PDWORDLONG;

typedef ULONG_PTR  DWORD_PTR;

typedef unsigned int DWORD32;

typedef unsigned __int64  DWORD64;

typedef int INT, *LPINT;

typedef signed char INT8;

typedef signed short INT16;

typedef signed int INT32;

typedef signed __int64 INT64;

typedef long LONG, *LPLONG;

typedef signed int LONG32;

typedef __int64  LONG64;

typedef LPCSTR  LPCTSTR;

typedef unsigned __int64  QWORD;

typedef short SHORT;

typedef unsigned char UCHAR, *PUCHAR;

typedef unsigned int UINT;

typedef unsigned char UINT8;

typedef unsigned short UINT16;

typedef unsigned int UINT32;

typedef unsigned __int64  UINT64;

typedef unsigned long ULONG, *PULONG;

typedef unsigned int ULONG32;

typedef unsigned __int64  ULONG64;

typedef unsigned short UNSIGNED16;

typedef unsigned long UNSIGNED32;

typedef unsigned short USHORT;

typedef void VOID, *PVOID;

typedef wchar_t  WCHAR, *PWCHAR;

typedef unsigned short WORD, *PWORD, *LPWORD;
'.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_CommonDataTypes) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:44"!

Delta define: #Win32API_Process as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' lpProcessInformation') classVariables: 'MixinMetadata_Win32API_Process EnclosingObjects_Win32API_Process') !


"September 28, 2010 -> 23:12:44"!

(Delta mirrorFor: #Win32API_Process)
comment: 
''!


"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) methodsFor: 'unclassified' !
lpProcessInformation: lpProcessInformation_val lpProcessInformation := lpProcessInformation_val! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) methodsFor: 'unclassified' !
waitForExitCode 
^[ 
|  lpExitCode  delay |
 lpExitCode := (EnclosingObjects_Win32API_Process at: 1)  Alien newGC:4.
 delay := (EnclosingObjects_Win32API_Process at: 1)  Delay forMilliseconds:10.
[ 
|  rcode |
 rcode := (EnclosingObjects_Win32API_Process at: 1)  WaitForSingleObject  unsignedValue: self  lpProcessInformation hProcess value:0.
258 = rcode.
] whileTrue:[ 
 delay wait.
].
 (EnclosingObjects_Win32API_Process at: 1)  GetExitCodeProcess  boolValue: self  lpProcessInformation hProcess value: lpExitCode pointer.
 lpExitCode signedLongAt:1.
] ensure:[ 
 self  lpProcessInformation closeHandles.
].

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) methodsFor: 'unclassified' !
lpProcessInformation ^lpProcessInformation! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) methodsFor: 'unclassified' !
Win32API_Process_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) methodsFor: 'unclassified' !
Win32API_Process_1_init 
 self lpProcessInformation:nil.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) methodsFor: 'unclassified' !
new 
 self Win32API_Process_superInit_new.
 self Win32API_Process_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_Process := eos ! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_Process := mmd ! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_Process) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:44"!

Delta define: #Win32API_GDIplus as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' Win32API_GDIplus_GDIplusObject_slot Win32API_GDIplus_CachedBitmap_slot Win32API_GDIplus_Graphics_slot Win32API_GDIplus_Brush_slot Win32API_GDIplus_Color_slot Win32API_GDIplus_PaintDCGraphics_slot Win32API_GDIplus_Pen_slot token flatAPI Win32API_GDIplus_LinearGradientBrush_slot Win32API_GDIplus_SolidBrush_slot Win32API_GDIplus_Bitmap_slot') classVariables: 'MixinMetadata_Win32API_GDIplus EnclosingObjects_Win32API_GDIplus') !


"September 28, 2010 -> 23:12:44"!

(Delta mirrorFor: #Win32API_GDIplus)
comment: 
'This is a nested module providing a Newspeak wrapper around GDI+ flat api, similar to the C++ wrapper provided by Microsoft as the official GDI+ API.'!


"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
Pen
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Pen_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Pen.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Pen_slot := myNested.
		].
	^Win32API_GDIplus_Pen_slot! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
Color
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Color_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Color.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Color_slot := myNested.
		].
	^Win32API_GDIplus_Color_slot! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
LinearGradientBrush
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_LinearGradientBrush_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_LinearGradientBrush.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  Brush)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_LinearGradientBrush_slot := myNested.
		].
	^Win32API_GDIplus_LinearGradientBrush_slot! !

"September 28, 2010 -> 23:12:44"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
alienClass 
^ (EnclosingObjects_Win32API_GDIplus at: 1)  Alien.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
flatAPI: flatAPI_val flatAPI := flatAPI_val! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
Win32API_GDIplus_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_superInit_new.
 self Win32API_GDIplus_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
resetForNewImageSession 
 self  token:nil.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
Brush
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Brush_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Brush.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Brush_slot := myNested.
		].
	^Win32API_GDIplus_Brush_slot! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
Graphics
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Graphics_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Graphics.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Graphics_slot := myNested.
		].
	^Win32API_GDIplus_Graphics_slot! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
shutdown 
 self  token notNil ifTrue:[ 
 self  flatAPI GdiplusShutdown value: self  token asUnsignedLong.
 self  token:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
SolidBrush
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_SolidBrush_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_SolidBrush.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  Brush)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_SolidBrush_slot := myNested.
		].
	^Win32API_GDIplus_SolidBrush_slot! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
Bitmap
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Bitmap_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Bitmap.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Bitmap_slot := myNested.
		].
	^Win32API_GDIplus_Bitmap_slot! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
GDIplusObject
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_GDIplusObject_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_GDIplusObject.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_GDIplusObject_slot := myNested.
		].
	^Win32API_GDIplus_GDIplusObject_slot! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
Win32API_GDIplus_1_init 
 self token:nil.
 self flatAPI: (EnclosingObjects_Win32API_GDIplus at: 1)  GDIplusFlatDLL.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
withGdiplusStartupInputAndOutputDo: action 
|  input  output  result |
 input := self  alienClass newC:16.
 input  unsignedLongAt:1 put:1; 
  unsignedLongAt:5 put:0; 
  unsignedLongAt:9 put:0; 
  unsignedLongAt:13 put:0.
 output := self  alienClass newC:8.
 result := action  value: input value: output.
 input free.
 output free.
^ result.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
token: token_val token := token_val! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
statusStringFor: statusCode 
^(( self Array new:22)  at:1 put:'Ok'; 
  at:2 put:'GenericError'; 
  at:3 put:'InvalidParameter'; 
  at:4 put:'OutOfMemory'; 
  at:5 put:'ObjectBusy'; 
  at:6 put:'InsufficientBuffer'; 
  at:7 put:'NotImplemented'; 
  at:8 put:'Win32Error'; 
  at:9 put:'WrongState'; 
  at:10 put:'Aborted'; 
  at:11 put:'FileNotFound'; 
  at:12 put:'ValueOverflow'; 
  at:13 put:'AccessDenied'; 
  at:14 put:'UnknownImageFormat'; 
  at:15 put:'FontFamilyNotFound'; 
  at:16 put:'FontStyleNotFound'; 
  at:17 put:'NotTrueTypeFont'; 
  at:18 put:'UnsupportedGdiplusVersion'; 
  at:19 put:'GdiplusNotInitialized'; 
  at:20 put:'PropertyNotFound'; 
  at:21 put:'PropertyNotSupported'; 
  at:22 put:'ProfileNotFound'; 
 yourself) at:( statusCode +1).

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
token ^token! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
PaintDCGraphics
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_PaintDCGraphics_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_PaintDCGraphics.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  Graphics)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_PaintDCGraphics_slot := myNested.
		].
	^Win32API_GDIplus_PaintDCGraphics_slot! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
flatAPI ^flatAPI! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
CachedBitmap
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_CachedBitmap_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_CachedBitmap.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_CachedBitmap_slot := myNested.
		].
	^Win32API_GDIplus_CachedBitmap_slot! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified' !
startup 
|  status |
 self  token:( self  alienClass newC:4).
 self  withGdiplusStartupInputAndOutputDo:[ : input : output | 
 status := self  flatAPI GdiplusStartup  unsignedValue: self  token address value: input address value: output address.
].
 status =0 ifFalse:[ 
 self  token free.
 self  token:nil.
].
^ self  token notNil.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus := eos ! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus := mmd ! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:45"!

Delta define: #Win32API_GDIplus_Bitmap as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' nativeImagePtr bits') classVariables: 'MixinMetadata_Win32API_GDIplus_Bitmap EnclosingObjects_Win32API_GDIplus_Bitmap') !


"September 28, 2010 -> 23:12:45"!

(Delta mirrorFor: #Win32API_GDIplus_Bitmap)
comment: 
'Provides a subset of the functionality of the Bitmap class of the official GDI+ API.'!


"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
nativeImagePtr ^nativeImagePtr! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
initWidth: width height: height format: format 
|  pointerBox |
 pointerBox := (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipCreateBitmapFromScan0  unsignedValue: width value: height value:0 value: format value:0 value: pointerBox address).
 self lastResult =0 ifFalse:[ 
 pointerBox free.
^ (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  GiveUp signal:('Bitmap creation failed with status: ' , self lastResult asString ,' (' , (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  getLastErrorMessage ,')').
].
 self  nativeImagePtr: pointerBox asUnsignedLong.
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
initWidth: width height: height stride: stride format: format bits: data 
|  pointerBox |
 self  bits: data.
 pointerBox := (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipCreateBitmapFromScan0  unsignedValue: width value: height value: stride value: format value: self  bits address value: pointerBox address).
 self lastResult =0 ifFalse:[ 
 pointerBox free.
^ (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  reportError:('Bitmap creation failed with status: ' , self lastResult printString).
].
 self  nativeImagePtr: pointerBox asUnsignedLong.
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
initWidth: width height: height target: target 
|  pointerBox |
 pointerBox := (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipCreateBitmapFromGraphics  unsignedValue: width value: height value: target nativeGraphicsPtr value: pointerBox address).
 self lastResult =0 ifFalse:[ 
 pointerBox free.
^ (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  reportError:('Bitmap creation failed with status: ' , self lastResult printString).
].
 self  nativeImagePtr: pointerBox asUnsignedLong.
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
bits: bits_val bits := bits_val! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
nativeImagePtr: nativeImagePtr_val nativeImagePtr := nativeImagePtr_val! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
Win32API_GDIplus_Bitmap_1_init 
 self nativeImagePtr:0.
 self bits:nil.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
release 
 self  nativeImagePtr ~=0 ifTrue:[ 
 (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipDisposeImage value: self  nativeImagePtr.
 self  nativeImagePtr:0.
].
 self  bits notNil ifTrue:[ 
 self  bits free.
 self  bits:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
bits ^bits! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_Bitmap_superInit_new.
 self Win32API_GDIplus_Bitmap_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified' !
Win32API_GDIplus_Bitmap_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Bitmap := eos ! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Bitmap := mmd ! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) classSide methodsFor: 'unclassified' !
width: width height: height target: target 
^ self new  initWidth: width height: height target: target.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) classSide methodsFor: 'unclassified' !
width: width height: height format: f 
^ self new  initWidth: width height: height format: f.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) classSide methodsFor: 'unclassified' !
width: width height: height stride: stride format: f bits: bits 
^ self new  initWidth: width height: height stride: stride format: f bits: bits.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:45"!

Delta define: #Win32API_GDIplus_LinearGradientBrush as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_GDIplus_LinearGradientBrush EnclosingObjects_Win32API_GDIplus_LinearGradientBrush') !


"September 28, 2010 -> 23:12:45"!

(Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush)
comment: 
'Corresponds to (a subset of) the LinearGradientBrush class of the official API.'!


"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) methodsFor: 'unclassified' !
Win32API_GDIplus_LinearGradientBrush_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) methodsFor: 'unclassified' !
initFrom: from to: to fromColor: fromColor toColor: toColor 
|  p1  p2  pointerBox |
 p1 := (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 2)  POINT newC initializeFromPoint: from.
 p2 := (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 2)  POINT newC initializeFromPoint: to.
 pointerBox := (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 1)  flatAPI GdipCreateLineBrushI  unsignedValue: p1 address value: p2 address value: fromColor argb value: toColor argb value:0 value: pointerBox address).
 self nativeBrushPtr: pointerBox asUnsignedLong.
 self lastResult =0 ifFalse:[ 
 (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 2)  reportError:('LinearGradientBrush creation failed with status: ' , self lastResult printString).
].
 pointerBox free.
 p2 free.
 p1 free.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_LinearGradientBrush_superInit_new.
 self Win32API_GDIplus_LinearGradientBrush_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) methodsFor: 'unclassified' !
Win32API_GDIplus_LinearGradientBrush_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_LinearGradientBrush := eos ! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_LinearGradientBrush := mmd ! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) classSide methodsFor: 'unclassified' !
from: p1 color: c1 to: p2 color: c2 
^ self new  initFrom: p1 to: p2 fromColor: c1 toColor: c2.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:45"!

Delta define: #Win32API_GDIplus_Pen as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' nativePenPtr') classVariables: 'MixinMetadata_Win32API_GDIplus_Pen EnclosingObjects_Win32API_GDIplus_Pen') !


"September 28, 2010 -> 23:12:45"!

(Delta mirrorFor: #Win32API_GDIplus_Pen)
comment: 
'Corresponds to the Pen class of the official GDI+ API.'!


"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified' !
release 
 self  nativePenPtr ~=0 ifTrue:[ 
 (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  flatAPI GdipDeletePen value: self  nativePenPtr.
 self  nativePenPtr:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified' !
nativePenPtr ^nativePenPtr! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_Pen_superInit_new.
 self Win32API_GDIplus_Pen_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified' !
nativePenPtr: nativePenPtr_val nativePenPtr := nativePenPtr_val! !

"September 28, 2010 -> 23:12:45"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified' !
Win32API_GDIplus_Pen_1_init 
 self nativePenPtr:0.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified' !
Win32API_GDIplus_Pen_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified' !
initColor: color width: width 
|  pointerBox  widthFloat |
 pointerBox := (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  alienClass newC:4.
 widthFloat := (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  alienClass new:4.
 widthFloat  floatAt:1 put: width.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  flatAPI GdipCreatePen1  unsignedValue: color argb value: widthFloat value:0 value: pointerBox address).
 self  nativePenPtr: pointerBox asUnsignedLong.
 self lastResult =0 ifFalse:[ 
 (EnclosingObjects_Win32API_GDIplus_Pen at: 2)  reportError:('Pen creation failed with status: ' , self lastResult printString).
].
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Pen := eos ! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Pen := mmd ! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) classSide methodsFor: 'unclassified' !
color: color width: width 
^ self new  initColor: color width: width.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Pen) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:46"!

Delta define: #Win32API_GDIplus_SolidBrush as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_GDIplus_SolidBrush EnclosingObjects_Win32API_GDIplus_SolidBrush') !


"September 28, 2010 -> 23:12:46"!

(Delta mirrorFor: #Win32API_GDIplus_SolidBrush)
comment: 
'Corresponds to (a subset of) the SolidBrush class of the official C++ GDI+ API.'!


"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) methodsFor: 'unclassified' !
initColor: color 
|  pointerBox |
 pointerBox := (EnclosingObjects_Win32API_GDIplus_SolidBrush at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_SolidBrush at: 1)  flatAPI GdipCreateSolidFill  unsignedValue: color argb value: pointerBox address).
 self nativeBrushPtr: pointerBox asUnsignedLong.
 self lastResult =0 ifFalse:[ 
 (EnclosingObjects_Win32API_GDIplus_SolidBrush at: 2)  reportError:('Solid brush creation failed with status: ' , self lastResult printString).
].
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) methodsFor: 'unclassified' !
Win32API_GDIplus_SolidBrush_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) methodsFor: 'unclassified' !
Win32API_GDIplus_SolidBrush_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_SolidBrush_superInit_new.
 self Win32API_GDIplus_SolidBrush_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_SolidBrush := eos ! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_SolidBrush := mmd ! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) classSide methodsFor: 'unclassified' !
color: color 
^ self new initColor: color.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:46"!

Delta define: #Win32API_GDIplus_Brush as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' nativeBrushPtr') classVariables: 'MixinMetadata_Win32API_GDIplus_Brush EnclosingObjects_Win32API_GDIplus_Brush') !


"September 28, 2010 -> 23:12:46"!

(Delta mirrorFor: #Win32API_GDIplus_Brush)
comment: 
'Corresponds to (a subset of) the C++ class Brush of the official GDI+ API. This class is abstract.'!


"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) methodsFor: 'unclassified' !
nativeBrushPtr: nativeBrushPtr_val nativeBrushPtr := nativeBrushPtr_val! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) methodsFor: 'unclassified' !
release 
 self  nativeBrushPtr ~=0 ifTrue:[ 
 (EnclosingObjects_Win32API_GDIplus_Brush at: 1)  flatAPI GdipDeleteBrush value: self  nativeBrushPtr.
 self  nativeBrushPtr:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) methodsFor: 'unclassified' !
nativeBrushPtr ^nativeBrushPtr! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) methodsFor: 'unclassified' !
Win32API_GDIplus_Brush_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) methodsFor: 'unclassified' !
Win32API_GDIplus_Brush_1_init 
 self nativeBrushPtr:0.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_Brush_superInit_new.
 self Win32API_GDIplus_Brush_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Brush := eos ! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Brush := mmd ! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Brush) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:46"!

Delta define: #Win32API_GDIplus_Graphics as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' nativeGraphicsPtr gdiPlus_') classVariables: 'MixinMetadata_Win32API_GDIplus_Graphics EnclosingObjects_Win32API_GDIplus_Graphics') !


"September 28, 2010 -> 23:12:46"!

(Delta mirrorFor: #Win32API_GDIplus_Graphics)
comment: 
'A minimal subset of the Graphics class from GDI+.'!


"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
drawEllipse: bounds using: pen 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawEllipseI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: bounds left value: bounds top value: bounds width value: bounds height).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
resetClip 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipResetClip unsignedValue: self  nativeGraphicsPtr).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
nativeGraphicsPtr: nativeGraphicsPtr_val nativeGraphicsPtr := nativeGraphicsPtr_val! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
setCompositingMode: mode 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipSetCompositingMode  unsignedValue: self  nativeGraphicsPtr value: mode).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
fillEllipse: bounds using: brush 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillEllipseI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: bounds left value: bounds top value: bounds width value: bounds height).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
drawImage: image at: point 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawImageI  unsignedValue: self  nativeGraphicsPtr value: image nativeImagePtr value: point x value: point y).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
releaseHDC: hdc 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipReleaseDC  unsignedValue: self  nativeGraphicsPtr value: hdc).
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
flush 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFlush  unsignedValue: self  nativeGraphicsPtr value:1).
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
nativeGraphicsPtr ^nativeGraphicsPtr! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
getHDCWhile: action 
|  hdc |
 hdc := self  getHDC.
^[ 
 action value: hdc.
] ensure:[ 
 self  releaseHDC: hdc.
].

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
withPointArrayFrom: vertices do: action 
|  buffer  offset |
 buffer := (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  Alien rawNewC:( vertices size *8).
 offset :=1.
 vertices keysAndValuesDo:[ : index : each | 
 buffer  signedLongAt: offset put: each x.
 offset := offset +4.
 buffer  signedLongAt: offset put: each y.
 offset := offset +4.
].
^[ 
 action value: buffer.
] ensure:[ 
 buffer free.
].

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
gdiPlus_ ^gdiPlus_! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_Graphics_superInit_new.
 self Win32API_GDIplus_Graphics_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
clear: color 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipGraphicsClear  unsignedValue: self  nativeGraphicsPtr value: color argb).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
Win32API_GDIplus_Graphics_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
gdiPlus_: gdiPlus__val gdiPlus_ := gdiPlus__val! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
drawLineFrom: from to: to using: pen 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawLineI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: from x rounded value: from y rounded value: to x rounded value: to y rounded).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
setCompositingQuality: mode 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipSetCompositingQuality  unsignedValue: self  nativeGraphicsPtr value: mode).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
getHDC 
|  hdcBox  hdc |
 hdcBox := (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipGetDC  unsignedValue: self  nativeGraphicsPtr value: hdcBox address).
 self lastResult =0 ifFalse:[ 
 hdcBox free.
^ (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  reportError:('GdipGetDC() failed with status ' , self lastResult printString).
].
 hdc := hdcBox asUnsignedLong.
 hdcBox free.
^ hdc.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
drawCachedBitmap: bitmap at: point 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawCachedBitmap  unsignedValue: self  nativeGraphicsPtr value: bitmap nativeCachedBitmap value: point x value: point y).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
polygon: vertices drawUsing: pen fillUsing: brush 
 self   withPointArrayFrom: vertices do:[ : pointBuffer | 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillPolygonI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: pointBuffer address value: vertices size value:0).
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawPolygonI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: pointBuffer address value: vertices size).
].
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
drawRectangle: bounds using: pen 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawRectangleI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: bounds left rounded value: bounds top rounded value: bounds width rounded value: bounds height rounded).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
gdiPlus 
^ self  gdiPlus_ ifNil:[ 
 self  gdiPlus_: (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  yourself.
 self  gdiPlus_.
].

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
release 
 self  nativeGraphicsPtr ~=0 ifTrue:[ 
 (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDeleteGraphics value: self  nativeGraphicsPtr.
 self  nativeGraphicsPtr:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
initFromBitmap: bitmap 
|  pointerBox |
 pointerBox := (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipGetImageGraphicsContext  unsignedValue: bitmap nativeImagePtr value: pointerBox address).
 self lastResult =0 ifFalse:[ 
 pointerBox free.
^ (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  reportError:('Graphics creation failed with status: ' , self lastResult printString).
].
 self  nativeGraphicsPtr: pointerBox asUnsignedLong.
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
fillPolygon: vertices using: brush 
 self   withPointArrayFrom: vertices do:[ : pointBuffer | 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillPolygonI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: pointBuffer address value: vertices size value:0).
].
^ self lastResult.

! !

"September 28, 2010 -> 23:12:46"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
setSmoothingMode: mode 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipSetSmoothingMode  unsignedValue: self  nativeGraphicsPtr value: mode).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
fillRectangle: rect using: brush 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillRectangleI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: rect left rounded value: rect top rounded value: rect width rounded value: rect height rounded).
^ self lastResult.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
Win32API_GDIplus_Graphics_1_init 
 self nativeGraphicsPtr:0.
 self gdiPlus_:nil.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
initFromHDC: hdc 
|  pointerBox |
 pointerBox := (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipCreateFromHDC  unsignedValue: hdc value: pointerBox address).
 self lastResult =0 ifFalse:[ 
 pointerBox free.
^ (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  reportError:('Graphics creation failed with status: ' , self lastResult printString).
].
 self  nativeGraphicsPtr: pointerBox asUnsignedLong.
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified' !
drawPolygon: vertices using: pen 
 self   withPointArrayFrom: vertices do:[ : pointBuffer | 
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawPolygonI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: pointBuffer address value: vertices size).
].
^ self lastResult.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Graphics := eos ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Graphics := mmd ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) classSide methodsFor: 'unclassified' !
fromHDC: hdc 
^ self new initFromHDC: hdc.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) classSide methodsFor: 'unclassified' !
forBitmap: bitmap 
^ self new initFromBitmap: bitmap.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Graphics) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:47"!

Delta define: #Win32API_GDIplus_GDIplusObject as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' lastResult') classVariables: 'MixinMetadata_Win32API_GDIplus_GDIplusObject EnclosingObjects_Win32API_GDIplus_GDIplusObject') !


"September 28, 2010 -> 23:12:47"!

(Delta mirrorFor: #Win32API_GDIplus_GDIplusObject)
comment: 
'The common superclass of other GDI+ objects. Not much stuff here so far, but I''m sure we''ll find what to put here.'!


"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) methodsFor: 'unclassified' !
lastResult ^lastResult! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) methodsFor: 'unclassified' !
lastResult: lastResult_val lastResult := lastResult_val! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) methodsFor: 'unclassified' !
ensureOkStatusAfter: functionName 
 self  lastResult =0 ifFalse:[ 
^ (EnclosingObjects_Win32API_GDIplus_GDIplusObject at: 2)  reportError:( functionName ,' failed with status: ' ,( (EnclosingObjects_Win32API_GDIplus_GDIplusObject at: 1)  statusStringFor: self  lastResult)).
].
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) methodsFor: 'unclassified' !
Win32API_GDIplus_GDIplusObject_1_init 
 self lastResult:0.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) methodsFor: 'unclassified' !
Win32API_GDIplus_GDIplusObject_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_GDIplusObject_superInit_new.
 self Win32API_GDIplus_GDIplusObject_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_GDIplusObject := eos ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_GDIplusObject := mmd ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:47"!

Delta define: #Win32API_GDIplus_PaintDCGraphics as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' hdc') classVariables: 'MixinMetadata_Win32API_GDIplus_PaintDCGraphics EnclosingObjects_Win32API_GDIplus_PaintDCGraphics') !


"September 28, 2010 -> 23:12:47"!

(Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics)
comment: 
'Describe the class in this comment.'!


"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
Win32API_GDIplus_PaintDCGraphics_1_init 
 self hdc:nil.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
getHDC 
^ self  hdc.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
Win32API_GDIplus_PaintDCGraphics_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
hdc ^hdc! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
getHDCWhile: action 
^ action value: self  hdc.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
releaseHDC 
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
hdc: hdc_val hdc := hdc_val! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
initFromHDC: hdc_ 
super  initFromHDC: hdc_.
 self  hdc: hdc_.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_PaintDCGraphics_superInit_new.
 self Win32API_GDIplus_PaintDCGraphics_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_PaintDCGraphics := eos ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_PaintDCGraphics := mmd ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) classSide methodsFor: 'unclassified' !
fromHDC: hdc_ 
^ self new initFromHDC: hdc_.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:47"!

Delta define: #Win32API_GDIplus_Color as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' argb') classVariables: 'MixinMetadata_Win32API_GDIplus_Color EnclosingObjects_Win32API_GDIplus_Color') !


"September 28, 2010 -> 23:12:47"!

(Delta mirrorFor: #Win32API_GDIplus_Color)
comment: 
'Corresponds to the GDI+ Color class encoding 32-bit ARGB color values. The maximum value of each color component is 255. The alpha value of 255 means fully opaque. In this default constructor we trust the sender to provide us with values within their acceptable ranges. All objects of this module expect this as the color values they operate with rather than the Squeak color things.'!


"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
Win32API_GDIplus_Color_superInit_fromArgb: argb_ 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
red 
^ self  argb >>16 bitAnd:255.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
argb: argb_val argb := argb_val! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
fromArgb: argb_ 
 self Win32API_GDIplus_Color_superInit_fromArgb: argb_.
 self Win32API_GDIplus_Color_1_init: argb_.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
Win32API_GDIplus_Color_1_init: argb_ 
 self argb: argb_.
^ self.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
alpha 
^ self  argb >>24.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
asColorref 
^ self  argb bitAnd:16777215.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
argb ^argb! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
green 
^ self  argb >>8 bitAnd:255.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified' !
blue 
^ self  argb bitAnd:255.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Color := eos ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Color := mmd ! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
alpha: alpha red: red green: green blue: blue 
^ self   a:( alpha bitAnd:255) r:( red bitAnd:255) g:( green bitAnd:255) b:( blue bitAnd:255).

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
black 
^ self   a:255 r:0 g:0 b:0.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
a: alpha r: red g: green b: blue 
^ self  fromArgb:( alpha <<24 |( red <<16) |( green <<8) | blue).

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
fromSqueakColor: color 
^ self   a: color privateAlpha r:( color red *255) rounded g:( color green *255) rounded b:( color blue *255) rounded.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
transparent 
^ self   a:0 r:255 g:255 b:255.

! !

"September 28, 2010 -> 23:12:47"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
red 
^ self   a:255 r:255 g:0 b:0.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
fromColorref: colorref 
^ self  fromArgb:(4278190080 | colorref).

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
fromArgb: argb_ 
^ self basicNew fromArgb: argb_.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
gray 
^ self   a:255 r:128 g:128 b:128.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
gray: value 
^ self   a:255 r: value g: value b: value.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
yellow 
^ self   a:255 r:255 g:255 b:0.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
orange 
^ self   a:255 r:255 g:165 b:0.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
white 
^ self   a:255 r:255 g:255 b:255.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
green 
^ self   a:255 r:0 g:255 b:0.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified' !
blue 
^ self   a:255 r:0 g:0 b:255.

! !

"September 28, 2010 -> 23:12:48"!

Delta define: #Win32API_GDIplus_CachedBitmap as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' nativeCachedBitmap') classVariables: 'MixinMetadata_Win32API_GDIplus_CachedBitmap EnclosingObjects_Win32API_GDIplus_CachedBitmap') !


"September 28, 2010 -> 23:12:48"!

(Delta mirrorFor: #Win32API_GDIplus_CachedBitmap)
comment: 
'Same as the CachedBitmap class of the official GDI+ API.'!


"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified' !
release 
 self  nativeCachedBitmap ~=0 ifTrue:[ 
 (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 1)  flatAPI GdipDeleteCachedBitmap value: self  nativeCachedBitmap.
 self  nativeCachedBitmap:0.
].
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified' !
nativeCachedBitmap ^nativeCachedBitmap! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified' !
Win32API_GDIplus_CachedBitmap_1_init 
 self nativeCachedBitmap:0.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified' !
initBitmap: bitmap graphics: graphics 
|  pointerBox |
 pointerBox := (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 1)  alienClass newC:4.
 self lastResult:( (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 1)  flatAPI GdipCreateCachedBitmap  unsignedValue: bitmap nativeImagePtr value: graphics nativeGraphicsPtr value: pointerBox address).
 self  nativeCachedBitmap: pointerBox asUnsignedLong.
 self lastResult =0 ifFalse:[ 
 (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 2)  reportError:('CachedBitmap creation failed with status: ' , self lastResult printString).
].
 pointerBox free.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified' !
Win32API_GDIplus_CachedBitmap_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified' !
nativeCachedBitmap: nativeCachedBitmap_val nativeCachedBitmap := nativeCachedBitmap_val! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplus_CachedBitmap_superInit_new.
 self Win32API_GDIplus_CachedBitmap_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_CachedBitmap := eos ! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_CachedBitmap := mmd ! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) classSide methodsFor: 'unclassified' !
bitmap: bitmap graphics: graphics 
^ self new  initBitmap: bitmap graphics: graphics.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:48"!

Delta define: #Win32API_Pipe as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' otherEnd myEnd') classVariables: 'MixinMetadata_Win32API_Pipe EnclosingObjects_Win32API_Pipe') !


"September 28, 2010 -> 23:12:48"!

(Delta mirrorFor: #Win32API_Pipe)
comment: 
''!


"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
closeBothEnds 
 self  closeMyEnd.
 self  closeOtherEnd.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
otherEnd ^otherEnd! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
closeOtherEnd 
 (EnclosingObjects_Win32API_Pipe at: 1)  closeHandle: self  otherEnd.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
otherEnd: otherEnd_val otherEnd := otherEnd_val! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
myEnd: myEnd_val myEnd := myEnd_val! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
Win32API_Pipe_1_init 
 self myEnd:nil.
 self otherEnd:nil.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
Win32API_Pipe_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
closeMyEnd 
 (EnclosingObjects_Win32API_Pipe at: 1)  closeHandle: self  myEnd.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
myEnd ^myEnd! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified' !
new 
 self Win32API_Pipe_superInit_new.
 self Win32API_Pipe_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_Pipe := eos ! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_Pipe := mmd ! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_Pipe) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:48"!

Delta define: #Win32API_WinLibrary as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_WinLibrary EnclosingObjects_Win32API_WinLibrary') !


"September 28, 2010 -> 23:12:48"!

(Delta mirrorFor: #Win32API_WinLibrary)
comment: 
'A Windows DLL. Mostly the same as CLibrary but uses different function instances.'!


"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_WinLibrary) methodsFor: 'unclassified' !
Win32API_WinLibrary_superInit_name: theName 
super  name: theName.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_WinLibrary) methodsFor: 'unclassified' !
functionClass 
^ (EnclosingObjects_Win32API_WinLibrary at: 1)  Win32Function.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_WinLibrary) methodsFor: 'unclassified' !
Win32API_WinLibrary_1_init: theName 
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_WinLibrary) methodsFor: 'unclassified' !
name: theName 
 self Win32API_WinLibrary_superInit_name: theName.
 self Win32API_WinLibrary_1_init: theName.
^ self.

! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_WinLibrary) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_WinLibrary := eos ! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_WinLibrary) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_WinLibrary := mmd ! !

"September 28, 2010 -> 23:12:48"!

! (Delta mirrorFor: #Win32API_WinLibrary) classSide methodsFor: 'unclassified' !
name: theName 
^ self basicNew name: theName.

! !

"September 28, 2010 -> 23:12:48"!

Delta define: #Win32API_File as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: ' handle name') classVariables: 'MixinMetadata_Win32API_File EnclosingObjects_Win32API_File') !


"September 28, 2010 -> 23:12:48"!

(Delta mirrorFor: #Win32API_File)
comment: 
''!


"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
handle: handle_val handle := handle_val! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
name: name_val name := name_val! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
handle ^handle! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
Win32API_File_1_init 
 self name:nil.
 self handle:nil.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
Win32API_File_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
new 
 self Win32API_File_superInit_new.
 self Win32API_File_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
do: action 
^ (EnclosingObjects_Win32API_File at: 1)  CrLfFileStream  readOnlyFileNamed: self  name do: action.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
close 
 (EnclosingObjects_Win32API_File at: 1)  closeHandle: self  handle.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
deleteAfter: action 
|  result |
[ 
 result := self  do: action.
] ensure:[ 
 (EnclosingObjects_Win32API_File at: 1)  FileDirectory deleteFilePath: self  name.
].
^ result.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
name ^name! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified' !
openReadOnly 
^ (EnclosingObjects_Win32API_File at: 1)  CrLfFileStream readOnlyFileNamed: self  name.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_File := eos ! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_File := mmd ! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_File) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:49"!

Delta define: #Win32API_GDILibrary as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_GDILibrary EnclosingObjects_Win32API_GDILibrary') !


"September 28, 2010 -> 23:12:49"!

(Delta mirrorFor: #Win32API_GDILibrary)
comment: 
'Defines the functions of the GDI (the classic one, not GDI+) dll we are using.'!


"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
Win32API_GDILibrary_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
MoveToEx 
^ self  functionNamed:#'MoveToEx' argc:4.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
LineTo 
^ self  functionNamed:#'LineTo' argc:3.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
CreatePen 
^ self  functionNamed:#'CreatePen' argc:3.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
GetStockObject 
^ self  functionNamed:#'GetStockObject' argc:1.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
CreateFontA 
^ self  functionNamed:#'CreateFontA' argc:14.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
TextOutA 
^ self  functionNamed:#'TextOutA' argc:5.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
Ellipse 
^ self  functionNamed:#'Ellipse' argc:5.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
ExtTextOutA 
^ self  functionNamed:#'ExtTextOutA' argc:8.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
new 
 self Win32API_GDILibrary_superInit_new.
 self Win32API_GDILibrary_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
SelectObject 
^ self  functionNamed:#'SelectObject' argc:2.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
SetDCPenColor 
^ self  functionNamed:#'SetDCPenColor' argc:2.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
Win32API_GDILibrary_superInit_new 
super  name:'GDI'.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
Rectangle 
^ self  functionNamed:#'Rectangle' argc:5.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
SetTextColor 
^ self  functionNamed:#'SetTextColor' argc:2.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
CreateSolidBrush 
^ self  functionNamed:#'CreateSolidBrush' argc:1.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
exportFunctionsTo: capi 
 capi  exportFunction: self  CreateFontA as:#'CreateFont'; 
 exportFunction: self  CreatePen; 
 exportFunction: self  CreateSolidBrush; 
 exportFunction: self  DeleteObject; 
 exportFunction: self  Ellipse; 
  exportFunction: self  ExtTextOutA as:#'ExtTextOut'; 
 exportFunction: self  GetStockObject; 
  exportFunction: self  GetTextExtentPoint32A as:#'GetTextExtentPoint32'; 
 exportFunction: self  LineTo; 
 exportFunction: self  MoveToEx; 
 exportFunction: self  Polygon; 
 exportFunction: self  Rectangle; 
 exportFunction: self  SelectObject; 
 exportFunction: self  SetBkMode; 
 exportFunction: self  SetDCBrushColor; 
 exportFunction: self  SetDCPenColor; 
 exportFunction: self  SetTextColor; 
  exportFunction: self  TextOutA as:#'TextOut'.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
SetDCBrushColor 
^ self  functionNamed:#'SetDCBrushColor' argc:2.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
Polygon 
^ self  functionNamed:#'Polygon' argc:3.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
GetTextExtentPoint32A 
^ self  functionNamed:#'GetTextExtentPoint32A' argc:4.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
DeleteObject 
^ self  functionNamed:#'DeleteObject' argc:1.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified' !
SetBkMode 
^ self  functionNamed:#'SetBkMode' argc:2.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDILibrary := eos ! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDILibrary := mmd ! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_GDILibrary) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:49"!

Delta define: #Win32API_Win32Function as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_Win32Function EnclosingObjects_Win32API_Win32Function') !


"September 28, 2010 -> 23:12:49"!

(Delta mirrorFor: #Win32API_Win32Function)
comment: 
'A Windows function: same as CFunction but with some extra handy utilities.'!


"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue 
^ self unsignedValue ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
Win32API_Win32Function_superInit_library: theLibrary name: theName argc: numArgs 
super   library: theLibrary name: theName argc: numArgs.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 
^( self  unsignedValue: arg1 value: arg2 value: arg3) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 
^( self  unsignedValue: arg1 value: arg2) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg 
^( self unsignedValue: arg) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
library: theLibrary name: theName argc: numArgs 
 self  Win32API_Win32Function_superInit_library: theLibrary name: theName argc: numArgs.
 self  Win32API_Win32Function_1_init_library: theLibrary name: theName argc: numArgs.
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
Win32API_Win32Function_1_init_library: theLibrary name: theName argc: numArgs 
^ self.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified' !
boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 
^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10) ~=0.

! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_Win32Function := eos ! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_Win32Function := mmd ! !

"September 28, 2010 -> 23:12:49"!

! (Delta mirrorFor: #Win32API_Win32Function) classSide methodsFor: 'unclassified' !
library: theLibrary name: theName argc: numArgs 
^ self basicNew  library: theLibrary name: theName argc: numArgs.

! !

"September 28, 2010 -> 23:12:50"!

Delta define: #Win32API_Comdlg32Library as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_Comdlg32Library EnclosingObjects_Win32API_Comdlg32Library') !


"September 28, 2010 -> 23:12:50"!

(Delta mirrorFor: #Win32API_Comdlg32Library)
comment: 
'Common Dialog Boxes aka. comdlg32.dll.
http://msdn.microsoft.com/en-us/library/ms645524(VS.85).aspx'!


"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) methodsFor: 'unclassified' !
Win32API_Comdlg32Library_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) methodsFor: 'unclassified' !
GetSaveFileNameA 
^ self  functionNamed:#'GetSaveFileNameA' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) methodsFor: 'unclassified' !
Win32API_Comdlg32Library_superInit_new 
super  name:'comdlg32'.
^ self.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) methodsFor: 'unclassified' !
exportFunctionsTo: capi 
 capi  exportFunction: self  GetOpenFileNameA as:#'GetOpenFileName'; 
  exportFunction: self  GetSaveFileNameA as:#'GetSaveFileName'.
^ self.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) methodsFor: 'unclassified' !
GetOpenFileNameA 
^ self  functionNamed:#'GetOpenFileNameA' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) methodsFor: 'unclassified' !
new 
 self Win32API_Comdlg32Library_superInit_new.
 self Win32API_Comdlg32Library_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_Comdlg32Library := eos ! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_Comdlg32Library := mmd ! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_Comdlg32Library) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:50"!

Delta define: #Win32API_UserLibrary as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_UserLibrary EnclosingObjects_Win32API_UserLibrary') !


"September 28, 2010 -> 23:12:50"!

(Delta mirrorFor: #Win32API_UserLibrary)
comment: 
'Describe the class in this comment.'!


"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SystemParametersInfoA 
^ self  functionNamed:#'SystemParametersInfoA' argc:4.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
LoadCursorA 
^ self  functionNamed:#'LoadCursorA' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
CreatePopupMenu 
^ self  functionNamed:#'CreatePopupMenu' argc:0.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetForegroundWindow 
^ self  functionNamed:#'SetForegroundWindow' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
TrackPopupMenu 
^ self  functionNamed:#'TrackPopupMenu' argc:7.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
ReleaseCapture 
^ self  functionNamed:#'ReleaseCapture' argc:0.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetCursorPos 
^ self  functionNamed:#'GetCursorPos' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
DrawMenuBar 
^ self  functionNamed:#'DrawMenuBar' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
DispatchMessageA 
^ self  functionNamed:#'DispatchMessageA' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
EnumThreadWindows 
^ self  functionNamed:#'EnumThreadWindows' argc:3.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
ReleaseDC 
^ self  functionNamed:#'ReleaseDC' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetWindowLongA 
^ self  functionNamed:#'SetWindowLongA' argc:3.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
DestroyWindow 
^ self  functionNamed:#'DestroyWindow' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
new 
 self Win32API_UserLibrary_superInit_new.
 self Win32API_UserLibrary_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
FlashWindowEx 
^ self  functionNamed:#'FlashWindowEx' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
ShowWindow 
^ self  functionNamed:#'ShowWindow' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetClientRect 
^ self  functionNamed:#'GetClientRect' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetScrollInfo 
^ self  functionNamed:#'GetScrollInfo' argc:3.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
EnableWindow 
^ self  functionNamed:#'EnableWindow' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetDC 
^ self  functionNamed:#'GetDC' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
AppendMenuA 
^ self  functionNamed:#'AppendMenuA' argc:4.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
Win32API_UserLibrary_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
WindowFromPoint 
^ self  functionNamed:#'WindowFromPoint' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
AdjustWindowRect 
^ self  functionNamed:#'AdjustWindowRect' argc:3.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
EndPaint 
^ self  functionNamed:#'EndPaint' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
FlashWindow 
^ self  functionNamed:#'FlashWindow' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SendMessageA 
^ self  functionNamed:#'SendMessageA' argc:4.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
TrackMouseEvent 
^ self  functionNamed:#'TrackMouseEvent' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
BeginDeferWindowPos 
^ self  functionNamed:#'BeginDeferWindowPos' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
TranslateMessage 
^ self  functionNamed:#'TranslateMessage' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
UpdateLayeredWindow 
^ self  functionNamed:#'UpdateLayeredWindow' argc:9.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
UnregisterClassA 
^ self  functionNamed:#'UnregisterClassA' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
CreateWindowExA 
^ self  functionNamed:#'CreateWindowExA' argc:12.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
EndDeferWindowPos 
^ self  functionNamed:#'EndDeferWindowPos' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
PeekMessageA 
^ self  functionNamed:#'PeekMessageA' argc:5.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
InvalidateRect 
^ self  functionNamed:#'InvalidateRect' argc:3.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetScrollInfo 
^ self  functionNamed:#'SetScrollInfo' argc:4.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetSystemMetrics 
^ self  functionNamed:#'GetSystemMetrics' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
FindWindowA 
^ self  functionNamed:#'FindWindowA' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
DeferWindowPos 
^ self  functionNamed:#'DeferWindowPos' argc:8.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
DrawTextA 
^ self  functionNamed:#'DrawTextA' argc:5.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
exportFunctionsTo: capi 
 capi exportFunction: self  AdjustWindowRect; 
 exportFunction: self  AnimateWindow; 
  exportFunction: self  AppendMenuA as:#'AppendMenu'; 
 exportFunction: self  BeginDeferWindowPos; 
 exportFunction: self  BeginPaint; 
 exportFunction: self  CreateMenu; 
 exportFunction: self  CreatePopupMenu; 
  exportFunction: self  CreateWindowExA as:#'CreateWindowEx'; 
  exportFunction: self  DefWindowProcA as:#'DefWindowProc'; 
 exportFunction: self  DeferWindowPos; 
 exportFunction: self  DestroyWindow; 
  exportFunction: self  DispatchMessageA as:#'DispatchMessage'; 
 exportFunction: self  DrawMenuBar; 
  exportFunction: self  DrawTextA as:#'DrawText'; 
 exportFunction: self  EnableWindow; 
 exportFunction: self  EndDeferWindowPos; 
 exportFunction: self  EndPaint; 
 exportFunction: self  EnumThreadWindows; 
 exportFunction: self  FillRect; 
  exportFunction: self  FindWindowA as:#'FindWindow'; 
 exportFunction: self  FlashWindow; 
 exportFunction: self  FlashWindowEx; 
 exportFunction: self  GetAncestor; 
 exportFunction: self  GetClientRect; 
 exportFunction: self  GetCursorPos; 
 exportFunction: self  GetDC; 
 exportFunction: self  GetForegroundWindow; 
 exportFunction: self  GetKeyState; 
  exportFunction: self  GetMessageA as:#'GetMessage'; 
 exportFunction: self  GetScrollInfo; 
 exportFunction: self  GetSystemMetrics; 
  exportFunction: self  GetWindowLongA as:#'GetWindowLong'; 
 exportFunction: self  InvalidateRect; 
 exportFunction: self  IsWindow; 
 exportFunction: self  IsWindowVisible; 
  exportFunction: self  LoadCursorA as:#'LoadCursor'; 
  exportFunction: self  LoadIconA as:#'LoadIcon'; 
 exportFunction: self  MessageBeep; 
 exportFunction: self  MoveWindow; 
  exportFunction: self  PeekMessageA as:#'PeekMessage'; 
 exportFunction: self  PostQuitMessage; 
  exportFunction: self  RegisterClassA as:#'RegisterClass'; 
 exportFunction: self  ReleaseCapture; 
 exportFunction: self  ReleaseDC; 
  exportFunction: self  SendMessageA as:#'SendMessage'; 
 exportFunction: self  SetActiveWindow; 
 exportFunction: self  SetCapture; 
 exportFunction: self  SetCursorPos; 
 exportFunction: self  SetForegroundWindow; 
 exportFunction: self  SetLayeredWindowAttributes; 
 exportFunction: self  SetMenu; 
 exportFunction: self  SetScrollInfo; 
  exportFunction: self  SetWindowLongA as:#'SetWindowLong'; 
  exportFunction: self  SetWindowTextA as:#'SetWindowText'; 
 exportFunction: self  ShowWindow; 
  exportFunction: self  SystemParametersInfoA as:#'SystemParametersInfo'; 
  exportFunction: self  TabbedTextOutA as:#'TabbedTextOut'; 
 exportFunction: self  TrackMouseEvent; 
 exportFunction: self  TrackPopupMenu; 
 exportFunction: self  TranslateMessage; 
 exportFunction: self  UpdateWindow; 
 exportFunction: self  UpdateLayeredWindow; 
  exportFunction: self  UnregisterClassA as:#'UnregisterClass'; 
 exportFunction: self  WindowFromPoint.
^ self.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetKeyState 
^ self  functionNamed:#'GetKeyState' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
FillRect 
^ self  functionNamed:#'FillRect' argc:3.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetAncestor 
^ self  functionNamed:#'GetAncestor' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetCapture 
^ self  functionNamed:#'SetCapture' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
LoadIconA 
^ self  functionNamed:#'LoadIconA' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetWindowLongA 
^ self  functionNamed:#'GetWindowLongA' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
DefWindowProcA 
^ self  functionNamed:#'DefWindowProcA' argc:4.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
CreateMenu 
^ self  functionNamed:#'CreateMenu' argc:0.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetForegroundWindow 
^ self  functionNamed:#'GetForegroundWindow' argc:0.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
MessageBeep 
^ self  functionNamed:#'MessageBeep' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
IsWindow 
^ self  functionNamed:#'IsWindow' argc:1.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
AnimateWindow 
^ self  functionNamed:#'AnimateWindow' argc:3.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetWindowTextA 
^ self  functionNamed:#'SetWindowTextA' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetCursorPos 
^ self  functionNamed:#'SetCursorPos' argc:2.

! !

"September 28, 2010 -> 23:12:50"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
PostQuitMessage 
^ self  functionNamed:#'PostQuitMessage' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
IsWindowVisible 
^ self  functionNamed:#'IsWindowVisible' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
GetMessageA 
^ self  functionNamed:#'GetMessageA' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
BeginPaint 
^ self  functionNamed:#'BeginPaint' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
TabbedTextOutA 
^ self  functionNamed:#'TabbedTextOutA' argc:8.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
Win32API_UserLibrary_superInit_new 
super  name:'User'.
^ self.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
MoveWindow 
^ self  functionNamed:#'MoveWindow' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
RegisterClassA 
^ self  functionNamed:#'RegisterClassA' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetActiveWindow 
^ self  functionNamed:#'SetActiveWindow' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
UpdateWindow 
^ self  functionNamed:#'UpdateWindow' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetLayeredWindowAttributes 
^ self  functionNamed:#'SetLayeredWindowAttributes' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified' !
SetMenu 
^ self  functionNamed:#'SetMenu' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_UserLibrary := eos ! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_UserLibrary := mmd ! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_UserLibrary) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:51"!

Delta define: #Win32API_GDIplusLibrary as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32API_GDIplusLibrary EnclosingObjects_Win32API_GDIplusLibrary') !


"September 28, 2010 -> 23:12:51"!

(Delta mirrorFor: #Win32API_GDIplusLibrary)
comment: 
'Provides access to functions of GDI+ flat API. See GDIplus class for a higher-level wrapper similar to Microsoft''s C++ API. Note that the functions of this library are NOT imported into the containing Win32API instance.'!


"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreateFromHDC 
^ self  functionNamed:#'GdipCreateFromHDC' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipFillEllipseI 
^ self  functionNamed:#'GdipFillEllipseI' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreateBitmapFromScan0 
^ self  functionNamed:#'GdipCreateBitmapFromScan0' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreateLineBrushI 
^ self  functionNamed:#'GdipCreateLineBrushI' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDrawPolygonI 
^ self  functionNamed:#'GdipDrawPolygonI' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
Win32API_GDIplusLibrary_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDrawEllipseI 
^ self  functionNamed:#'GdipDrawEllipseI' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDrawLineI 
^ self  functionNamed:#'GdipDrawLineI' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
new 
 self Win32API_GDIplusLibrary_superInit_new.
 self Win32API_GDIplusLibrary_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDrawRectangleI 
^ self  functionNamed:#'GdipDrawRectangleI' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDeletePen 
^ self  functionNamed:#'GdipDeletePen' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipResetClip 
^ self  functionNamed:#'GdipResetClip' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreateSolidFill 
^ self  functionNamed:#'GdipCreateSolidFill' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreatePen2 
^ self  functionNamed:#'GdipCreatePen2' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipGetDC 
^ self  functionNamed:#'GdipGetDC' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreateCachedBitmap 
^ self  functionNamed:#'GdipCreateCachedBitmap' argc:3.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDisposeImage 
^ self  functionNamed:#'GdipDisposeImage' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipFillRectangleI 
^ self  functionNamed:#'GdipFillRectangleI' argc:6.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDrawCachedBitmap 
^ self  functionNamed:#'GdipDrawCachedBitmap' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDrawImageI 
^ self  functionNamed:#'GdipDrawImageI' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDeleteBrush 
^ self  functionNamed:#'GdipDeleteBrush' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipReleaseDC 
^ self  functionNamed:#'GdipReleaseDC' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
exportFunctionsTo: capi 
 capi exportFunction: self  GdipCreateBitmapFromGraphics; 
 exportFunction: self  GdipCreateBitmapFromScan0; 
 exportFunction: self  GdipCreateCachedBitmap; 
 exportFunction: self  GdipCreateFromHDC; 
 exportFunction: self  GdipCreateFromHWND; 
 exportFunction: self  GdipCreateLineBrushI; 
 exportFunction: self  GdipCreatePen1; 
 exportFunction: self  GdipCreatePen2; 
 exportFunction: self  GdipCreateSolidFill; 
 exportFunction: self  GdipDeleteBrush; 
 exportFunction: self  GdipDeleteCachedBitmap; 
 exportFunction: self  GdipDeleteGraphics; 
 exportFunction: self  GdipDeletePen; 
 exportFunction: self  GdipDisposeImage; 
 exportFunction: self  GdipDrawCachedBitmap; 
 exportFunction: self  GdipDrawEllipseI; 
 exportFunction: self  GdipDrawImageI; 
 exportFunction: self  GdipDrawLineI; 
 exportFunction: self  GdipDrawRectangleI; 
 exportFunction: self  GdipFillEllipseI; 
 exportFunction: self  GdipFillRectangleI; 
 exportFunction: self  GdipFlush; 
 exportFunction: self  GdipGetDC; 
 exportFunction: self  GdipGetImageGraphicsContext; 
 exportFunction: self  GdipReleaseDC; 
 exportFunction: self  GdipSetCompositingMode; 
 exportFunction: self  GdipSetCompositingQuality; 
 exportFunction: self  GdipSetSmoothingMode; 
 exportFunction: self  GdiplusShutdown; 
 exportFunction: self  GdiplusStartup.
^ self.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdiplusStartup 
^ self  functionNamed:#'GdiplusStartup' argc:3.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDeleteGraphics 
^ self  functionNamed:#'GdipDeleteGraphics' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipGetImageGraphicsContext 
^ self  functionNamed:#'GdipGetImageGraphicsContext' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipGraphicsClear 
^ self  functionNamed:#'GdipGraphicsClear' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipDeleteCachedBitmap 
^ self  functionNamed:#'GdipDeleteCachedBitmap' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreateBitmapFromGraphics 
^ self  functionNamed:#'GdipCreateBitmapFromGraphics' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreatePen1 
^ self  functionNamed:#'GdipCreatePen1' argc:4.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipSetCompositingQuality 
^ self  functionNamed:#'GdipSetCompositingQuality' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipCreateFromHWND 
^ self  functionNamed:#'GdipCreateFromHWND' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipSetSmoothingMode 
^ self  functionNamed:#'GdipSetSmoothingMode' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipSetCompositingMode 
^ self  functionNamed:#'GdipSetCompositingMode' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipFillPolygonI 
^ self  functionNamed:#'GdipFillPolygonI' argc:5.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdiplusShutdown 
^ self  functionNamed:#'GdiplusShutdown' argc:1.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
Win32API_GDIplusLibrary_superInit_new 
super  name:'gdiplus'.
^ self.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified' !
GdipFlush 
^ self  functionNamed:#'GdipFlush' argc:2.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32API_GDIplusLibrary := eos ! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32API_GDIplusLibrary := mmd ! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32API_GDIplusLibrary) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:51"!

Delta define: #Win32apiCHARFORMAT as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiCHARFORMAT EnclosingObjects_Win32apiCHARFORMAT') !


"September 28, 2010 -> 23:12:51"!

(Delta mirrorFor: #Win32apiCHARFORMAT)
comment: 
'typedef struct _charformat {
    UINT cbSize;
    DWORD dwMask;
    DWORD dwEffects;
    LONG yHeight;
    LONG yOffset;
    COLORREF crTextColor;
    BYTE bCharSet;
    BYTE bPitchAndFamily;
    TCHAR szFaceName[LF_FACESIZE];
} CHARFORMAT;
#define LF_FACESIZE 32

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
yOffset: newValue 
^ self  signedLongAt:17 put: newValue.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
bCharSet: newValue 
^ self  unsignedByteAt:25 put: newValue.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
Win32apiCHARFORMAT_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
crTextColor: newValue 
^ self  unsignedLongAt:21 put: newValue.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
cbSize: theSize 
^ self  signedLongAt:1 put: theSize.

! !

"September 28, 2010 -> 23:12:51"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
cbSize 
^ self signedLongAt:1.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
dwMask: newValue 
 self  unsignedLongAt:5 put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
setDwEffectsBits: bits 
 self  dwEffects:( self  dwEffects | bits).
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
Win32apiCHARFORMAT_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
crTextColor 
^ self unsignedLongAt:21.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
dwMask 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
yOffset 
^ self signedLongAt:17.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
new 
 self Win32apiCHARFORMAT_superInit_new.
 self Win32apiCHARFORMAT_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
setDwMaskBits: bits 
 self  dwMask:( self  dwMask | bits).
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
yHeight 
^ self signedLongAt:13.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
bPitchAndFamily: newValue 
^ self  unsignedByteAt:26 put: newValue.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
bCharSet 
^ self unsignedByteAt:25.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
dwEffects: newValue 
 self  unsignedLongAt:9 put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
bPitchAndFamily 
^ self unsignedByteAt:26.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
yHeight: newValue 
^ self  signedLongAt:13 put: newValue.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
initialize 
super  initialize.
 self  cbSize: self class dataSize.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) methodsFor: 'unclassified' !
dwEffects 
^ self unsignedLongAt:9.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiCHARFORMAT := eos ! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiCHARFORMAT := mmd ! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) classSide methodsFor: 'unclassified' !
dataSize 
^6 *4 +4 +32.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:52"!

Delta define: #Win32apiCHARFORMAT2 as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiCHARFORMAT2 EnclosingObjects_Win32apiCHARFORMAT2') !


"September 28, 2010 -> 23:12:52"!

(Delta mirrorFor: #Win32apiCHARFORMAT2)
comment: 
'typedef struct _charformat2 {
    UINT cbSize;
    DWORD dwMask;
    DWORD dwEffects;
    LONG yHeight;
    LONG yOffset;
    COLORREF crTextColor;
    BYTE bCharSet;
    BYTE bPitchAndFamily;
    TCHAR szFaceName[LF_FACESIZE];
    WORD wWeight;
    SHORT sSpacing;
    COLORREF crBackColor;
    LCID lcid;
    DWORD dwReserved;
    SHORT sStyle;
    WORD wKerning;
    BYTE bUnderlineType;
    BYTE bAnimation;
    BYTE bRevAuthor;
    BYTE bReserved1;
} CHARFORMAT2;'!


"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) methodsFor: 'unclassified' !
wWeight 
^ self unsignedShortAt:59.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) methodsFor: 'unclassified' !
Win32apiCHARFORMAT2_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) methodsFor: 'unclassified' !
crBackColor: newValue 
^ self  unsignedLongAt:63 put: newValue.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) methodsFor: 'unclassified' !
sSpacing 
^ self signedShortAt:61.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) methodsFor: 'unclassified' !
crBackColor 
^ self unsignedLongAt:63.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) methodsFor: 'unclassified' !
Win32apiCHARFORMAT2_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) methodsFor: 'unclassified' !
new 
 self Win32apiCHARFORMAT2_superInit_new.
 self Win32apiCHARFORMAT2_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiCHARFORMAT2 := eos ! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiCHARFORMAT2 := mmd ! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) classSide methodsFor: 'unclassified' !
dataSize 
^super  dataSize +24.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARFORMAT2) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:52"!

Delta define: #Win32apiCHARRANGE as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiCHARRANGE EnclosingObjects_Win32apiCHARRANGE') !


"September 28, 2010 -> 23:12:52"!

(Delta mirrorFor: #Win32apiCHARRANGE)
comment: 
'typedef struct _charrange {
    LONG cpMin;
    LONG cpMax;
} CHARRANGE;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) methodsFor: 'unclassified' !
Win32apiCHARRANGE_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) methodsFor: 'unclassified' !
cpMax 
^ self signedLongAt:5.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) methodsFor: 'unclassified' !
cpMin 
^ self signedLongAt:1.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) methodsFor: 'unclassified' !
cpMax: value 
 self  signedLongAt:5 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) methodsFor: 'unclassified' !
cpMin: value 
 self  signedLongAt:1 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) methodsFor: 'unclassified' !
Win32apiCHARRANGE_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) methodsFor: 'unclassified' !
new 
 self Win32apiCHARRANGE_superInit_new.
 self Win32apiCHARRANGE_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiCHARRANGE := eos ! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiCHARRANGE := mmd ! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) classSide methodsFor: 'unclassified' !
dataSize 
^8.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiCHARRANGE) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:52"!

Delta define: #Win32apiFINDDATA as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiFINDDATA EnclosingObjects_Win32apiFINDDATA') !


"September 28, 2010 -> 23:12:52"!

(Delta mirrorFor: #Win32apiFINDDATA)
comment: 
'typedef struct _WIN32_FIND_DATA {
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  TCHAR cFileName[MAX_PATH];
  TCHAR cAlternateFileName[14];
} WIN32_FIND_DATA, 
 *PWIN32_FIND_DATA, 
 *LPWIN32_FIND_DATA;'!


"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwReserved0: newValue 
^ self  unsignedLongAt: self  dwReserved0Offset put: newValue.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
Win32apiFINDDATA_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftLastWriteTimeOffset 
^13.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
Win32apiFINDDATA_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
nFileSizeLowOffset 
^21.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftLastAccessTime: newValue 
^ self  unsignedLongAt: self  ftLastAccessTimeOffset put: newValue.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
new 
 self Win32apiFINDDATA_superInit_new.
 self Win32apiFINDDATA_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwReserved0 
^ self unsignedLongAt: self  dwReserved0Offset.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwFileAttributesOffset 
^1.

! !

"September 28, 2010 -> 23:12:52"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
nFileSizeLow: newValue 
^ self  unsignedLongAt: self  nFileSizeLowOffset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
cAlternateFileName: newValue 
^ self  unsignedLongAt: self  cAlternateFileNameOffset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftCreationTime 
^ self unsignedLongAt: self  ftCreationTimeOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftLastAccessTimeOffset 
^9.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwFileAttributes: newValue 
^ self  unsignedLongAt: self  dwFileAttributesOffset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
nFileSizeHighOffset 
^17.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftCreationTimeOffset 
^5.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwReserved0Offset 
^25.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftCreationTime: newValue 
^ self  unsignedLongAt: self  ftCreationTimeOffset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
cAlternateFileName 
^ self unsignedLongAt: self  cAlternateFileNameOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwReserved1: newValue 
^ self  unsignedLongAt: self  dwReserved1Offset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwReserved1Offset 
^29.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
nFileSizeLow 
^ self unsignedLongAt: self  nFileSizeLowOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
cFileName 
^ self unsignedLongAt: self  cFileNameOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftLastWriteTime: newValue 
^ self  unsignedLongAt: self  ftLastWriteTimeOffset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
cFileNameOffset 
^33.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
cAlternateFileNameOffset 
^37.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwReserved1 
^ self unsignedLongAt: self  dwReserved1Offset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftLastAccessTime 
^ self unsignedLongAt: self  ftLastAccessTimeOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
ftLastWriteTime 
^ self unsignedLongAt: self  ftLastWriteTimeOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
cFileName: newValue 
^ self  unsignedLongAt: self  cFileNameOffset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
dwFileAttributes 
^ self unsignedLongAt: self  dwFileAttributesOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
nFileSizeHigh 
^ self unsignedLongAt: self  nFileSizeHighOffset.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) methodsFor: 'unclassified' !
nFileSizeHigh: newValue 
^ self  unsignedLongAt: self  nFileSizeHighOffset put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiFINDDATA := eos ! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiFINDDATA := mmd ! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) classSide methodsFor: 'unclassified' !
dataSize 
^40.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) classSide methodsFor: 'unclassified' !
fields 
^( self Array new:10)  at:1 put:'dwFileAttributes'; 
  at:2 put:'ftCreationTime'; 
  at:3 put:'ftLastAccessTime'; 
  at:4 put:'ftLastWriteTime'; 
  at:5 put:'nFileSizeHigh'; 
  at:6 put:'nFileSizeLow'; 
  at:7 put:'dwReserved0'; 
  at:8 put:'dwReserved1'; 
  at:9 put:'cFileName'; 
  at:10 put:'cAlternateFileName'; 
 yourself.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) classSide methodsFor: 'unclassified' !
typedefName 
^'FIND_DATA'.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiFINDDATA) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:53"!

Delta define: #Win32apiGRADIENTRECT as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiGRADIENTRECT EnclosingObjects_Win32apiGRADIENTRECT') !


"September 28, 2010 -> 23:12:53"!

(Delta mirrorFor: #Win32apiGRADIENTRECT)
comment: 
'typedef struct _GRADIENT_RECT
{
    ULONG UpperLeft;
    ULONG LowerRight;
}GRADIENT_RECT,*PGRADIENT_RECT,*LPGRADIENT_RECT;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) methodsFor: 'unclassified' !
Win32apiGRADIENTRECT_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) methodsFor: 'unclassified' !
LowerRight: value 
 self  unsignedLongAt:5 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) methodsFor: 'unclassified' !
UpperLeft: value 
 self  unsignedLongAt:1 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) methodsFor: 'unclassified' !
Win32apiGRADIENTRECT_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) methodsFor: 'unclassified' !
new 
 self Win32apiGRADIENTRECT_superInit_new.
 self Win32apiGRADIENTRECT_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiGRADIENTRECT := eos ! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiGRADIENTRECT := mmd ! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) classSide methodsFor: 'unclassified' !
dataSize 
^8.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiGRADIENTRECT) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:53"!

Delta define: #Win32apiMSG as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiMSG EnclosingObjects_Win32apiMSG') !


"September 28, 2010 -> 23:12:53"!

(Delta mirrorFor: #Win32apiMSG)
comment: 
'typedef struct {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
    DWORD time;
    POINT pt;
} MSG, *PMSG;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
Win32apiMSG_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
message 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
wParam 
^ self unsignedLongAt:9.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
hwnd 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
lParam 
^ self unsignedLongAt:13.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
pt 
^ self unsignedLongAt:21.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
time 
^ self unsignedLongAt:17.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
Win32apiMSG_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) methodsFor: 'unclassified' !
new 
 self Win32apiMSG_superInit_new.
 self Win32apiMSG_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiMSG := eos ! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiMSG := mmd ! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) classSide methodsFor: 'unclassified' !
dataSize 
^28.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSG) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:53"!

Delta define: #Win32apiMSGFILTER as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiMSGFILTER EnclosingObjects_Win32apiMSGFILTER') !


"September 28, 2010 -> 23:12:53"!

(Delta mirrorFor: #Win32apiMSGFILTER)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
msg: newValue 
^ self  unsignedLongAt:13 put: newValue.

! !

"September 28, 2010 -> 23:12:53"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
Win32apiMSGFILTER_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
msg 
^ self unsignedLongAt:13.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
lParam: newValue 
^ self  unsignedLongAt:21 put: newValue.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
new 
 self Win32apiMSGFILTER_superInit_new.
 self Win32apiMSGFILTER_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
lParam 
^ self unsignedLongAt:21.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
wParam: newValue 
^ self  unsignedLongAt:17 put: newValue.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
Win32apiMSGFILTER_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) methodsFor: 'unclassified' !
wParam 
^ self unsignedLongAt:17.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiMSGFILTER := eos ! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiMSGFILTER := mmd ! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) classSide methodsFor: 'unclassified' !
dataSize 
^super  dataSize +12.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiMSGFILTER) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:54"!

Delta define: #Win32apiNMHDR as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiNMHDR EnclosingObjects_Win32apiNMHDR') !


"September 28, 2010 -> 23:12:54"!

(Delta mirrorFor: #Win32apiNMHDR)
comment: 
'typedef struct tagNMHDR {
    HWND hwndFrom;
    UINT_PTR idFrom;
    UINT code;
} NMHDR;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) methodsFor: 'unclassified' !
Win32apiNMHDR_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) methodsFor: 'unclassified' !
idFrom 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) methodsFor: 'unclassified' !
Win32apiNMHDR_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) methodsFor: 'unclassified' !
hwndFrom 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) methodsFor: 'unclassified' !
code 
^ self unsignedLongAt:9.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) methodsFor: 'unclassified' !
new 
 self Win32apiNMHDR_superInit_new.
 self Win32apiNMHDR_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiNMHDR := eos ! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiNMHDR := mmd ! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) classSide methodsFor: 'unclassified' !
dataSize 
^12.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiNMHDR) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:54"!

Delta define: #Win32apiOPENFILENAME as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiOPENFILENAME EnclosingObjects_Win32apiOPENFILENAME') !


"September 28, 2010 -> 23:12:54"!

(Delta mirrorFor: #Win32apiOPENFILENAME)
comment: 
'http://msdn.microsoft.com/en-us/library/ms646839.aspx

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
hwndOwner: newValue 
 self  unsignedLongAt: self hwndOwnerOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFileExtension: newValue 
 self  unsignedLongAt: self nFileExtensionOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxCustFilter: newValue 
 self  unsignedLongAt: self nMaxCustFilterOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
hInstance 
^ self unsignedLongAt: self hInstanceOffset.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
dwReserved 
^ self unsignedLongAt: self dwReservedOffset.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrInitialDir 
^ self unsignedLongAt: self lpstrInitialDirOffset.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFileOffset: newValue 
 self  unsignedLongAt: self nFileOffsetOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
new 
 self Win32apiOPENFILENAME_superInit_new.
 self Win32apiOPENFILENAME_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpfnHook 
^ self unsignedLongAt: self lpfnHookOffset.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrDefExt: newValue 
 self  unsignedLongAt: self lpstrDefExtOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
hwndOwner 
^ self unsignedLongAt: self hwndOwnerOffset.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
fileName 
^( self Alien forPointer:( self unsignedLongAt: self lpstrFileOffset)) strcpyUTF8.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
pvReservedOffset 
^81.

! !

"September 28, 2010 -> 23:12:54"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFilterIndex 
^ self unsignedLongAt: self nFilterIndexOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFileTitle: newValue 
 self  unsignedLongAt: self lpstrFileTitleOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxFileTitle 
^ self unsignedLongAt: self nMaxFileTitleOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpTemplateName 
^ self unsignedLongAt: self lpTemplateNameOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
free 
 self class primFree:( self unsignedLongAt: self lpstrFileOffset).
super  free.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFilter 
^ self unsignedLongAt: self lpstrFilterOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFilterOffset 
^13.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxFile 
^ self unsignedLongAt: self nMaxFileOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
hInstance: newValue 
 self  unsignedLongAt: self hInstanceOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFile: newValue 
 self  unsignedLongAt: self lpstrFileOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFileOffsetOffset 
^57.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpTemplateName: newValue 
 self  unsignedLongAt: self lpTemplateNameOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFileExtensionOffset 
^61.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
FlagsExOffset 
^89.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxFileTitle: newValue 
 self  unsignedLongAt: self nMaxFileTitleOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
Win32apiOPENFILENAME_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxFile: newValue 
 self  unsignedLongAt: self nMaxFileOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lCustDataOffset 
^69.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lCustData: newValue 
 self  unsignedLongAt: self lCustDataOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxFileOffset 
^33.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
dwReserved: newValue 
 self  unsignedLongAt: self dwReservedOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
hwndOwnerOffset 
^5.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrDefExtOffset 
^65.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFileOffset 
^29.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxFileTitleOffset 
^41.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrTitleOffset 
^49.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFileOffset 
^ self unsignedLongAt: self nFileOffsetOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFilterIndexOffset 
^25.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
Flags: newValue 
 self  unsignedLongAt: self FlagsOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lStructSizeOffset 
^1.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
dwReservedOffset 
^85.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
pvReserved 
^ self unsignedLongAt: self pvReservedOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFilterIndex: newValue 
 self  unsignedLongAt: self nFilterIndexOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpTemplateNameOffset 
^77.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpfnHookOffset 
^73.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nFileExtension 
^ self unsignedLongAt: self nFileExtensionOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFileTitle 
^ self unsignedLongAt: self lpstrFileTitleOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrInitialDir: newValue 
 self  unsignedLongAt: self lpstrInitialDirOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFileTitleOffset 
^37.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxCustFilterOffset 
^21.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpfnHook: newValue 
 self  unsignedLongAt: self lpfnHookOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrDefExt 
^ self unsignedLongAt: self lpstrDefExtOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
Win32apiOPENFILENAME_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lStructSize: newValue 
 self  unsignedLongAt: self lStructSizeOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFilter: newValue 
 self  unsignedLongAt: self lpstrFilterOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrTitle: newValue 
 self  unsignedLongAt: self lpstrTitleOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
nMaxCustFilter 
^ self unsignedLongAt: self nMaxCustFilterOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lCustData 
^ self unsignedLongAt: self lCustDataOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
FlagsOffset 
^53.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lStructSize 
^ self unsignedLongAt: self lStructSizeOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
initialize 
 self  unsignedLongAt: self lStructSizeOffset put: self class dataSize; 
  unsignedLongAt: self lpstrFileOffset put:( self class Ccalloc: self MAXPATH); 
  unsignedLongAt: self nMaxFileOffset put: self MAXPATH.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrCustomFilter: newValue 
 self  unsignedLongAt: self lpstrCustomFilterOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrTitle 
^ self unsignedLongAt: self lpstrTitleOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
hInstanceOffset 
^9.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
FlagsEx: newValue 
 self  unsignedLongAt: self FlagsExOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrCustomFilterOffset 
^17.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
MAXPATH 
^260.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrInitialDirOffset 
^45.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrFile 
^ self unsignedLongAt: self lpstrFileOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
Flags 
^ self unsignedLongAt: self FlagsOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
pvReserved: newValue 
 self  unsignedLongAt: self pvReservedOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
lpstrCustomFilter 
^ self unsignedLongAt: self lpstrCustomFilterOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) methodsFor: 'unclassified' !
FlagsEx 
^ self unsignedLongAt: self FlagsExOffset.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiOPENFILENAME := eos ! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiOPENFILENAME := mmd ! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) classSide methodsFor: 'unclassified' !
dataSize 
^88.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) classSide methodsFor: 'unclassified' !
addAccessors 
|  fields |
 fields :=( self Array new:23)  at:1 put:'lStructSize'; 
  at:2 put:'hwndOwner'; 
  at:3 put:'hInstance'; 
  at:4 put:'lpstrFilter'; 
  at:5 put:'lpstrCustomFilter'; 
  at:6 put:'nMaxCustFilter'; 
  at:7 put:'nFilterIndex'; 
  at:8 put:'lpstrFile'; 
  at:9 put:'nMaxFile'; 
  at:10 put:'lpstrFileTitle'; 
  at:11 put:'nMaxFileTitle'; 
  at:12 put:'lpstrInitialDir'; 
  at:13 put:'lpstrTitle'; 
  at:14 put:'Flags'; 
  at:15 put:'nFileOffset'; 
  at:16 put:'nFileExtension'; 
  at:17 put:'lpstrDefExt'; 
  at:18 put:'lCustData'; 
  at:19 put:'lpfnHook'; 
  at:20 put:'lpTemplateName'; 
  at:21 put:'pvReserved'; 
  at:22 put:'dwReserved'; 
  at:23 put:'FlagsEx'; 
 yourself.
 fields withIndexDo:[ : ea : i | 
|  offset |
 offset := i - 1 *4 +1.
 self  compile: ea ,'Offset 
	^' , offset asString classified:'field offsets' withStamp:nil notifying:nil.
 self  compile: ea ,': newValue
	self unsignedLongAt: self ' , ea ,'Offset put: newValue' classified:'accessing' withStamp:nil notifying:nil.
 self  compile: ea ,'
	^self unsignedLongAt: self ' , ea ,'Offset' classified:'accessing' withStamp:nil notifying:nil.
].
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiOPENFILENAME) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:55"!

Delta define: #Win32apiPAINTSTRUCT as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiPAINTSTRUCT EnclosingObjects_Win32apiPAINTSTRUCT') !


"September 28, 2010 -> 23:12:55"!

(Delta mirrorFor: #Win32apiPAINTSTRUCT)
comment: 
'typedef struct tagPAINTSTRUCT { 
  HDC  hdc; 
  BOOL fErase; 
  RECT rcPaint; 
  BOOL fRestore; 
  BOOL fIncUpdate; 
  BYTE rgbReserved[32]; 
} PAINTSTRUCT, *PPAINTSTRUCT;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) methodsFor: 'unclassified' !
Win32apiPAINTSTRUCT_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:55"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) methodsFor: 'unclassified' !
hdc 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) methodsFor: 'unclassified' !
paintRectangle 
^( self signedLongAt:9) @( self signedLongAt:13) corner:(( self signedLongAt:17) @( self signedLongAt:21)).

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) methodsFor: 'unclassified' !
Win32apiPAINTSTRUCT_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) methodsFor: 'unclassified' !
new 
 self Win32apiPAINTSTRUCT_superInit_new.
 self Win32apiPAINTSTRUCT_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiPAINTSTRUCT := eos ! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiPAINTSTRUCT := mmd ! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) classSide methodsFor: 'unclassified' !
dataSize 
^64.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPAINTSTRUCT) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:56"!

Delta define: #Win32apiPARAFORMAT as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiPARAFORMAT EnclosingObjects_Win32apiPARAFORMAT') !


"September 28, 2010 -> 23:12:56"!

(Delta mirrorFor: #Win32apiPARAFORMAT)
comment: 
'typedef struct _paraformat {
    UINT cbSize;
    DWORD dwMask;
    WORD wNumbering;
    WORD wReserved;
    LONG dxStartIndent;
    LONG dxRightIndent;
    LONG dxOffset;
    WORD wAlignment;
    SHORT cTabCount;
    LONG rgxTabs[MAX_TAB_STOPS];
} PARAFORMAT;

#define MAX_TAB_STOPS 32

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
Win32apiPARAFORMAT_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
cTabCount 
^ self signedShortAt:27.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
cbSize 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
rgxTabsAt: index1based put: newValue 
 self  signedLongAt:29 +( index1based - 1 *4) put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
new 
 self Win32apiPARAFORMAT_superInit_new.
 self Win32apiPARAFORMAT_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
dxOffset 
^ self unsignedLongAt:21.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
Win32apiPARAFORMAT_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
initialize 
super  initialize.
 self  cbSize: self class dataSize.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
dwMask: newValue 
 self  unsignedLongAt:5 put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
dxStartIndent 
^ self unsignedLongAt:13.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
wAlignment 
^ self unsignedShortAt:25.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
rgxTabsAt: index1based 
^ self signedLongAt:(29 +( index1based - 1 *4)).

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
cTabCount: newTabCount 
 self  signedShortAt:27 put: newTabCount.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
cbSize: anInteger 
 self  unsignedLongAt:1 put: anInteger.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
dwMask 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
dxRightIndent 
^ self unsignedLongAt:17.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
wNumbering 
^ self unsignedShortAt:9.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) methodsFor: 'unclassified' !
wReserved 
^ self unsignedShortAt:11.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiPARAFORMAT := eos ! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiPARAFORMAT := mmd ! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) classSide methodsFor: 'unclassified' !
MAX_TAB_STOPS 
^32.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) classSide methodsFor: 'unclassified' !
dataSize 
^28 +(32 *4).

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPARAFORMAT) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:56"!

Delta define: #Win32apiPOINT as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiPOINT EnclosingObjects_Win32apiPOINT') !


"September 28, 2010 -> 23:12:56"!

(Delta mirrorFor: #Win32apiPOINT)
comment: 
'typedef struct tagPOINT { 
  LONG x; 
  LONG y; 
} POINT, *PPOINT; 

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
y: int 
 self  signedLongAt:5 put: int.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
Win32apiPOINT_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
x 
^ self signedLongAt:1.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
Win32apiPOINT_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
initializeFromPoint: point 
 self  x: point x.
 self  y: point y.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
x: int 
 self  signedLongAt:1 put: int.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
y 
^ self signedLongAt:5.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
asPoint 
^ self  x @ self  y.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) methodsFor: 'unclassified' !
new 
 self Win32apiPOINT_superInit_new.
 self Win32apiPOINT_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiPOINT := eos ! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiPOINT := mmd ! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) classSide methodsFor: 'unclassified' !
dataSize 
^8.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPOINT) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:56"!

Delta define: #Win32apiPROCESSINFORMATION as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiPROCESSINFORMATION EnclosingObjects_Win32apiPROCESSINFORMATION') !


"September 28, 2010 -> 23:12:56"!

(Delta mirrorFor: #Win32apiPROCESSINFORMATION)
comment: 
'http://msdn.microsoft.com/en-us/library/ms684873(VS.85).aspx

typedef struct _PROCESS_INFORMATION {
  HANDLE hProcess;
  HANDLE hThread;
  DWORD dwProcessId;
  DWORD dwThreadId;
} PROCESS_INFORMATION, 
 *LPPROCESS_INFORMATION;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
dwThreadIdOffset 
^13.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
hThreadOffset 
^5.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
dwProcessId 
^ self unsignedLongAt: self dwProcessIdOffset.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
hProcess 
^ self unsignedLongAt: self hProcessOffset.

! !

"September 28, 2010 -> 23:12:56"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
dwProcessId: newValue 
 self  unsignedLongAt: self dwProcessIdOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
printOn: stream 
super  printOn: stream.
 stream cr.
 stream nextPutAll:'typedef struct _PROCESS_INFORMATION {' stream crtab; 
 nextPutAll:('hProcess: ' , self  hProcess printString).
 stream crtab; 
 nextPutAll:('hThread: ' , self  hThread printString).
 stream crtab; 
 nextPutAll:('dwProcessId: ' , self  dwProcessId printString).
 stream crtab; 
 nextPutAll:('dwThreadId: ' , self  dwThreadId printString).
 stream cr; 
 nextPutAll:'} PROCESS_INFORMATION;'.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
new 
 self Win32apiPROCESSINFORMATION_superInit_new.
 self Win32apiPROCESSINFORMATION_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
Win32apiPROCESSINFORMATION_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
Win32apiPROCESSINFORMATION_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
hProcess: newValue 
 self  unsignedLongAt: self hProcessOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
hProcessOffset 
^1.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
closeHandles 
|  closeHandle  result |
 closeHandle := self Alien  lookup:'CloseHandle' inLibrary:'kernel32.dll'.
 result := self Alien new:4.
 closeHandle  primFFICallResult: result with: self  hProcess.
 closeHandle  primFFICallResult: result with: self  hThread.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
hThread: newValue 
 self  unsignedLongAt: self hThreadOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
dwProcessIdOffset 
^9.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
dwThreadId 
^ self unsignedLongAt: self dwThreadIdOffset.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
dwThreadId: newValue 
 self  unsignedLongAt: self dwThreadIdOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) methodsFor: 'unclassified' !
hThread 
^ self unsignedLongAt: self hThreadOffset.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiPROCESSINFORMATION := eos ! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiPROCESSINFORMATION := mmd ! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) classSide methodsFor: 'unclassified' !
dataSize 
^16.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) classSide methodsFor: 'unclassified' !
fields 
^( self Array new:4)  at:1 put:'hProcess'; 
  at:2 put:'hThread'; 
  at:3 put:'dwProcessId'; 
  at:4 put:'dwThreadId'; 
 yourself.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) classSide methodsFor: 'unclassified' !
typedefName 
^'PROCESS_INFORMATION'.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiPROCESSINFORMATION) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:57"!

Delta define: #Win32apiRECT as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiRECT EnclosingObjects_Win32apiRECT') !


"September 28, 2010 -> 23:12:57"!

(Delta mirrorFor: #Win32apiRECT)
comment: 
'typedef struct _RECT { 
  LONG left; 
  LONG top; 
  LONG right; 
  LONG bottom; 
} RECT, *PRECT; 

Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
bottom: value 
 self  signedLongAt:13 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
left: value 
 self  signedLongAt:1 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
bottom 
^ self signedLongAt:13.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
left 
^ self signedLongAt:1.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
right 
^ self signedLongAt:9.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
initializeFromRectangle: rect 
 self  left:(0 max: rect left rounded).
 self  top:(0 max: rect top rounded).
 self  right:(0 max: rect right rounded).
 self  bottom:(0 max: rect bottom rounded).
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
top 
^ self signedLongAt:5.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
asRectangle 
^ self  left @ self  top corner:( self  right @ self  bottom).

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
top: value 
 self  signedLongAt:5 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
right: value 
 self  signedLongAt:9 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
Win32apiRECT_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
Win32apiRECT_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) methodsFor: 'unclassified' !
new 
 self Win32apiRECT_superInit_new.
 self Win32apiRECT_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiRECT := eos ! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiRECT := mmd ! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) classSide methodsFor: 'unclassified' !
dataSize 
^16.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiRECT) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:57"!

Delta define: #Win32apiREQRESIZE as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiREQRESIZE EnclosingObjects_Win32apiREQRESIZE') !


"September 28, 2010 -> 23:12:57"!

(Delta mirrorFor: #Win32apiREQRESIZE)
comment: 
'The REQRESIZE structure contains the requested size of a rich edit control. A rich edit control sends this structure to its parent window as part of an EN_REQUESTRESIZE notification message.

typedef struct _reqresize {
    NMHDR nmhdr;
    RECT rc;
} REQRESIZE;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
asRectangle 
^ self Rectangle  left: self  rcLeft right: self  rcRight top: self  rcTop bottom: self  rcBottom.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
rcTop 
^ self signedLongAt:17.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
rcBottom 
^ self signedLongAt:25.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
rcLeft 
^ self signedLongAt:13.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
Win32apiREQRESIZE_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
rcRight 
^ self signedLongAt:21.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
Win32apiREQRESIZE_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) methodsFor: 'unclassified' !
new 
 self Win32apiREQRESIZE_superInit_new.
 self Win32apiREQRESIZE_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiREQRESIZE := eos ! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiREQRESIZE := mmd ! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) classSide methodsFor: 'unclassified' !
dataSize 
^super  dataSize +16.

! !

"September 28, 2010 -> 23:12:57"!

! (Delta mirrorFor: #Win32apiREQRESIZE) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:58"!

Delta define: #Win32apiSCROLLINFO as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiSCROLLINFO EnclosingObjects_Win32apiSCROLLINFO') !


"September 28, 2010 -> 23:12:58"!

(Delta mirrorFor: #Win32apiSCROLLINFO)
comment: 
'typedef struct tagSCROLLINFO { 
    UINT cbSize; 
    UINT fMask; 
    int  nMin; 
    int  nMax; 
    UINT nPage; 
    int  nPos; 
    int  nTrackPos; 
}   SCROLLINFO, *LPSCROLLINFO;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nMin 
^ self signedLongAt:9.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nPos: value 
 self  signedLongAt:21 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nPage 
^ self unsignedLongAt:17.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
Win32apiSCROLLINFO_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nPage: value 
 self  unsignedLongAt:17 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nPos 
^ self signedLongAt:21.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
initialize 
 self  cbSize: self class dataSize.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
new 
 self Win32apiSCROLLINFO_superInit_new.
 self Win32apiSCROLLINFO_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
fMask: value 
 self  unsignedLongAt:5 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nMax 
^ self signedLongAt:13.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nTrackPos: value 
 self  signedLongAt:25 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nMax: value 
 self  signedLongAt:13 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
cbSize: value 
 self  unsignedLongAt:1 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nMin: value 
 self  signedLongAt:9 put: value.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
fMask 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
Win32apiSCROLLINFO_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) methodsFor: 'unclassified' !
nTrackPos 
^ self signedLongAt:25.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiSCROLLINFO := eos ! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiSCROLLINFO := mmd ! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) classSide methodsFor: 'unclassified' !
dataSize 
^28.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSCROLLINFO) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:58"!

Delta define: #Win32apiSECURITYATTRIBUTES as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiSECURITYATTRIBUTES EnclosingObjects_Win32apiSECURITYATTRIBUTES') !


"September 28, 2010 -> 23:12:58"!

(Delta mirrorFor: #Win32apiSECURITYATTRIBUTES)
comment: 
'http://msdn.microsoft.com/en-us/library/aa379560(VS.85).aspx

typedef struct _SECURITY_ATTRIBUTES {
  DWORD nLength;
  LPVOID lpSecurityDescriptor;
  BOOL bInheritHandle;
} SECURITY_ATTRIBUTES, 
 *PSECURITY_ATTRIBUTES, 
 *LPSECURITY_ATTRIBUTES;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
bInheritHandleOffset 
^9.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
lpSecurityDescriptor 
^ self unsignedLongAt: self lpSecurityDescriptorOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
Win32apiSECURITYATTRIBUTES_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
nLengthOffset 
^1.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
nLength: newValue 
 self  unsignedLongAt: self nLengthOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
lpSecurityDescriptorOffset 
^5.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
nLength 
^ self unsignedLongAt: self nLengthOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
bInheritHandle: newValue 
 self  boolAt: self bInheritHandleOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
Win32apiSECURITYATTRIBUTES_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
lpSecurityDescriptor: newValue 
 self  unsignedLongAt: self lpSecurityDescriptorOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
bInheritHandle 
^ self boolAt: self bInheritHandleOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
printOn: stream 
super  printOn: stream.
 stream cr.
 stream nextPutAll:'typedef struct _SECURITY_ATTRIBUTES {'.
 stream crtab; 
 nextPutAll:('nLength: ' , self  nLength printString).
 stream crtab; 
 nextPutAll:('lpSecurityDescriptor: ' , self  lpSecurityDescriptor printString).
 stream crtab; 
 nextPutAll:('bInheritHandle: ' , self  bInheritHandle printString).
 stream cr; 
 nextPutAll:'} SECURITY_ATTRIBUTES;'.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
initialize 
super  initialize.
 self  nLength: self class dataSize.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) methodsFor: 'unclassified' !
new 
 self Win32apiSECURITYATTRIBUTES_superInit_new.
 self Win32apiSECURITYATTRIBUTES_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiSECURITYATTRIBUTES := eos ! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiSECURITYATTRIBUTES := mmd ! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) classSide methodsFor: 'unclassified' !
dataSize 
^12.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) classSide methodsFor: 'unclassified' !
fields 
^( self Array new:3)  at:1 put:'nLength'; 
  at:2 put:'lpSecurityDescriptor'; 
  at:3 put:'bInheritHandle'; 
 yourself.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) classSide methodsFor: 'unclassified' !
typedefName 
^'SECURITY_ATTRIBUTES'.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSECURITYATTRIBUTES) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:58"!

Delta define: #Win32apiSTARTUPINFO as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiSTARTUPINFO EnclosingObjects_Win32apiSTARTUPINFO') !


"September 28, 2010 -> 23:12:58"!

(Delta mirrorFor: #Win32apiSTARTUPINFO)
comment: 
'http://msdn.microsoft.com/en-us/library/ms686331(VS.85).aspx

typedef struct _STARTUPINFO {
  DWORD cb;
  LPTSTR lpReserved;
  LPTSTR lpDesktop;
  LPTSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
} STARTUPINFO, 
 *LPSTARTUPINFO;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0'!


"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwXSizeOffset 
^25.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwYCountChars 
^ self unsignedLongAt: self dwYCountCharsOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
wShowWindow 
^ self unsignedLongAt: self wShowWindowOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwXSize 
^ self unsignedLongAt: self dwXSizeOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwFlags: newValue 
 self  unsignedLongAt: self dwFlagsOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwYCountChars: newValue 
 self  unsignedLongAt: self dwYCountCharsOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwXCountChars 
^ self unsignedLongAt: self dwXCountCharsOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwFillAttribute 
^ self unsignedLongAt: self dwFillAttributeOffset.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdErrorOffset 
^65.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpDesktopOffset 
^9.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwYSizeOffset 
^29.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwYSize: newValue 
 self  unsignedLongAt: self dwYSizeOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:58"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
Win32apiSTARTUPINFO_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwX: newValue 
 self  unsignedLongAt: self dwXOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
new 
 self Win32apiSTARTUPINFO_superInit_new.
 self Win32apiSTARTUPINFO_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdError: newValue 
 self  unsignedLongAt: self hStdErrorOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwFlagsOffset 
^45.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
cbReserved2Offset 
^51.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdInput 
^ self unsignedLongAt: self hStdInputOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
cbReserved2: newValue 
 self  unsignedLongAt: self cbReserved2Offset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwXCountChars: newValue 
 self  unsignedLongAt: self dwXCountCharsOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpReserved: newValue 
 self  unsignedLongAt: self lpReservedOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
Win32apiSTARTUPINFO_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwXOffset 
^17.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
cbOffset 
^1.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
cb 
^ self unsignedLongAt: self cbOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpTitle 
^ self unsignedLongAt: self lpTitleOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwYCountCharsOffset 
^37.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
printOn: stream 
super  printOn: stream.
 stream cr.
 stream nextPutAll:'typedef struct _STARTUPINFO {' stream crtab; 
 nextPutAll:('cb: ' , self  cb printString).
 stream crtab; 
 nextPutAll:('lpReserved: ' , self  lpReserved printString).
 stream crtab; 
 nextPutAll:('lpDesktop: ' , self  lpDesktop printString).
 stream crtab; 
 nextPutAll:('lpTitle: ' , self  lpTitle printString).
 stream crtab; 
 nextPutAll:('dwX: ' , self  dwX printString).
 stream crtab; 
 nextPutAll:('dwY: ' , self  dwY printString).
 stream crtab; 
 nextPutAll:('dwXSize: ' , self  dwXSize printString).
 stream crtab; 
 nextPutAll:('dwYSize: ' , self  dwYSize printString).
 stream crtab; 
 nextPutAll:('dwXCountChars: ' , self  dwXCountChars printString).
 stream crtab; 
 nextPutAll:('dwYCountChars: ' , self  dwYCountChars printString).
 stream crtab; 
 nextPutAll:('dwFillAttribute: ' , self  dwFillAttribute printString).
 stream crtab; 
 nextPutAll:('dwFlags: ' , self  dwFlags printString).
 stream crtab; 
 nextPutAll:('wShowWindow: ' , self  wShowWindow printString).
 stream crtab; 
 nextPutAll:('lpReserved2: ' , self  lpReserved2 printString).
 stream crtab; 
 nextPutAll:('hStdInput: ' , self  hStdInput printString).
 stream crtab; 
 nextPutAll:('hStdOutput: ' , self  hStdOutput printString).
 stream crtab; 
 nextPutAll:('hStdError: ' , self  hStdError printString).
 stream cr; 
 nextPutAll:'} STARTUPINFO;'.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpDesktop 
^ self unsignedLongAt: self lpDesktopOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdOutputOffset 
^61.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
wShowWindow: newValue 
 self  unsignedLongAt: self wShowWindowOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdOutput: newValue 
 self  unsignedLongAt: self hStdOutputOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwYOffset 
^21.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpTitleOffset 
^13.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwFillAttribute: newValue 
 self  unsignedLongAt: self dwFillAttributeOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpReservedOffset 
^5.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpReserved2Offset 
^53.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdError 
^ self unsignedLongAt: self hStdErrorOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwXSize: newValue 
 self  unsignedLongAt: self dwXSizeOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdInputOffset 
^57.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpReserved 
^ self unsignedLongAt: self lpReservedOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
initialize 
super  initialize.
 self  cb: self class dataSize.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
cbReserved2 
^ self unsignedLongAt: self cbReserved2Offset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpDesktop: newValue 
 self  unsignedLongAt: self lpDesktopOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
cb: newValue 
 self  unsignedLongAt: self cbOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpReserved2: newValue 
 self  unsignedLongAt: self lpReserved2Offset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwFlags 
^ self unsignedLongAt: self dwFlagsOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwYSize 
^ self unsignedLongAt: self dwYSizeOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
wShowWindowOffset 
^49.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwX 
^ self unsignedLongAt: self dwXOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwY: newValue 
 self  unsignedLongAt: self dwYOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpTitle: newValue 
 self  unsignedLongAt: self lpTitleOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdInput: newValue 
 self  unsignedLongAt: self hStdInputOffset put: newValue.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwY 
^ self unsignedLongAt: self dwYOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwFillAttributeOffset 
^41.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
dwXCountCharsOffset 
^33.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
hStdOutput 
^ self unsignedLongAt: self hStdOutputOffset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) methodsFor: 'unclassified' !
lpReserved2 
^ self unsignedLongAt: self lpReserved2Offset.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiSTARTUPINFO := eos ! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiSTARTUPINFO := mmd ! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) classSide methodsFor: 'unclassified' !
dataSize 
^68.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) classSide methodsFor: 'unclassified' !
fields 
^( self Array new:17)  at:1 put:'cb'; 
  at:2 put:'lpReserved'; 
  at:3 put:'lpDesktop'; 
  at:4 put:'lpTitle'; 
  at:5 put:'dwX'; 
  at:6 put:'dwY'; 
  at:7 put:'dwXSize'; 
  at:8 put:'dwYSize'; 
  at:9 put:'dwXCountChars'; 
  at:10 put:'dwYCountChars'; 
  at:11 put:'dwFillAttribute'; 
  at:12 put:'dwFlags'; 
  at:13 put:'wShowWindow'; 
  at:14 put:'lpReserved2'; 
  at:15 put:'hStdInput'; 
  at:16 put:'hStdOutput'; 
  at:17 put:'hStdError'; 
 yourself.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) classSide methodsFor: 'unclassified' !
typedefName 
^'STARTUPINFO'.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiSTARTUPINFO) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:12:59"!

Delta define: #Win32apiTRACKMOUSEEVENT as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiTRACKMOUSEEVENT EnclosingObjects_Win32apiTRACKMOUSEEVENT') !


"September 28, 2010 -> 23:12:59"!

(Delta mirrorFor: #Win32apiTRACKMOUSEEVENT)
comment: 
'typedef struct tagTRACKMOUSEEVENT {
    DWORD cbSize;
    DWORD dwFlags;
    HWND  hwndTrack;
    DWORD dwHoverTime;
} TRACKMOUSEEVENT, *LPTRACKMOUSEEVENT;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
hwndTrack 
^ self unsignedLongAt:9.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
Win32apiTRACKMOUSEEVENT_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
cbSize 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
dwFlags: flags 
^ self  unsignedLongAt:5 put: flags.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
cbSize: size 
^ self  unsignedLongAt:1 put: size.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
dwHoverTime: time 
^ self  unsignedLongAt:13 put: time.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
dwFlags 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
dwHoverTime 
^ self unsignedLongAt:13.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
hwndTrack: hwnd 
^ self  unsignedLongAt:9 put: hwnd.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
Win32apiTRACKMOUSEEVENT_1_init 
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
initialize 
super  initialize.
 self  cbSize: self class dataSize.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) methodsFor: 'unclassified' !
new 
 self Win32apiTRACKMOUSEEVENT_superInit_new.
 self Win32apiTRACKMOUSEEVENT_1_init.
^ self.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiTRACKMOUSEEVENT := eos ! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiTRACKMOUSEEVENT := mmd ! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) classSide methodsFor: 'unclassified' !
dataSize 
^16.

! !

"September 28, 2010 -> 23:12:59"!

! (Delta mirrorFor: #Win32apiTRACKMOUSEEVENT) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:13:0"!

Delta define: #Win32apiTRIVERTEX as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiTRIVERTEX EnclosingObjects_Win32apiTRIVERTEX') !


"September 28, 2010 -> 23:13:0"!

(Delta mirrorFor: #Win32apiTRIVERTEX)
comment: 
'typedef struct _TRIVERTEX
{
    LONG    x;
    LONG    y;
    COLOR16 Red;
    COLOR16 Green;
    COLOR16 Blue;
    COLOR16 Alpha;
}TRIVERTEX,*PTRIVERTEX,*LPTRIVERTEX;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
alpha: value 
 self  unsignedShortAt:15 put: value.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
green: value 
 self  unsignedShortAt:11 put: value.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
red: value 
 self  unsignedShortAt:9 put: value.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
Win32apiTRIVERTEX_1_init 
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
y: value 
 self  signedLongAt:5 put: value.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
blue: value 
 self  unsignedShortAt:13 put: value.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
x: value 
 self  signedLongAt:1 put: value.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
Win32apiTRIVERTEX_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) methodsFor: 'unclassified' !
new 
 self Win32apiTRIVERTEX_superInit_new.
 self Win32apiTRIVERTEX_1_init.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiTRIVERTEX := eos ! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiTRIVERTEX := mmd ! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) classSide methodsFor: 'unclassified' !
dataSize 
^16.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiTRIVERTEX) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:13:0"!

Delta define: #Win32apiWINDOWPOS as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiWINDOWPOS EnclosingObjects_Win32apiWINDOWPOS') !


"September 28, 2010 -> 23:13:0"!

(Delta mirrorFor: #Win32apiWINDOWPOS)
comment: 
'typedef struct {
    HWND hwnd;
    HWND hwndInsertAfter;
    int x;
    int y;
    int cx;
    int cy;
    UINT flags;
} WINDOWPOS;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
cx 
^ self signedLongAt:17.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
cy 
^ self signedLongAt:21.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
asRectangle 
^ self  x @ self  y extent:( self  cx @ self  cy).

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
hwnd 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
flags 
^ self signedLongAt:25.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
Win32apiWINDOWPOS_1_init 
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
x 
^ self signedLongAt:9.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
y 
^ self signedLongAt:13.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
hwndInsertAfter 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
Win32apiWINDOWPOS_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) methodsFor: 'unclassified' !
new 
 self Win32apiWINDOWPOS_superInit_new.
 self Win32apiWINDOWPOS_1_init.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiWINDOWPOS := eos ! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiWINDOWPOS := mmd ! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) classSide methodsFor: 'unclassified' !
dataSize 
^28.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWINDOWPOS) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:13:0"!

Delta define: #Win32apiWindowProc as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiWindowProc EnclosingObjects_Win32apiWindowProc') !


"September 28, 2010 -> 23:13:0"!

(Delta mirrorFor: #Win32apiWindowProc)
comment: 
'Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
lParamAsPoint 
^ self  lParamLoWord @ self  lParamHiWord.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
message 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
wParamLoWord 
^ self signedShortAt:9.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
lParamLoWord 
^ self signedShortAt:13.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
wParamHiWord 
^ self signedShortAt:11.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
lParamHiWord 
^ self signedShortAt:15.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
hwnd 
^ self signedLongAt:1.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
Win32apiWindowProc_1_init 
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
wParam 
^ self signedLongAt:9.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
Win32apiWindowProc_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
lParam 
^ self signedLongAt:13.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) methodsFor: 'unclassified' !
new 
 self Win32apiWindowProc_superInit_new.
 self Win32apiWindowProc_1_init.
^ self.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiWindowProc := eos ! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiWindowProc := mmd ! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) classSide methodsFor: 'unclassified' !
dataSize 
^16.

! !

"September 28, 2010 -> 23:13:0"!

! (Delta mirrorFor: #Win32apiWindowProc) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:13:1"!

Delta define: #Win32apiWNDCLASS as: (
(Class subclassOf: 'NewspeakObject' instanceVariables: '') classVariables: 'MixinMetadata_Win32apiWNDCLASS EnclosingObjects_Win32apiWNDCLASS') !


"September 28, 2010 -> 23:13:1"!

(Delta mirrorFor: #Win32apiWNDCLASS)
comment: 
'typedef struct {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCTSTR lpszMenuName;
    LPCTSTR lpszClassName;
} WNDCLASS, *PWNDCLASS;

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!


"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hCursor 
^ self unsignedLongAt:25.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
style 
^ self unsignedLongAt:1.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
cbClsExtra: newValue 
^ self  signedLongAt:9 put: newValue.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hInstance: newValue 
^ self  unsignedLongAt:17 put: newValue.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
lpszMenuName 
^ self unsignedLongAt:33.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hCursor: newValue 
^ self  unsignedLongAt:25 put: newValue.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hInstance 
^ self unsignedLongAt:17.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
lpfnWndProc 
^ self unsignedLongAt:5.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hbrBackground: newValue 
^ self  unsignedLongAt:29 put: newValue.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
lpszClassName: newValue 
^ self  unsignedLongAt:37 put: newValue.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
style: value 
^ self  unsignedLongAt:1 put: value.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hbrBackground 
^ self unsignedLongAt:29.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
new 
 self Win32apiWNDCLASS_superInit_new.
 self Win32apiWNDCLASS_1_init.
^ self.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
lpszMenuName: newValue 
^ self  unsignedLongAt:33 put: newValue.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
cbClsExtra 
^ self signedLongAt:9.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hIcon 
^ self unsignedLongAt:21.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
hIcon: newValue 
^ self  unsignedLongAt:21 put: newValue.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
Win32apiWNDCLASS_1_init 
^ self.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
lpszClassName 
^ self unsignedLongAt:37.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
Win32apiWNDCLASS_superInit_new 
super  new.
^ self.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
cbWndExtra 
^ self signedLongAt:13.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) methodsFor: 'unclassified' !
lpfnWndProc: value 
^ self  unsignedLongAt:5 put: value.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) classSide methodsFor: 'unclassified' !
enclosingObjects: eos EnclosingObjects_Win32apiWNDCLASS := eos ! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) classSide methodsFor: 'unclassified' !
mixinMetadata: mmd MixinMetadata_Win32apiWNDCLASS := mmd ! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) classSide methodsFor: 'unclassified' !
dataSize 
^40.

! !

"September 28, 2010 -> 23:13:1"!

! (Delta mirrorFor: #Win32apiWNDCLASS) classSide methodsFor: 'unclassified' !
new 
^ self basicNew new.

! !

"September 28, 2010 -> 23:13:22"!

! (Delta mirrorFor: #AbstractClassMirror) methodsFor: 'Newspeak port' !
slots ^ <OrderedCollection[DeltaInstVar]>
"Return all instance variables of the class - locally declared and inherited"
	| ivars |
	ivars := reflectee = Object ifTrue:[OrderedCollection new] ifFalse:[self superclass slots].
	self mixin instanceVariablesDo:[: iv | ivars add: iv].
	^ivars! !

"September 28, 2010 -> 23:13:22"!

! (Delta mirrorFor: #Block) methodsFor: 'Newspeak-support' !
reentrant

	^self! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'accessing' !
entries

	|entries|
	self isDirectory ifFalse: [^OrderedCollection with: self].
	entries := OrderedCollection new.
	self , (FilePattern for: '*') pathsDo: [:path| entries add: path].
	^entries! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
/ string

	^(FilePath for: string) isAbsolute
		ifTrue: [FilePath for: string]
		ifFalse: [self, (FilePattern for: string)]! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
directoryEntry

	^self! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
directoryEntryFor: string

	^self / string! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
fileSize

	|fd|
	fd := self open: #read ifFail: [:err| self error: 'Can''t open file'].
	[^fd size]
		ensure: [fd close]! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
fullName

	^self name! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
fullNameFor: string

	^(FilePath for: string) isAbsolute
		ifTrue: [string]
		ifFalse: [self, (FilePattern for: string)]! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
modificationTime

	^0! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #FilePath) methodsFor: 'newspeak' !
pathName

	^self name! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Number) methodsFor: 'mathematical functions' !
raisedToInteger: power <Int> ^<Number>
"Naive, perhaps, but it's a start"
	power = 0 ifTrue:[^1].
	^power > 0 
		ifTrue:[
			(1 to: power) inject:1 into:[:prod <Number>  :n <Number> | 
				self * prod
				]
			]
		ifFalse:[
			(-1  to: power by: -1) inject:1 into:[:prod <Number>  :n <Number> | 
				prod  / self
				]		
		]
		! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Number) methodsFor: 'newspeak support' !
** n <Integer>^ <Number>
	^self raisedToInteger: n! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Number) methodsFor: 'newspeak support' !
x

	^self! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Number) methodsFor: 'newspeak support' !
y

	^self! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Object) classSide methodsFor: 'private' !
ns2stTest
	| dir |
	dir := 'z:\ns2st-proto\newspeakBoot\'.
	Delta 
		fileIn: dir, 'BlocklessCombinatorialParsing-andNested.dlt';
		fileIn: dir,  'CombinatorialParsing-andNested.dlt';
		fileIn: dir,  'Newspeak2Parsing-andNested.dlt';
		fileIn: dir, 'Newspeak2AST-andNested.dlt';
		fileIn: dir,  'Newspeak2Grammar-andNested.dlt';
		fileIn: dir,  'Newspeak2StrongtalkCompilation-andNested.dlt';
		fileIn: dir,  'Newspeak2StrongtalkMirrors-andNested.dlt';
		fileIn: dir,  'MirrorGroups-andNested.dlt';
		fileIn: dir,  'AssembleCompiler.dlt'.
	^AssembleCompiler newCompiler! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Object) methodsFor: 'copying' !
clone ^<Instance>
	"Create and return a copy of the receiver.  Objects that are immutable and cannot be copied may return
	 themselves.  Objects contained by this object that are externally accessible objects and  are 	 considered
	 'separate' from  the receiver (such as the elements of a collection) are not copied.

	Subclasses must override postCopy if they contain private information that should not be shared
	after a copy."

	^self copy! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Object) methodsFor: 'newspeak' !
flag: symbol

	^self! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Object) methodsFor: 'newspeak' !
isText

	^false! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Object) methodsFor: 'newspeak' !
new 
	self initialize! !

"September 28, 2010 -> 23:13:23"!

! (Delta mirrorFor: #Object) methodsFor: 'newspeak' !
~ symbol

	symbol numArgs = 0 ifTrue: [^[:ignored | self perform: symbol]].
	symbol numArgs = 1 ifTrue: [^[:arg| self perform: symbol with: arg]].
	self error: 'Only one or two args supported.'! !

"September 28, 2010 -> 23:13:24"!

! (Delta mirrorFor: #Point) methodsFor: 'newspeak' !
translateBy: p <Point> ^<Point>

	^self translatedBy: p! !

"September 28, 2010 -> 23:13:24"!

! (Delta mirrorFor: #Process) methodsFor: 'newspeak' !
name: string! !

"September 28, 2010 -> 23:13:24"!

! (Delta mirrorFor: #ReadString) methodsFor: 'newspeak' !
withSqueakLineEndings

	^self! !

"September 28, 2010 -> 23:13:24"!

! (Delta mirrorFor: #Rectangle) methodsFor: 'newspeak' !
translateFrom: aVisual to: anotherVisual
 
 	^self translateBy: aVisual globalOrigin - anotherVisual globalOrigin! !

"September 28, 2010 -> 23:13:24"!

! (Delta mirrorFor: #SharedQueue) methodsFor: 'newspeak' !
nextOrNil
 
 	self monitor
 		critical: [^self head isNil
 							ifTrue: [nil]
 							ifFalse: [self next]]! !

"September 28, 2010 -> 23:13:24"!

! (Delta mirrorFor: #Symbol) methodsFor: 'newspeak' !
numArgs
 
 	|count colons|
 	colons := OrderedCollection new.
 	self keysAndValuesDo: [:i :c| c = $: ifTrue: [colons add: i]].
 	1 to: colons size - 1 do: [:i|
 		(colons at: i) + 1= (colons at: i + 1) ifTrue: [^ -1]].
 	count := colons size.
 	^count = 0
 		ifTrue: [self detect: [:c| c isAlphaNumeric] ifNone: [^1].
 						0]
 		ifFalse: [count]! !

"September 28, 2010 -> 23:13:24"!

! (Delta mirrorFor: #Alien) classSide methodsFor: 'instance creation' !
basicNew

	^self new: self dataSize! !
