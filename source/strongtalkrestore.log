
"September 6, 2008 -> 16:10:32"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 6, 2008 -> 16:10:55"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript new
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript new
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 6, 2008 -> 16:36:12"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 6, 2008 -> 16:36:12"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript new
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript new
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 6, 2008 -> 16:39:23"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 6, 2008 -> 16:39:23"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript new
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript new
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 6, 2008 -> 16:39:23"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 6, 2008 -> 16:39:23"!

! (Delta mirrorFor: #RichardsBenchmarks) methodsFor: 'initialize' !
start
    | workQ mark1 mark2 mark3 mark4 |
    RBObject initialize: self.
    self initTrace; initScheduler.
    mark1 := Time millisecondClockValue.
    Transcript show: 'Bench mark starting'; cr.
    self
        createIdler: Idler
        priority: 0
        work: NoWork
        state: TaskState running.
    workQ := self
                createPacket: NoWork
                identity: Worker
                kind: WorkPacketKind.
    workQ := self
                createPacket: workQ
                identity: Worker
                kind: WorkPacketKind.
    self
        createWorker: Worker
        priority: 1000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceA
                kind: DevicePacketKind.
    self
        createHandler: HandlerA
        priority: 2000
        work: workQ
        state: TaskState waitingWithPacket.
    workQ := self
                createPacket: NoWork
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    workQ := self
                createPacket: workQ
                identity: DeviceB
                kind: DevicePacketKind.
    self
        createHandler: HandlerB
        priority: 3000
        work: workQ
        state: TaskState waitingWithPacket.
    self
        createDevice: DeviceA
        priority: 4000
        work: NoWork
        state: TaskState waiting.
    self
        createDevice: DeviceB
        priority: 5000
        work: NoWork
        state: TaskState waiting.
    Transcript show: 'Starting'; cr.
    mark2 := Time millisecondClockValue.
    self schedule.
    mark3 := Time millisecondClockValue.

    Transcript show: 'Finished'; cr.
    Transcript show: 'QueuePacket count = ' , queuePacketCount printString , ' HoldCount = ' , holdCount printString; cr; show: 'These results are' , (queuePacketCount = 23246 & (holdCount = 9297)
                ifTrue: ['correct']
                ifFalse: ['wrong']) printString.
    Transcript cr; show: 'End of run'; cr.
    mark4 := Time millisecondClockValue.

	TempTranscript new
					showBenchmarkLine: 	'Scheduler time' 
					delta:							mark3 - mark2 
					digitalk:						self digitalkSchedulerTime 
					parcplace: 					self parcplaceSchedulerTime.

	TempTranscript new
					showBenchmarkLine:	'Total time' 
					delta: 							mark4 - mark1
					digitalk:						self digitalkTotalTime 
					parcplace: 					self parcplaceTotalTime.
! !

"September 7, 2008 -> 20:58:22"!

! (Delta mirrorFor: #RichardsBenchmarks) classSide methodsFor: 'instance creation' !
loop

	|start elapsed count|
start := Time millisecondClockValue.
count := 0.
[(elapsed := Time millisecondClockValue - start) < 1000]
	whileTrue: [
		self new run.
		count := count + 1].
elapsed * 1000.0/ count printOn: Transcript cr; yourself! !

"September 8, 2008 -> 2:20:4"!

! (Delta mirrorFor: #RichardsBenchmarks) classSide methodsFor: 'instance creation' !
loop

	|start elapsed count|
start := Time millisecondClockValue.
count := 0.
[(elapsed := Time millisecondClockValue - start) < 1000]
	whileTrue: [
		self new run.
		count := count + 1].
elapsed * 1000.0/ count printOn: Transcript cr; yourself! !

"September 8, 2008 -> 2:37:51"!

! (Delta mirrorFor: #RichardsBenchmarks) classSide methodsFor: 'instance creation' !
loop

	|start elapsed count|
start := Time millisecondClockValue.
count := 0.
[(elapsed := Time millisecondClockValue - start) < 1000]
	whileTrue: [
		self new run.
		count := count + 1].
elapsed * 1000.0/ count printOn: Transcript cr; yourself! !
