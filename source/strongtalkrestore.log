
"January 6, 2010 -> 21:51:8"!

Delta define: #ObjectiveCAlien as: (
(Class subclassOf: 'Alien' instanceVariables: '')) !


"January 6, 2010 -> 21:54:27"!

Delta define: #ObjectiveCClassAlien as: (
(Class subclassOf: 'ObjectiveCAlien' instanceVariables: '')) !


"January 6, 2010 -> 21:54:44"!

! (Delta mirrorFor: #ObjectiveCAlien) methodsFor: 'accessing' !
isa
	| address |
	^(address := self unsignedLongAt: 1) ~= 0 ifTrue:
		[ObjectiveCClassAlien forPointer: ((Alien forPointer: address) unsignedLongAt: 1)]! !

"January 6, 2010 -> 21:59:10"!

! (Delta mirrorFor: #ObjectiveCAlien) methodsFor: 'coercing' !
asSmalltalkSelector
	"Assume the receiver is an Alien for a SEL.  Answer its correspondng Smaltalk selector, or raise an error."
	^(self SelGetNameAlien
			primFFICallResult: (Alien forPointer: 0)
			with: self) strcpy asSymbol! !

"January 6, 2010 -> 22:0:25"!

! (Delta mirrorFor: #ObjectiveCAlien) methodsFor: 'coercing' !
id
	"Answer the receiver's id. This coerces direct, pointer and indirect ObjectiveC objects correctly."
	^self addressField! !

"January 6, 2010 -> 22:1:35"!

Delta define: #ObjectiveCMethod as: (
(Class subclassOf: 'Alien' instanceVariables: '')) !


"January 6, 2010 -> 22:6:42"!

Delta define: #ObjectiveCAlien as: (
(Class subclassOf: 'Alien' instanceVariables: '') classVariables: 'ClassGetInstanceMethodAlien
ObjCMsgSendAlien
MethodTypeResultMap
SelGetNameAlien') !


"January 6, 2010 -> 22:6:49"!

! (Delta mirrorFor: #ObjectiveCAlien) methodsFor: 'coercing' !
asSmalltalkSelector
	"Assume the receiver is an Alien for a SEL.  Answer its correspondng Smaltalk selector, or raise an error."
	^(SelGetNameAlien
			primFFICallResult: (Alien forPointer: 0)
			with: self) strcpy asSymbol! !

"January 6, 2010 -> 22:7:6"!

! (Delta mirrorFor: #ObjectiveCAlien) methodsFor: 'objective-c runtime' !
objectiveCMethodForSelectorAlien: selectorAlien
	| pointer |
	pointer := ClassGetInstanceMethodAlien
						primFFICallResult: (Alien new: 4)
						with: self isa
						with: selectorAlien.
	^(pointer := pointer unsignedLongAt: 1) ~= 0 ifTrue:
		[ObjectiveCMethod atAddress: pointer]! !

"January 6, 2010 -> 22:7:33"!

! (Delta mirrorFor: #ObjectiveCAlien) methodsFor: 'message forwarding' !
doesNotUnderstand: aMessage
	| method returnTypeCharacter result |
	method := self objectiveCMethodForSelectorAlien: (self class asObjectiveCSelector: aMessage selector).
	method isNil ifTrue:
		["Might also check if selector is not already forward: and if
		  so try sending forward: of the selector and arguments?"
		 ^super doesNotUnderstand: aMessage].
	returnTypeCharacter := self class returnTypeCharacterForMethodTypes: method methodTypes.
	"If MethodTypeMap doesn't include returnTypeCharacter then we haven't
	implemented handling that return type yet."
	result := method implementation
				primFFICallResult: (MethodTypeMap at: returnTypeCharacter) value
				withArguments: {self. method rawSelector}, aMessage arguments.
	^(MethodTypeResultMap
			at: returnTypeCharacter
			ifAbsent: [^result])
		value: result! !

"January 6, 2010 -> 22:9:11"!

! (Delta mirrorFor: #ObjectiveCAlien) classSide methodsFor: 'instance creation' !
dataSize

	^4! !

"January 6, 2010 -> 22:10:9"!

! (Delta mirrorFor: #ObjectiveCAlien) classSide methodsFor: 'class initialization' !
initializeMethodTypeMap
	"self initializeMethodTypeMap"
	"ObjectiveCAlien initializeMethodTypeMap"
	"See /usr/include/objc/objc_class.h and
	 The Objective-C 2.0 Programming Language, Ch 12: The Runtime System, sec: Type Encodings."
	MethodTypeMap := IdentityDictionary new: 32.
	MethodTypeMap
		at: $@ "_C_ID"			put: [ObjectiveCAlien new];
		at: $# "_C_CLASS"		put: [ObjectiveCClassAlien new];
		at: $: "_C_SEL"			put: [Alien new: 4];
		at: $c "_CHR"			put: [Alien new: 1];
		at: $C "_C_UCHR"		put: [Alien new: 1];
		at: $s "_C_SHT"		put: [Alien new: 2];
		at: $S "_C_USHT"		put: [Alien new: 2];
		at: $i "_C_INT"			put: [Alien new: 4];
		at: $I "_C_UINT"		put: [Alien new: 4];
		at: $l "_C_LNG"			put: [Alien new: 4];
		at: $L "_C_ULNG"		put: [Alien new: 4];
		at: $f "_C_FLT"			put: [Alien new: 4];
		at: $d "_C_DBL"		put: [Alien new: 8];
		"at: $b" "_C_BFLD"		"put: [];"
		at: $v "_C_VOID"		put: nil;
		"at: $?" "_C_UNDEF"	"put: [];"
		at: $^ "_C_PTR"		put: [Alien forPointer: 0];
		at: $* "_CHARPTR"		put: [Alien forPointer: 0].
		"at: $[" "_C_ARY_B"	"put: [];"
		"at: $]" "_C_ARY_E"	"put: [];"
		"at: $(" "_C_UNION_B"	"put: [];"
		"at: $)" "_C_UNION_E"	"put: [];"
		"at: ${" "_C_STRUCT_B""put: [];"
		"at: $}" "_C_STRUCT_E""put: []."

	FourByteParameterTypes := '@#:cCsSiIlLf^*'.
	EightByteParameterTypes := 'd'.

"#define _C_CONST			'r'
#define _C_IN				'n'
#define _C_INOUT			'N'
#define _C_OUT			'o'
#define _C_BYCOPY		'O'
#define _C_BYREF			'R'
#define _C_ONEWAY		'V'
#define _C_GCINVISIBLE	'!!'
"
	TypeQualifiers := 'nNoOrRV!!'.
	TypeQualifierCodes := TypeQualifiers asByteArray.
					
	MethodTypeResultMap := IdentityDictionary new: 32.
	MethodTypeResultMap
		at: $c "_CHR"			put: [:alien| alien unsignedByteAt: 1];
		at: $C "_C_UCHR"		put: [:alien| alien unsignedByteAt: 1];
		at: $s "_C_SHT"		put: [:alien| alien signedShortAt: 1];
		at: $S "_C_USHT"		put: [:alien| alien unsignedShortAt: 1];
		at: $i "_C_INT"			put: [:alien| alien signedLongAt: 1];
		at: $I "_C_UINT"		put: [:alien| alien unsignedLongAt: 1];
		at: $l "_C_LNG"			put: [:alien| alien signedLongAt: 1];
		at: $L "_C_ULNG"		put: [:alien| alien unsignedLongAt: 1];
		at: $f "_C_FLT"			put: [:alien| alien floatAt: 1];
		at: $d "_C_DBL"		put: [:alien| alien doubleAt: 1].
! !

"January 6, 2010 -> 22:11:2"!

Delta define: #ObjectiveCAlien as: (
(Class subclassOf: 'Alien' instanceVariables: '') classVariables: 'ClassGetInstanceMethodAlien
ObjCMsgSendAlien
MethodTypeMap
MethodTypeResultMap
SelGetNameAlien') !


"January 6, 2010 -> 22:11:7"!

! (Delta mirrorFor: #ObjectiveCAlien) classSide methodsFor: 'class initialization' !
initializeMethodTypeMap
	"self initializeMethodTypeMap"
	"ObjectiveCAlien initializeMethodTypeMap"
	"See /usr/include/objc/objc_class.h and
	 The Objective-C 2.0 Programming Language, Ch 12: The Runtime System, sec: Type Encodings."
	MethodTypeMap := IdentityDictionary new: 32.
	MethodTypeMap
		at: $@ "_C_ID"			put: [ObjectiveCAlien new];
		at: $# "_C_CLASS"		put: [ObjectiveCClassAlien new];
		at: $: "_C_SEL"			put: [Alien new: 4];
		at: $c "_CHR"			put: [Alien new: 1];
		at: $C "_C_UCHR"		put: [Alien new: 1];
		at: $s "_C_SHT"		put: [Alien new: 2];
		at: $S "_C_USHT"		put: [Alien new: 2];
		at: $i "_C_INT"			put: [Alien new: 4];
		at: $I "_C_UINT"		put: [Alien new: 4];
		at: $l "_C_LNG"			put: [Alien new: 4];
		at: $L "_C_ULNG"		put: [Alien new: 4];
		at: $f "_C_FLT"			put: [Alien new: 4];
		at: $d "_C_DBL"		put: [Alien new: 8];
		"at: $b" "_C_BFLD"		"put: [];"
		at: $v "_C_VOID"		put: nil;
		"at: $?" "_C_UNDEF"	"put: [];"
		at: $^ "_C_PTR"		put: [Alien forPointer: 0];
		at: $* "_CHARPTR"		put: [Alien forPointer: 0].
		"at: $[" "_C_ARY_B"	"put: [];"
		"at: $]" "_C_ARY_E"	"put: [];"
		"at: $(" "_C_UNION_B"	"put: [];"
		"at: $)" "_C_UNION_E"	"put: [];"
		"at: ${" "_C_STRUCT_B""put: [];"
		"at: $}" "_C_STRUCT_E""put: []."

	FourByteParameterTypes := '@#:cCsSiIlLf^*'.
	EightByteParameterTypes := 'd'.

"#define _C_CONST			'r'
#define _C_IN				'n'
#define _C_INOUT			'N'
#define _C_OUT			'o'
#define _C_BYCOPY		'O'
#define _C_BYREF			'R'
#define _C_ONEWAY		'V'
#define _C_GCINVISIBLE	'!!'
"
	TypeQualifiers := 'nNoOrRV!!'.
	TypeQualifierCodes := TypeQualifiers asByteArray.
					
	MethodTypeResultMap := IdentityDictionary new: 32.
	MethodTypeResultMap
		at: $c "_CHR"			put: [:alien| alien unsignedByteAt: 1];
		at: $C "_C_UCHR"		put: [:alien| alien unsignedByteAt: 1];
		at: $s "_C_SHT"		put: [:alien| alien signedShortAt: 1];
		at: $S "_C_USHT"		put: [:alien| alien unsignedShortAt: 1];
		at: $i "_C_INT"			put: [:alien| alien signedLongAt: 1];
		at: $I "_C_UINT"		put: [:alien| alien unsignedLongAt: 1];
		at: $l "_C_LNG"			put: [:alien| alien signedLongAt: 1];
		at: $L "_C_ULNG"		put: [:alien| alien unsignedLongAt: 1];
		at: $f "_C_FLT"			put: [:alien| alien floatAt: 1];
		at: $d "_C_DBL"		put: [:alien| alien doubleAt: 1].
! !

"January 6, 2010 -> 22:12:26"!

Delta define: #ObjectiveCAlien as: (
(Class subclassOf: 'Alien' instanceVariables: '') classVariables: 'ClassGetInstanceMethodAlien
EightByteParameterTypes
FourByteParameterTypes
ObjCMsgSendAlien
MethodTypeMap
MethodTypeResultMap
SelGetNameAlien
TypeQualifiers
TypeQualifierCodes') !

