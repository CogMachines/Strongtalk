Delta define: #Newspeak2AST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' Newspeak2AST_CategoryAST_slot Newspeak2AST_NumberAST_slot Newspeak2AST_SymbolAST_slot Newspeak2AST_MessageAST_slot Newspeak2AST_ASTCopier_slot Newspeak2AST_SideAST_slot Newspeak2AST_VariableAST_slot Newspeak2AST_NSSideAST_slot Newspeak2AST_LiteralAST_slot Newspeak2AST_ASTTool_slot Newspeak2AST_CascadedSendAST_slot Newspeak2AST_CodeBodyAST_slot Newspeak2AST_SlotDefAST_slot Newspeak2AST_FalseVisitor_slot Newspeak2AST_SendAST_slot Newspeak2AST_NamespaceAST_slot Newspeak2AST_CharAST_slot Newspeak2AST_ClassHeaderAST_slot Newspeak2AST_MixinApplicationAST_slot Newspeak2AST_TypePatternAST_slot Newspeak2AST_TupleAST_slot Newspeak2AST_TypeIdAST_slot Newspeak2AST_AssignmentAST_slot Newspeak2AST_VarDeclAST_slot Newspeak2AST_NormalSendAST_slot Newspeak2AST_ClassDeclarationAST_slot Newspeak2AST_UnaryTypeOpAST_slot Newspeak2AST_MethodAST_slot Newspeak2AST_BlockAST_slot Newspeak2AST_NamespaceExprAST_slot Newspeak2AST_MessagePatternAST_slot Newspeak2AST_ReturnStatAST_slot Newspeak2AST_ImmutableSlotDefAST_slot Newspeak2AST_StringAST_slot Newspeak2AST_MutableSlotDefAST_slot OrderedCollection Newspeak2AST_ArrayAST_slot Newspeak2AST_ClassAST_slot Newspeak2AST_HeaderProxy_slot Newspeak2AST_GenericInvocationAST_slot Newspeak2AST_AST_slot Newspeak2AST_BinaryTypeOpAST_slot')
	 classVariables: 'MixinMetadata_Newspeak2AST EnclosingObjects_Newspeak2AST')!
	(Delta mirrorFor: #Newspeak2AST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST) methodsFor: 'unclassified'!
	ReturnStatAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ReturnStatAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ReturnStatAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ReturnStatAST_slot := myNested.
		].
	^Newspeak2AST_ReturnStatAST_slot! 
SlotDefAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_SlotDefAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_SlotDefAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_SlotDefAST_slot := myNested.
		].
	^Newspeak2AST_SlotDefAST_slot! 
OrderedCollection ^OrderedCollection! 
SendAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_SendAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_SendAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_SendAST_slot := myNested.
		].
	^Newspeak2AST_SendAST_slot! 
HeaderProxy
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_HeaderProxy_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_HeaderProxy.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_HeaderProxy_slot := myNested.
		].
	^Newspeak2AST_HeaderProxy_slot! 
SideAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_SideAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_SideAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_SideAST_slot := myNested.
		].
	^Newspeak2AST_SideAST_slot! 
BinaryTypeOpAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_BinaryTypeOpAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_BinaryTypeOpAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_BinaryTypeOpAST_slot := myNested.
		].
	^Newspeak2AST_BinaryTypeOpAST_slot! 
VarDeclAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_VarDeclAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_VarDeclAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_VarDeclAST_slot := myNested.
		].
	^Newspeak2AST_VarDeclAST_slot! 
CascadedSendAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_CascadedSendAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_CascadedSendAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  SendAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_CascadedSendAST_slot := myNested.
		].
	^Newspeak2AST_CascadedSendAST_slot! 
MixinApplicationAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_MixinApplicationAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_MixinApplicationAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_MixinApplicationAST_slot := myNested.
		].
	^Newspeak2AST_MixinApplicationAST_slot! 
 Newspeak2AST_1_init: platform 

 self OrderedCollection: platform Collections OrderedCollection.

^ self.



! 
NormalSendAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_NormalSendAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_NormalSendAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  SendAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_NormalSendAST_slot := myNested.
		].
	^Newspeak2AST_NormalSendAST_slot! 
UnaryTypeOpAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_UnaryTypeOpAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_UnaryTypeOpAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_UnaryTypeOpAST_slot := myNested.
		].
	^Newspeak2AST_UnaryTypeOpAST_slot! 
TupleAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_TupleAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_TupleAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  ArrayAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_TupleAST_slot := myNested.
		].
	^Newspeak2AST_TupleAST_slot! 
ClassDeclarationAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ClassDeclarationAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ClassDeclarationAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ClassDeclarationAST_slot := myNested.
		].
	^Newspeak2AST_ClassDeclarationAST_slot! 
TypePatternAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_TypePatternAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_TypePatternAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_TypePatternAST_slot := myNested.
		].
	^Newspeak2AST_TypePatternAST_slot! 
CharAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_CharAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_CharAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  LiteralAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_CharAST_slot := myNested.
		].
	^Newspeak2AST_CharAST_slot! 
ClassAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ClassAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ClassAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ClassAST_slot := myNested.
		].
	^Newspeak2AST_ClassAST_slot! 
AST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_AST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_AST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_AST_slot := myNested.
		].
	^Newspeak2AST_AST_slot! 
ClassHeaderAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ClassHeaderAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ClassHeaderAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ClassHeaderAST_slot := myNested.
		].
	^Newspeak2AST_ClassHeaderAST_slot! 
MethodAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_MethodAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_MethodAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_MethodAST_slot := myNested.
		].
	^Newspeak2AST_MethodAST_slot! 
 Newspeak2AST_superInit_usingLib: platform 

super  new.

^ self.



! 
LiteralAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_LiteralAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_LiteralAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_LiteralAST_slot := myNested.
		].
	^Newspeak2AST_LiteralAST_slot! 
ASTCopier
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ASTCopier_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ASTCopier.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  ASTTool)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ASTCopier_slot := myNested.
		].
	^Newspeak2AST_ASTCopier_slot! 
VariableAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_VariableAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_VariableAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_VariableAST_slot := myNested.
		].
	^Newspeak2AST_VariableAST_slot! 
ASTTool
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ASTTool_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ASTTool.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ASTTool_slot := myNested.
		].
	^Newspeak2AST_ASTTool_slot! 
SymbolAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_SymbolAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_SymbolAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  LiteralAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_SymbolAST_slot := myNested.
		].
	^Newspeak2AST_SymbolAST_slot! 
StringAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_StringAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_StringAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  LiteralAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_StringAST_slot := myNested.
		].
	^Newspeak2AST_StringAST_slot! 
ImmutableSlotDefAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ImmutableSlotDefAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ImmutableSlotDefAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  SlotDefAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ImmutableSlotDefAST_slot := myNested.
		].
	^Newspeak2AST_ImmutableSlotDefAST_slot! 
AssignmentAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_AssignmentAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_AssignmentAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_AssignmentAST_slot := myNested.
		].
	^Newspeak2AST_AssignmentAST_slot! 
CategoryAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_CategoryAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_CategoryAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_CategoryAST_slot := myNested.
		].
	^Newspeak2AST_CategoryAST_slot! 
NamespaceAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_NamespaceAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_NamespaceAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_NamespaceAST_slot := myNested.
		].
	^Newspeak2AST_NamespaceAST_slot! 
NSSideAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_NSSideAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_NSSideAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  SideAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_NSSideAST_slot := myNested.
		].
	^Newspeak2AST_NSSideAST_slot! 
MessagePatternAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_MessagePatternAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_MessagePatternAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_MessagePatternAST_slot := myNested.
		].
	^Newspeak2AST_MessagePatternAST_slot! 
BlockAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_BlockAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_BlockAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_BlockAST_slot := myNested.
		].
	^Newspeak2AST_BlockAST_slot! 
ArrayAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_ArrayAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_ArrayAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_ArrayAST_slot := myNested.
		].
	^Newspeak2AST_ArrayAST_slot! 
CodeBodyAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_CodeBodyAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_CodeBodyAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_CodeBodyAST_slot := myNested.
		].
	^Newspeak2AST_CodeBodyAST_slot! 
NumberAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_NumberAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_NumberAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  LiteralAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_NumberAST_slot := myNested.
		].
	^Newspeak2AST_NumberAST_slot! 
MutableSlotDefAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_MutableSlotDefAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_MutableSlotDefAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  SlotDefAST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_MutableSlotDefAST_slot := myNested.
		].
	^Newspeak2AST_MutableSlotDefAST_slot! 
 usingLib: platform 

 self Newspeak2AST_superInit_usingLib: platform.

 self Newspeak2AST_1_init: platform.

^ self.



! 
MessageAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_MessageAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_MessageAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_MessageAST_slot := myNested.
		].
	^Newspeak2AST_MessageAST_slot! 
OrderedCollection: OrderedCollection_val OrderedCollection := OrderedCollection_val! 
FalseVisitor
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_FalseVisitor_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_FalseVisitor.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  ASTTool)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_FalseVisitor_slot := myNested.
		].
	^Newspeak2AST_FalseVisitor_slot! 
TypeIdAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_TypeIdAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_TypeIdAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_TypeIdAST_slot := myNested.
		].
	^Newspeak2AST_TypeIdAST_slot! 
NamespaceExprAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_NamespaceExprAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_NamespaceExprAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_NamespaceExprAST_slot := myNested.
		].
	^Newspeak2AST_NamespaceExprAST_slot! 
GenericInvocationAST
	| nestedClass enclosingObjectArray myNested depth |
	Newspeak2AST_GenericInvocationAST_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Newspeak2AST 
			nestedMixins at: #Newspeak2AST_GenericInvocationAST.
		myNested := (nestedClass mixin |>  (MixinMetadata_Newspeak2AST Mirror on: self  AST)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Newspeak2AST size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Newspeak2AST at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Newspeak2AST_GenericInvocationAST_slot := myNested.
		].
	^Newspeak2AST_GenericInvocationAST_slot! 
 !
	! (Delta mirrorFor: #Newspeak2AST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST := mmd !
	 usingLib: platform 

^ self basicNew usingLib: platform.



! 
		 !
	Newspeak2AST enclosingObjects: (Array with: nil)!
		Newspeak2AST metadata enclosingMixin: nil !
		Newspeak2AST mixinMetadata: Newspeak2AST metadata !
		Delta define: #Newspeak2AST_ClassHeaderAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' constructor initExprs category classComment superConstructorCall superclassName slots name')
	 classVariables: 'MixinMetadata_Newspeak2AST_ClassHeaderAST EnclosingObjects_Newspeak2AST_ClassHeaderAST')!
	(Delta mirrorFor: #Newspeak2AST_ClassHeaderAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ClassHeaderAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ClassHeaderAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_ClassHeaderAST) methodsFor: 'unclassified'!
	 apply: visitor 

^ visitor classHeaderNode: self.



! 
 Newspeak2AST_ClassHeaderAST_1_init 

 self name:nil.

 self constructor:nil.

 self superclassName:nil.

 self superConstructorCall:nil.

 self slots:nil.

 self classComment:nil.

 self category:nil.

 self initExprs:nil.

^ self.



! 
name: name_val name := name_val! 
superConstructorCall ^superConstructorCall! 
slots ^slots! 
 headerDeclarationEndsWithClosingParenthesis 

^true.



! 
slots: slots_val slots := slots_val! 
 new 

 self Newspeak2AST_ClassHeaderAST_superInit_new.

 self Newspeak2AST_ClassHeaderAST_1_init.

^ self.



! 
category ^category! 
classComment: classComment_val classComment := classComment_val! 
superclassName ^superclassName! 
constructor: constructor_val constructor := constructor_val! 
name ^name! 
category: category_val category := category_val! 
initExprs: initExprs_val initExprs := initExprs_val! 
superConstructorCall: superConstructorCall_val superConstructorCall := superConstructorCall_val! 
constructor ^constructor! 
 Newspeak2AST_ClassHeaderAST_superInit_new 

super  new.

^ self.



! 
initExprs ^initExprs! 
classComment ^classComment! 
superclassName: superclassName_val superclassName := superclassName_val! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ClassHeaderAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ClassHeaderAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ClassHeaderAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ClassHeaderAST. ! 
	Newspeak2AST_ClassHeaderAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_UnaryTypeOpAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' operand operator')
	 classVariables: 'MixinMetadata_Newspeak2AST_UnaryTypeOpAST EnclosingObjects_Newspeak2AST_UnaryTypeOpAST')!
	(Delta mirrorFor: #Newspeak2AST_UnaryTypeOpAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_UnaryTypeOpAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_UnaryTypeOpAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_UnaryTypeOpAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool unaryTypeOpNode: self.



! 
operator: operator_val operator := operator_val! 
 Newspeak2AST_UnaryTypeOpAST_1_init 

 self operand:nil.

 self operator:nil.

^ self.



! 
 new 

 self Newspeak2AST_UnaryTypeOpAST_superInit_new.

 self Newspeak2AST_UnaryTypeOpAST_1_init.

^ self.



! 
 Newspeak2AST_UnaryTypeOpAST_superInit_new 

super  new.

^ self.



! 
operator ^operator! 
operand: operand_val operand := operand_val! 
operand ^operand! 
 !
	! (Delta mirrorFor: #Newspeak2AST_UnaryTypeOpAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_UnaryTypeOpAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_UnaryTypeOpAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_UnaryTypeOpAST. ! 
	Newspeak2AST_UnaryTypeOpAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_BlockAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' body')
	 classVariables: 'MixinMetadata_Newspeak2AST_BlockAST EnclosingObjects_Newspeak2AST_BlockAST')!
	(Delta mirrorFor: #Newspeak2AST_BlockAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_BlockAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_BlockAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_BlockAST) methodsFor: 'unclassified'!
	 isExpressionNode 

^true.



! 
 Newspeak2AST_BlockAST_superInit_new 

super  new.

^ self.



! 
 parameters 

^ self  body parameters.



! 
body ^body! 
 isBlockNode 

^true.



! 
body: body_val body := body_val! 
 Newspeak2AST_BlockAST_1_init 

 self body:nil.

^ self.



! 
 apply: aTool 

^ aTool blockNode: self.



! 
 new 

 self Newspeak2AST_BlockAST_superInit_new.

 self Newspeak2AST_BlockAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_BlockAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_BlockAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_BlockAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_BlockAST. ! 
	Newspeak2AST_BlockAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_MessageAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' sel args')
	 classVariables: 'MixinMetadata_Newspeak2AST_MessageAST EnclosingObjects_Newspeak2AST_MessageAST')!
	(Delta mirrorFor: #Newspeak2AST_MessageAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_MessageAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_MessageAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_MessageAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool messageNode: self.



! 
 isLeaf 

^ self  args isEmpty.



! 
sel ^sel! 
 Newspeak2AST_MessageAST_superInit_new 

super  new.

^ self.



! 
args ^args! 
  send: aSelector with: arguments 

 self assert:[ 

 aSelector isSymbol.

].

 self assert:[ 

 arguments isCollection.

].

 self sel: aSelector; 

 args: arguments.

^ self.



! 
 Newspeak2AST_MessageAST_1_init 

 self sel:nil.

 self args:nil.

^ self.



! 
 isMessageNode 

^true.



! 
sel: sel_val sel := sel_val! 
args: args_val args := args_val! 
 new 

 self Newspeak2AST_MessageAST_superInit_new.

 self Newspeak2AST_MessageAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_MessageAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_MessageAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_MessageAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_MessageAST. ! 
	Newspeak2AST_MessageAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_CascadedSendAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' prevSend')
	 classVariables: 'MixinMetadata_Newspeak2AST_CascadedSendAST EnclosingObjects_Newspeak2AST_CascadedSendAST')!
	(Delta mirrorFor: #Newspeak2AST_CascadedSendAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_CascadedSendAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_CascadedSendAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_CascadedSendAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool cascadedSendNode: self.



! 
prevSend ^prevSend! 
 Newspeak2AST_CascadedSendAST_1_init 

 self prevSend:nil.

^ self.



! 
 isCascadedSendNode 

^true.



! 
prevSend: prevSend_val prevSend := prevSend_val! 
 Newspeak2AST_CascadedSendAST_superInit_new 

super  new.

^ self.



! 
  to: aSend cascade: aMessage 

 self assert:[ 

 aSend isSendNode.

].

 self assert:[ 

 aMessage isMessageNode.

].

 self prevSend: aSend; 

 msg: aMessage.

^ self.



! 
 recv 

^ self prevSend recv.



! 
 new 

 self Newspeak2AST_CascadedSendAST_superInit_new.

 self Newspeak2AST_CascadedSendAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_CascadedSendAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_CascadedSendAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_CascadedSendAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_CascadedSendAST. ! 
	Newspeak2AST_CascadedSendAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_MessagePatternAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' selector typePattern returnType parameters')
	 classVariables: 'MixinMetadata_Newspeak2AST_MessagePatternAST EnclosingObjects_Newspeak2AST_MessagePatternAST')!
	(Delta mirrorFor: #Newspeak2AST_MessagePatternAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_MessagePatternAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_MessagePatternAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_MessagePatternAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool messagePatternNode: self.



! 
 isLeaf 

^ self  parameters isEmpty.



! 
 isMessagePatternNode 

^true.



! 
 Newspeak2AST_MessagePatternAST_superInit_new 

super  new.

^ self.



! 
  selector: s parameters: p returnType: t 

 self selector: s; 

 parameters: p; 

 returnType: t.

^ self.



! 
parameters: parameters_val parameters := parameters_val! 
parameters ^parameters! 
  selector: s returnType: t 

 self selector: s; 

 returnType: t.

^ self.



! 
 Newspeak2AST_MessagePatternAST_1_init 

 self selector:nil.

 self parameters:nil.

 self returnType:nil.

 self typePattern:nil.

^ self.



! 
returnType: returnType_val returnType := returnType_val! 
 new 

 self Newspeak2AST_MessagePatternAST_superInit_new.

 self Newspeak2AST_MessagePatternAST_1_init.

^ self.



! 
typePattern ^typePattern! 
selector: selector_val selector := selector_val! 
  selector: s parameters: p 

 self selector: s; 

 parameters: p.

^ self.



! 
  selector: s parameters: p returnType: t typePattern: tp 

 self selector: s; 

 parameters: p; 

 returnType: t; 

 typePattern: tp.

^ self.



! 
returnType ^returnType! 
selector ^selector! 
typePattern: typePattern_val typePattern := typePattern_val! 
 concreteEnd 

 self typePattern isNil ifFalse:[ 

^ self typePattern concreteEnd.

].

 self returnType isNil ifFalse:[ 

^ self returnType concreteEnd.

].

 self parameters isEmpty ifFalse:[ 

^ self parameters last concreteEnd.

].

^super  concreteEnd.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_MessagePatternAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_MessagePatternAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_MessagePatternAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_MessagePatternAST. ! 
	Newspeak2AST_MessagePatternAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_HeaderProxy as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' declaration')
	 classVariables: 'MixinMetadata_Newspeak2AST_HeaderProxy EnclosingObjects_Newspeak2AST_HeaderProxy')!
	(Delta mirrorFor: #Newspeak2AST_HeaderProxy) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_HeaderProxy) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_HeaderProxy) comment: 'The purpose of this class is to allow languages that do not yet have the class header cleanly separated in their grammar to have a separate object representing their header. It supports a subset of the protocol of ClassHeaderAST, that is sufficient for the headers of such languages. It implements this protocol by forwarding messages to a ClassAST node which it keeps in its declaration instance variable.'!
	! (Delta mirrorFor: #Newspeak2AST_HeaderProxy) methodsFor: 'unclassified'!
	 apply: visitor 

^ visitor classHeaderNode: self.



! 
 Newspeak2AST_HeaderProxy_superInit_new 

super  new.

^ self.



! 
 superConstructorCall 

^[ 

 self  declaration superConstructorCall.

]  on: self MessageNotUnderstood do:[ : ex | 

 ex return:nil.

].



! 
 slots 

^ self instanceSide vars.



! 
 headerDeclarationEndsWithClosingParenthesis 

^false.



! 
 new 

 self Newspeak2AST_HeaderProxy_superInit_new.

 self Newspeak2AST_HeaderProxy_1_init.

^ self.



! 
 category 

^ self declaration category.



! 
 Newspeak2AST_HeaderProxy_1_init 

 self declaration:nil.

^ self.



! 
 instanceSide 

^ self  declaration instanceSide.



! 
 end 

^ self declaration end.



! 
 start 

^ self declaration start.



! 
declaration: declaration_val declaration := declaration_val! 
 vars 

^ self  declaration instanceSide vars.



! 
 superclassName 

^ self declaration superclassName.



! 
 interfaces 

^[ 

 self  declaration instanceSide interfaces.

]  on: self MessageNotUnderstood do:[ : ex | 

 ex return:nil.

].



! 
 name 

^ self declaration name.



! 
 category: c 

^ self declaration category: c.



! 
 connections 

^[ 

 self  declaration instanceSide connections.

]  on: self MessageNotUnderstood do:[ : ex | 

 ex return:nil.

].



! 
 constructor 

^[ 

 self  declaration constructor.

]  on: self MessageNotUnderstood do:[ : ex | 

 ex return:nil.

].



! 
 classComment 

^ self declaration instanceSide classComment.



! 
declaration ^declaration! 
 !
	! (Delta mirrorFor: #Newspeak2AST_HeaderProxy) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_HeaderProxy := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_HeaderProxy := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_HeaderProxy. ! 
	Newspeak2AST_HeaderProxy metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_NumberAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_NumberAST EnclosingObjects_Newspeak2AST_NumberAST')!
	(Delta mirrorFor: #Newspeak2AST_NumberAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_NumberAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_NumberAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_NumberAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool numberNode: self.



! 
 Newspeak2AST_NumberAST_1_init 

^ self.



! 
 Newspeak2AST_NumberAST_superInit_new 

super  new.

^ self.



! 
 isNumberNode 

^true.



! 
 new 

 self Newspeak2AST_NumberAST_superInit_new.

 self Newspeak2AST_NumberAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_NumberAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_NumberAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_NumberAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_NumberAST. ! 
	Newspeak2AST_NumberAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_SideAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' vars categories classComment')
	 classVariables: 'MixinMetadata_Newspeak2AST_SideAST EnclosingObjects_Newspeak2AST_SideAST')!
	(Delta mirrorFor: #Newspeak2AST_SideAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_SideAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_SideAST) comment: 'An AST for one side of a class'!
	! (Delta mirrorFor: #Newspeak2AST_SideAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool sideNode: self.



! 
 nestedClasses 

^ self Array new:0.



! 
classComment ^classComment! 
 varNames 

^ self  vars collect:[ : var | 

 var name.

].



! 
categories ^categories! 
categories: categories_val categories := categories_val! 
  vars: vs cats: cs 

 self vars: vs; 

 categories: cs.

^ self.



! 
classComment: classComment_val classComment := classComment_val! 
 Newspeak2AST_SideAST_1_init 

 self vars:nil.

 self categories:nil.

 self classComment:nil.

^ self.



! 
vars ^vars! 
vars: vars_val vars := vars_val! 
 Newspeak2AST_SideAST_superInit_new 

super  new.

^ self.



! 
 isSideNode 

^true.



! 
 new 

 self Newspeak2AST_SideAST_superInit_new.

 self Newspeak2AST_SideAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_SideAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_SideAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_SideAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_SideAST. ! 
	Newspeak2AST_SideAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_TypeIdAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' name')
	 classVariables: 'MixinMetadata_Newspeak2AST_TypeIdAST EnclosingObjects_Newspeak2AST_TypeIdAST')!
	(Delta mirrorFor: #Newspeak2AST_TypeIdAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_TypeIdAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_TypeIdAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_TypeIdAST) methodsFor: 'unclassified'!
	 apply: visitor 

^ visitor typeIdNode: self.



! 
 Newspeak2AST_TypeIdAST_superInit_new 

super  new.

^ self.



! 
 getName 

^ self  name.



! 
name: name_val name := name_val! 
 Newspeak2AST_TypeIdAST_1_init 

 self name:nil.

^ self.



! 
name ^name! 
 new 

 self Newspeak2AST_TypeIdAST_superInit_new.

 self Newspeak2AST_TypeIdAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_TypeIdAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_TypeIdAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_TypeIdAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_TypeIdAST. ! 
	Newspeak2AST_TypeIdAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_ASTCopier as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_ASTCopier EnclosingObjects_Newspeak2AST_ASTCopier')!
	(Delta mirrorFor: #Newspeak2AST_ASTCopier) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ASTCopier) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ASTCopier) comment: 'A visitor that copies an NS2 AST. Subclasses can override selected methods to produce altered copies.'!
	! (Delta mirrorFor: #Newspeak2AST_ASTCopier) methodsFor: 'unclassified'!
	 variableNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  VariableAST new name: aNode name; 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 literalNode: aNode 

^ aNode class new val: aNode val; 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 stringNode: aNode 

^ self literalNode: aNode.



! 
 binaryTypeOpNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  BinaryTypeOpAST new lOperand:( aNode lOperand apply: self); 

 operator: aNode operator; 

 rOperand:( aNode rOperand apply: self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 numberNode: aNode 

^ self literalNode: aNode.



! 
 cascadedSendNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  CascadedSendAST new  to:( aNode prevSend apply: self) cascade:( aNode msg apply: self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 codeBodyNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  CodeBodyAST new  parameters:( aNode parameters collect:[ : p | 

 p apply: self.

]) temporaries:( aNode temporaries collect:[ : t | 

 t apply: self.

]) statements:( aNode statements collect:[ : s | 

 s apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 Newspeak2AST_ASTCopier_superInit_new 

super  new.

^ self.



! 
 varDeclNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  VarDeclAST  name: aNode name type:( aNode type isNil  ifTrue:[ 

nil.

] ifFalse:[ 

 aNode type apply: self.

]).



! 
 assignmentNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  AssignmentAST new  to:( aNode var apply: self) send:( aNode expr apply: self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 genericInvocationNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  GenericInvocationAST new generic:( aNode generic apply: self); 

 arguments:( aNode arguments collect:[ : a | 

 a apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 symbolNode: aNode 

^ self literalNode: aNode.



! 
 new 

 self Newspeak2AST_ASTCopier_superInit_new.

 self Newspeak2AST_ASTCopier_1_init.

^ self.



! 
 arrayNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  ArrayAST new elements:( aNode elements collect:[ : e | 

 e apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 unaryTypeOpNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  UnaryTypeOpAST new operand:( aNode operand apply: self); 

 operator: aNode operator; 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 blockNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  BlockAST new body:( aNode body apply: self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 messagePatternNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  MessagePatternAST new  selector: aNode selector parameters:( aNode parameters collect:[ : p | 

 p apply: self.

]) returnType:( aNode returnType isNil  ifTrue:[ 

nil.

] ifFalse:[ 

 aNode returnType apply: self.

]) typePattern:( aNode typePattern isNil  ifTrue:[ 

nil.

] ifFalse:[ 

 aNode typePattern apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 slotDefNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  SlotDefAST new slotDecl:( aNode slotDecl apply: self); 

 initializer:( aNode initializer apply; 

 self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 returnStatNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  ReturnStatAST new expr:( aNode expr apply: self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 charNode: aNode 

^ self literalNode: aNode.



! 
 classNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  ClassDeclarationAST new hdr:( aNode hdr apply: self); 

 instanceSide:( aNode instanceSide apply: self); 

 classSide:( aNode classSide apply: self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 typeIdNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  TypeIdAST new name: aNode getName; 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 messageNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  MessageAST new  send: aNode sel with:( aNode args collect:[ : a | 

 a apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 Newspeak2AST_ASTCopier_1_init 

^ self.



! 
 tupleNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  TupleAST new elements:( aNode elements collect:[ : e | 

 e apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 mixinApplication: node 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  MixinApplicationAST new mixinExpr:( node mixinExpr apply: self); 

 superclassExpr:( node superclassExpr apply: self); 

 start: node start; 

 end: node end; 

 concreteStart: node concreteStart; 

 concreteEnd: node concreteEnd.



! 
 methodNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  MethodAST new  pattern:( aNode pattern apply: self) body:( aNode body apply: self) visibility: aNode visibility; 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 sideNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  SideAST new  vars:( aNode vars collect:[ : v | 

 v apply: self.

]) cats:( aNode categories collect:[ : c | 

 c apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 normalSendNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  NormalSendAST new  to:( aNode recv apply: self) send:( aNode msg apply: self); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 typePatternNode: aNode 

^ (EnclosingObjects_Newspeak2AST_ASTCopier at: 1)  TypePatternAST new formals:( aNode formals collect:[ : f | 

 f apply: self.

]); 

 start: aNode start; 

 end: aNode end; 

 concreteStart: aNode concreteStart; 

 concreteEnd: aNode concreteEnd.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ASTCopier) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ASTCopier := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ASTCopier := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ASTCopier. ! 
	Newspeak2AST_ASTCopier metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_MixinApplicationAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' mixinExpr superclassExpr')
	 classVariables: 'MixinMetadata_Newspeak2AST_MixinApplicationAST EnclosingObjects_Newspeak2AST_MixinApplicationAST')!
	(Delta mirrorFor: #Newspeak2AST_MixinApplicationAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_MixinApplicationAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_MixinApplicationAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_MixinApplicationAST) methodsFor: 'unclassified'!
	 apply: visitor 

^ visitor mixinApplication: self.



! 
 Newspeak2AST_MixinApplicationAST_superInit_new 

super  new.

^ self.



! 
mixinExpr ^mixinExpr! 
superclassExpr ^superclassExpr! 
superclassExpr: superclassExpr_val superclassExpr := superclassExpr_val! 
 Newspeak2AST_MixinApplicationAST_1_init 

 self mixinExpr:nil.

 self superclassExpr:nil.

^ self.



! 
mixinExpr: mixinExpr_val mixinExpr := mixinExpr_val! 
 isExpressionNode 

^true.



! 
 new 

 self Newspeak2AST_MixinApplicationAST_superInit_new.

 self Newspeak2AST_MixinApplicationAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_MixinApplicationAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_MixinApplicationAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_MixinApplicationAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_MixinApplicationAST. ! 
	Newspeak2AST_MixinApplicationAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_VarDeclAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' type name')
	 classVariables: 'MixinMetadata_Newspeak2AST_VarDeclAST EnclosingObjects_Newspeak2AST_VarDeclAST')!
	(Delta mirrorFor: #Newspeak2AST_VarDeclAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_VarDeclAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_VarDeclAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_VarDeclAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool varDeclNode: self.



! 
type ^type! 
  Newspeak2AST_VarDeclAST_superInit_name: aName type: aType 

super  new.

^ self.



! 
  name: aName type: aType 

 self  Newspeak2AST_VarDeclAST_superInit_name: aName type: aType.

 self  Newspeak2AST_VarDeclAST_1_init_name: aName type: aType.

^ self.



! 
name: name_val name := name_val! 
  Newspeak2AST_VarDeclAST_1_init_name: aName type: aType 

 self name: aName.

 self type: aType.

^ self.



! 
type: type_val type := type_val! 
 concreteEnd 

 self type isNil ifFalse:[ 

^ self type concreteEnd.

].

^super  concreteEnd.



! 
 isTemporaryAST 

^false.



! 
 isVarDeclNode 

^true.



! 
name ^name! 
 !
	! (Delta mirrorFor: #Newspeak2AST_VarDeclAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_VarDeclAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_VarDeclAST := mmd !
	  name: aName type: aType 

^ self basicNew  name: aName type: aType.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_VarDeclAST. ! 
	Newspeak2AST_VarDeclAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_SendAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' msg')
	 classVariables: 'MixinMetadata_Newspeak2AST_SendAST EnclosingObjects_Newspeak2AST_SendAST')!
	(Delta mirrorFor: #Newspeak2AST_SendAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_SendAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_SendAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_SendAST) methodsFor: 'unclassified'!
	 isExpressionNode 

^true.



! 
msg ^msg! 
 Newspeak2AST_SendAST_1_init: aMsg 

 self msg: aMsg.

^ self.



! 
 isSendNode 

^true.



! 
msg: msg_val msg := msg_val! 
 Newspeak2AST_SendAST_superInit_send: aMsg 

super  new.

^ self.



! 
 send: aMsg 

 self Newspeak2AST_SendAST_superInit_send: aMsg.

 self Newspeak2AST_SendAST_1_init: aMsg.

 self assert:[ 

 aMsg isMessageNode.

].

^ self.



! 
 recv 

^ self subclassResponsibility.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_SendAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_SendAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_SendAST := mmd !
	 send: aMsg 

^ self basicNew send: aMsg.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_SendAST. ! 
	Newspeak2AST_SendAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_ReturnStatAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' expr')
	 classVariables: 'MixinMetadata_Newspeak2AST_ReturnStatAST EnclosingObjects_Newspeak2AST_ReturnStatAST')!
	(Delta mirrorFor: #Newspeak2AST_ReturnStatAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ReturnStatAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ReturnStatAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_ReturnStatAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool returnStatNode: self.



! 
expr ^expr! 
 isReturnStatNode 

^true.



! 
expr: expr_val expr := expr_val! 
 Newspeak2AST_ReturnStatAST_1_init 

 self expr:nil.

^ self.



! 
 Newspeak2AST_ReturnStatAST_superInit_new 

super  new.

^ self.



! 
 new 

 self Newspeak2AST_ReturnStatAST_superInit_new.

 self Newspeak2AST_ReturnStatAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ReturnStatAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ReturnStatAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ReturnStatAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ReturnStatAST. ! 
	Newspeak2AST_ReturnStatAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_ClassDeclarationAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' instanceSide classSide hdr')
	 classVariables: 'MixinMetadata_Newspeak2AST_ClassDeclarationAST EnclosingObjects_Newspeak2AST_ClassDeclarationAST')!
	(Delta mirrorFor: #Newspeak2AST_ClassDeclarationAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ClassDeclarationAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ClassDeclarationAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_ClassDeclarationAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool classNode: self.



! 
hdr ^hdr! 
 Newspeak2AST_ClassDeclarationAST_1_init 

 self hdr:nil.

 self instanceSide:nil.

 self classSide:nil.

^ self.



! 
instanceSide: instanceSide_val instanceSide := instanceSide_val! 
 category 

^ self  hdr category.



! 
classSide: classSide_val classSide := classSide_val! 
instanceSide ^instanceSide! 
hdr: hdr_val hdr := hdr_val! 
 classComment 

^ self  hdr classComment.



! 
 superclassName 

^ self  hdr superclassName.



! 
classSide ^classSide! 
 Newspeak2AST_ClassDeclarationAST_superInit_new 

super  new.

^ self.



! 
 name 

^ self  hdr name.



! 
 new 

 self Newspeak2AST_ClassDeclarationAST_superInit_new.

 self Newspeak2AST_ClassDeclarationAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ClassDeclarationAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ClassDeclarationAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ClassDeclarationAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ClassDeclarationAST. ! 
	Newspeak2AST_ClassDeclarationAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_MethodAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' body visibility pattern')
	 classVariables: 'MixinMetadata_Newspeak2AST_MethodAST EnclosingObjects_Newspeak2AST_MethodAST')!
	(Delta mirrorFor: #Newspeak2AST_MethodAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_MethodAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_MethodAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_MethodAST) methodsFor: 'unclassified'!
	 isMethodNode 

^true.



! 
visibility ^visibility! 
  pattern: p body: b visibility: v 

 self assert:[ 

 p isMessagePatternNode.

].

 self assert:[ 

 b isCodeBodyNode.

].

 self pattern: p; 

 body: b; 

 visibility: v.

^ self.



! 
body ^body! 
visibility: visibility_val visibility := visibility_val! 
pattern ^pattern! 
body: body_val body := body_val! 
 selector 

^ self pattern selector.



! 
 Newspeak2AST_MethodAST_superInit_new 

super  new.

^ self.



! 
 Newspeak2AST_MethodAST_1_init 

 self pattern:nil.

 self body:nil.

 self visibility:nil.

^ self.



! 
 apply: aTool 

^ aTool methodNode: self.



! 
pattern: pattern_val pattern := pattern_val! 
 new 

 self Newspeak2AST_MethodAST_superInit_new.

 self Newspeak2AST_MethodAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_MethodAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_MethodAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_MethodAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_MethodAST. ! 
	Newspeak2AST_MethodAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_StringAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_StringAST EnclosingObjects_Newspeak2AST_StringAST')!
	(Delta mirrorFor: #Newspeak2AST_StringAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_StringAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_StringAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_StringAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool stringNode: self.



! 
 Newspeak2AST_StringAST_1_init 

^ self.



! 
 isStringNode 

^true.



! 
 Newspeak2AST_StringAST_superInit_new 

super  new.

^ self.



! 
 new 

 self Newspeak2AST_StringAST_superInit_new.

 self Newspeak2AST_StringAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_StringAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_StringAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_StringAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_StringAST. ! 
	Newspeak2AST_StringAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_LiteralAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' val')
	 classVariables: 'MixinMetadata_Newspeak2AST_LiteralAST EnclosingObjects_Newspeak2AST_LiteralAST')!
	(Delta mirrorFor: #Newspeak2AST_LiteralAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_LiteralAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_LiteralAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_LiteralAST) methodsFor: 'unclassified'!
	 isExpressionNode 

^true.



! 
 isLiteralNode 

^true.



! 
val ^val! 
val: val_val val := val_val! 
 Newspeak2AST_LiteralAST_1_init 

 self val:nil.

^ self.



! 
 Newspeak2AST_LiteralAST_superInit_new 

super  new.

^ self.



! 
 isLeaf 

^true.



! 
 new 

 self Newspeak2AST_LiteralAST_superInit_new.

 self Newspeak2AST_LiteralAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_LiteralAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_LiteralAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_LiteralAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_LiteralAST. ! 
	Newspeak2AST_LiteralAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_ClassAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' instanceSide name superclassName classSide category')
	 classVariables: 'MixinMetadata_Newspeak2AST_ClassAST EnclosingObjects_Newspeak2AST_ClassAST')!
	(Delta mirrorFor: #Newspeak2AST_ClassAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ClassAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ClassAST) comment: 'The AST for a class definition'!
	! (Delta mirrorFor: #Newspeak2AST_ClassAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool classNode: self.



! 
classSide: classSide_val classSide := classSide_val! 
 hdr 

^ (EnclosingObjects_Newspeak2AST_ClassAST at: 1)  HeaderProxy new declaration: self.



! 
category ^category! 
instanceSide ^instanceSide! 
category: category_val category := category_val! 
superclassName ^superclassName! 
 isClassNode 

^true.



! 
classSide ^classSide! 
name ^name! 
 new 

 self Newspeak2AST_ClassAST_superInit_new.

 self Newspeak2AST_ClassAST_1_init.

^ self.



! 
 classComment 

^ self instanceSide classComment.



! 
name: name_val name := name_val! 
instanceSide: instanceSide_val instanceSide := instanceSide_val! 
superclassName: superclassName_val superclassName := superclassName_val! 
 Newspeak2AST_ClassAST_superInit_new 

super  new.

^ self.



! 
 Newspeak2AST_ClassAST_1_init 

 self name:nil.

 self superclassName:nil.

 self instanceSide:nil.

 self classSide:nil.

 self category:nil.

^ self.



! 
  forClass: n super: s instSide: b classSide: cb 

 self name: n; 

 superclassName: s; 

 instanceSide: b; 

 classSide: cb.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ClassAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ClassAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ClassAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ClassAST. ! 
	Newspeak2AST_ClassAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_CategoryAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' methods name')
	 classVariables: 'MixinMetadata_Newspeak2AST_CategoryAST EnclosingObjects_Newspeak2AST_CategoryAST')!
	(Delta mirrorFor: #Newspeak2AST_CategoryAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_CategoryAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_CategoryAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_CategoryAST) methodsFor: 'unclassified'!
	methods ^methods! 
 Newspeak2AST_CategoryAST_superInit_new 

super  new.

^ self.



! 
methods: methods_val methods := methods_val! 
name: name_val name := name_val! 
 Newspeak2AST_CategoryAST_1_init 

 self name:nil.

 self methods:nil.

^ self.



! 
name ^name! 
 new 

 self Newspeak2AST_CategoryAST_superInit_new.

 self Newspeak2AST_CategoryAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_CategoryAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_CategoryAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_CategoryAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_CategoryAST. ! 
	Newspeak2AST_CategoryAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_AST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' concStart concEnd endPosition startPosition')
	 classVariables: 'MixinMetadata_Newspeak2AST_AST EnclosingObjects_Newspeak2AST_AST')!
	(Delta mirrorFor: #Newspeak2AST_AST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_AST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_AST) comment: 'An abstract syntax tree. An AST knows where in the source code the corresponding construct is.  The slots start and end are indices into the source code marking that position.

In some cases, the corresponding construct may be associated with tokens that are not strictly part of the abstract syntax. For example, in

 (foo) 

the parentheses are not part of the abstract syntax but foo is. Nonetheless, it may be useful to know where the parens are, since they are strongly associated withthe AST. We use the slots concStart and concEnd for that purpose.'!
	! (Delta mirrorFor: #Newspeak2AST_AST) methodsFor: 'unclassified'!
	concStart: concStart_val concStart := concStart_val! 
 end: i 

 self  endPosition: i.

^ self.



! 
concEnd ^concEnd! 
endPosition: endPosition_val endPosition := endPosition_val! 
 end 

^ self  endPosition.



! 
 Newspeak2AST_AST_superInit_new 

super  new.

^ self.



! 
 new 

 self Newspeak2AST_AST_superInit_new.

 self Newspeak2AST_AST_1_init.

^ self.



! 
 isMethodNode 

^false.



! 
 isCodeBodyNode 

^false.



! 
 left: leftmostSubtree 

 self  concStart ifNil:[ 

 self  concStart: leftmostSubtree concreteStart.

].

 self  start =0 ifTrue:[ 

 self  startPosition: self  concStart.

].

^ self.



! 
 isStringNode 

^false.



! 
 isAssignmentNode 

^false.



! 
startPosition ^startPosition! 
 isSymbolNode 

^false.



! 
 right: rightmostSubtree 

 self  concEnd ifNil:[ 

 self  concEnd: rightmostSubtree concreteEnd.

].

 self  end =0 ifTrue:[ 

 self  endPosition: self  concEnd.

].

^ self.



! 
 isTupleNode 

^false.



! 
 isExpressionNode 

^false.



! 
 concreteEnd: i 

 self  concEnd: i.

^ self.



! 
 Newspeak2AST_AST_1_init 

 self startPosition:0.

 self endPosition:0.

 self concStart:nil.

 self concEnd:nil.

^ self.



! 
 isMessagePatternNode 

^false.



! 
 isVariableNode 

^false.



! 
 concreteStart: i 

 self  concStart: i.

^ self.



! 
 isBlockNode 

^false.



! 
 isCharNode 

^false.



! 
 isLiteralNode 

^false.



! 
 start 

^ self  startPosition.



! 
 apply: aTool 

^ self subclassResponsibility.



! 
 isArrayNode 

^false.



! 
 isClassNode 

^false.



! 
 isMessageNode 

^false.



! 
 isReturnStatNode 

^false.



! 
 start: i 

 self  startPosition: i.

^ self.



! 
 concreteStart 

^ self  concStart isNil  ifTrue:[ 

 self start.

] ifFalse:[ 

 self  concStart.

].



! 
 isCascadedSendNode 

^false.



! 
 isLeaf 

^false.



! 
concStart ^concStart! 
endPosition ^endPosition! 
 isSendNode 

^false.



! 
 isNormalSendNode 

^false.



! 
 concreteEnd 

^ self  concEnd isNil  ifTrue:[ 

 self end.

] ifFalse:[ 

 self  concEnd.

].



! 
 isAST 

^true.



! 
 isNumberNode 

^false.



! 
 isVarDeclNode 

^false.



! 
 isSideNode 

^false.



! 
startPosition: startPosition_val startPosition := startPosition_val! 
concEnd: concEnd_val concEnd := concEnd_val! 
 !
	! (Delta mirrorFor: #Newspeak2AST_AST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_AST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_AST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_AST. ! 
	Newspeak2AST_AST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_TypePatternAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' formals')
	 classVariables: 'MixinMetadata_Newspeak2AST_TypePatternAST EnclosingObjects_Newspeak2AST_TypePatternAST')!
	(Delta mirrorFor: #Newspeak2AST_TypePatternAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_TypePatternAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_TypePatternAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_TypePatternAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool typePatternNode: self.



! 
formals: formals_val formals := formals_val! 
 Newspeak2AST_TypePatternAST_superInit_new 

super  new.

^ self.



! 
 Newspeak2AST_TypePatternAST_1_init 

 self formals:nil.

^ self.



! 
formals ^formals! 
 new 

 self Newspeak2AST_TypePatternAST_superInit_new.

 self Newspeak2AST_TypePatternAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_TypePatternAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_TypePatternAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_TypePatternAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_TypePatternAST. ! 
	Newspeak2AST_TypePatternAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_VariableAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' name')
	 classVariables: 'MixinMetadata_Newspeak2AST_VariableAST EnclosingObjects_Newspeak2AST_VariableAST')!
	(Delta mirrorFor: #Newspeak2AST_VariableAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_VariableAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_VariableAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_VariableAST) methodsFor: 'unclassified'!
	 isExpressionNode 

^true.



! 
 Newspeak2AST_VariableAST_superInit_new 

super  new.

^ self.



! 
name ^name! 
 isVariableNode 

^true.



! 
 Newspeak2AST_VariableAST_1_init 

 self name:nil.

^ self.



! 
name: name_val name := name_val! 
 apply: aTool 

^ aTool variableNode: self.



! 
 new 

 self Newspeak2AST_VariableAST_superInit_new.

 self Newspeak2AST_VariableAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_VariableAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_VariableAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_VariableAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_VariableAST. ! 
	Newspeak2AST_VariableAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_ASTTool as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_ASTTool EnclosingObjects_Newspeak2AST_ASTTool')!
	(Delta mirrorFor: #Newspeak2AST_ASTTool) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ASTTool) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ASTTool) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_ASTTool) methodsFor: 'unclassified'!
	 Newspeak2AST_ASTTool_superInit_new 

super  new.

^ self.



! 
 numberNode: aNode 

 self subclassResponsibility.

^ self.



! 
 cascadedSendNode: aNode 

 self subclassResponsibility.

^ self.



! 
 codeBodyNode: aNode 

 self subclassResponsibility.

^ self.



! 
 returnStatNode: aNode 

 self subclassResponsibility.

^ self.



! 
 symbolNode: aNode 

 self subclassResponsibility.

^ self.



! 
 stringNode: aNode 

 self subclassResponsibility.

^ self.



! 
 new 

 self Newspeak2AST_ASTTool_superInit_new.

 self Newspeak2AST_ASTTool_1_init.

^ self.



! 
 methodNode: aNode 

 self subclassResponsibility.

^ self.



! 
 blockNode: aNode 

 self subclassResponsibility.

^ self.



! 
 messagePatternNode: aNode 

 self subclassResponsibility.

^ self.



! 
 variableNode: aNode 

 self subclassResponsibility.

^ self.



! 
 charNode: aNode 

 self subclassResponsibility.

^ self.



! 
 classNode: aNode 

 self subclassResponsibility.

^ self.



! 
 messageNode: aNode 

 self subclassResponsibility.

^ self.



! 
 tupleNode: aNode 

 self subclassResponsibility.

^ self.



! 
 Newspeak2AST_ASTTool_1_init 

^ self.



! 
 mixinApplication: node 

 self subclassResponsibility.

^ self.



! 
 sideNode: aNode 

 self subclassResponsibility.

^ self.



! 
 normalSendNode: aNode 

 self subclassResponsibility.

^ self.



! 
 varDeclNode: aNode 

 self subclassResponsibility.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ASTTool) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ASTTool := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ASTTool := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ASTTool. ! 
	Newspeak2AST_ASTTool metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_CharAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_CharAST EnclosingObjects_Newspeak2AST_CharAST')!
	(Delta mirrorFor: #Newspeak2AST_CharAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_CharAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_CharAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_CharAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool charNode: self.



! 
 isCharNode 

^true.



! 
 Newspeak2AST_CharAST_1_init 

^ self.



! 
 Newspeak2AST_CharAST_superInit_new 

super  new.

^ self.



! 
 new 

 self Newspeak2AST_CharAST_superInit_new.

 self Newspeak2AST_CharAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_CharAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_CharAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_CharAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_CharAST. ! 
	Newspeak2AST_CharAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_MutableSlotDefAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_MutableSlotDefAST EnclosingObjects_Newspeak2AST_MutableSlotDefAST')!
	(Delta mirrorFor: #Newspeak2AST_MutableSlotDefAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_MutableSlotDefAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_MutableSlotDefAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_MutableSlotDefAST) methodsFor: 'unclassified'!
	 isMutableSlot 

^true.



! 
 Newspeak2AST_MutableSlotDefAST_superInit_new 

super  new.

^ self.



! 
 Newspeak2AST_MutableSlotDefAST_1_init 

^ self.



! 
 isMutable 

^true.



! 
 new 

 self Newspeak2AST_MutableSlotDefAST_superInit_new.

 self Newspeak2AST_MutableSlotDefAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_MutableSlotDefAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_MutableSlotDefAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_MutableSlotDefAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_MutableSlotDefAST. ! 
	Newspeak2AST_MutableSlotDefAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_SlotDefAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' initializer slotDecl')
	 classVariables: 'MixinMetadata_Newspeak2AST_SlotDefAST EnclosingObjects_Newspeak2AST_SlotDefAST')!
	(Delta mirrorFor: #Newspeak2AST_SlotDefAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_SlotDefAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_SlotDefAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_SlotDefAST) methodsFor: 'unclassified'!
	 apply: visitor 

^ visitor slotDefNode: self.



! 
 type 

^ self  slotDecl type.



! 
initializer ^initializer! 
slotDecl: slotDecl_val slotDecl := slotDecl_val! 
 isMutable 

 self subclassResponsibility.

^ self.



! 
 Newspeak2AST_SlotDefAST_1_init 

 self slotDecl:nil.

 self initializer:nil.

^ self.



! 
 isMutableSlot 

 self subclassResponsibility.

^ self.



! 
initializer: initializer_val initializer := initializer_val! 
 Newspeak2AST_SlotDefAST_superInit_new 

super  new.

^ self.



! 
slotDecl ^slotDecl! 
 name 

^ self  slotDecl name.



! 
 new 

 self Newspeak2AST_SlotDefAST_superInit_new.

 self Newspeak2AST_SlotDefAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_SlotDefAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_SlotDefAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_SlotDefAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_SlotDefAST. ! 
	Newspeak2AST_SlotDefAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_SymbolAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_SymbolAST EnclosingObjects_Newspeak2AST_SymbolAST')!
	(Delta mirrorFor: #Newspeak2AST_SymbolAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_SymbolAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_SymbolAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_SymbolAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool symbolNode: self.



! 
 isSymbolNode 

^true.



! 
 Newspeak2AST_SymbolAST_superInit_new 

super  new.

^ self.



! 
 Newspeak2AST_SymbolAST_1_init 

^ self.



! 
 new 

 self Newspeak2AST_SymbolAST_superInit_new.

 self Newspeak2AST_SymbolAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_SymbolAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_SymbolAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_SymbolAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_SymbolAST. ! 
	Newspeak2AST_SymbolAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_NSSideAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' nestedClasses')
	 classVariables: 'MixinMetadata_Newspeak2AST_NSSideAST EnclosingObjects_Newspeak2AST_NSSideAST')!
	(Delta mirrorFor: #Newspeak2AST_NSSideAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_NSSideAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_NSSideAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_NSSideAST) methodsFor: 'unclassified'!
	nestedClasses: nestedClasses_val nestedClasses := nestedClasses_val! 
nestedClasses ^nestedClasses! 
 Newspeak2AST_NSSideAST_1_init 

 self nestedClasses:nil.

^ self.



! 
 Newspeak2AST_NSSideAST_superInit_new 

super  new.

^ self.



! 
 new 

 self Newspeak2AST_NSSideAST_superInit_new.

 self Newspeak2AST_NSSideAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_NSSideAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_NSSideAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_NSSideAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_NSSideAST. ! 
	Newspeak2AST_NSSideAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_AssignmentAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' expr var')
	 classVariables: 'MixinMetadata_Newspeak2AST_AssignmentAST EnclosingObjects_Newspeak2AST_AssignmentAST')!
	(Delta mirrorFor: #Newspeak2AST_AssignmentAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_AssignmentAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_AssignmentAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_AssignmentAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool assignmentNode: self.



! 
var ^var! 
 Newspeak2AST_AssignmentAST_1_init 

 self var:nil.

 self expr:nil.

^ self.



! 
 isAssignmentNode 

^true.



! 
expr ^expr! 
 Newspeak2AST_AssignmentAST_superInit_new 

super  new.

^ self.



! 
 isExpressionNode 

^true.



! 
expr: expr_val expr := expr_val! 
var: var_val var := var_val! 
  to: aVar assign: anExpr 

 self assert:[ 

 aVar isVariableNode.

].

 self assert:[ 

 anExpr isExpressionNode.

].

 self var: aVar; 

 expr: anExpr.

 self start: self  var start.

 self end: anExpr end.

^ self.



! 
 new 

 self Newspeak2AST_AssignmentAST_superInit_new.

 self Newspeak2AST_AssignmentAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_AssignmentAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_AssignmentAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_AssignmentAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_AssignmentAST. ! 
	Newspeak2AST_AssignmentAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_NamespaceAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' body exports name')
	 classVariables: 'MixinMetadata_Newspeak2AST_NamespaceAST EnclosingObjects_Newspeak2AST_NamespaceAST')!
	(Delta mirrorFor: #Newspeak2AST_NamespaceAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_NamespaceAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_NamespaceAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_NamespaceAST) methodsFor: 'unclassified'!
	exports: exports_val exports := exports_val! 
body ^body! 
 Newspeak2AST_NamespaceAST_1_init 

 self name:nil.

 self body:nil.

 self exports:nil.

^ self.



! 
body: body_val body := body_val! 
name: name_val name := name_val! 
 Newspeak2AST_NamespaceAST_superInit_new 

super  new.

^ self.



! 
exports ^exports! 
name ^name! 
 new 

 self Newspeak2AST_NamespaceAST_superInit_new.

 self Newspeak2AST_NamespaceAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_NamespaceAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_NamespaceAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_NamespaceAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_NamespaceAST. ! 
	Newspeak2AST_NamespaceAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_TupleAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_TupleAST EnclosingObjects_Newspeak2AST_TupleAST')!
	(Delta mirrorFor: #Newspeak2AST_TupleAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_TupleAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_TupleAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_TupleAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool tupleNode: self.



! 
 Newspeak2AST_TupleAST_superInit_new 

super  new.

^ self.



! 
 Newspeak2AST_TupleAST_1_init 

^ self.



! 
 isArrayNode 

^false.



! 
 isTupleNode 

true.

^ self.



! 
 new 

 self Newspeak2AST_TupleAST_superInit_new.

 self Newspeak2AST_TupleAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_TupleAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_TupleAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_TupleAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_TupleAST. ! 
	Newspeak2AST_TupleAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_FalseVisitor as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_FalseVisitor EnclosingObjects_Newspeak2AST_FalseVisitor')!
	(Delta mirrorFor: #Newspeak2AST_FalseVisitor) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_FalseVisitor) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_FalseVisitor) comment: 'A visitor that returns false for all nodes.  This is useful when one needs to extend the set of AST types with a new type, and want to be able to determin eif an object is an instance of the new type. Instead of changing AST to support yet another isX predicate, we define a visitor that answers true when visitimg the new type, and false otherwise. It''s easy to define such a visitor by extending this class.'!
	! (Delta mirrorFor: #Newspeak2AST_FalseVisitor) methodsFor: 'unclassified'!
	 stringNode: aNode 

^false.



! 
 numberNode: aNode 

^false.



! 
 cascadedSendNode: aNode 

^false.



! 
 codeBodyNode: aNode 

^false.



! 
 returnStatNode: aNode 

^false.



! 
 assignmentNode: node 

^false.



! 
 symbolNode: aNode 

^false.



! 
 new 

 self Newspeak2AST_FalseVisitor_superInit_new.

 self Newspeak2AST_FalseVisitor_1_init.

^ self.



! 
 methodNode: aNode 

^false.



! 
 blockNode: aNode 

^false.



! 
 messagePatternNode: aNode 

^false.



! 
 variableNode: aNode 

^false.



! 
 charNode: aNode 

^false.



! 
 classNode: aNode 

^false.



! 
 Newspeak2AST_FalseVisitor_1_init 

^ self.



! 
 messageNode: aNode 

^false.



! 
 tupleNode: aNode 

^false.



! 
 mixinApplication: node 

^false.



! 
 Newspeak2AST_FalseVisitor_superInit_new 

super  new.

^ self.



! 
 sideNode: aNode 

^false.



! 
 normalSendNode: aNode 

^false.



! 
 varDeclNode: aNode 

^false.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_FalseVisitor) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_FalseVisitor := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_FalseVisitor := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_FalseVisitor. ! 
	Newspeak2AST_FalseVisitor metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_ArrayAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' elements')
	 classVariables: 'MixinMetadata_Newspeak2AST_ArrayAST EnclosingObjects_Newspeak2AST_ArrayAST')!
	(Delta mirrorFor: #Newspeak2AST_ArrayAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ArrayAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ArrayAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_ArrayAST) methodsFor: 'unclassified'!
	 isExpressionNode 

^true.



! 
 Newspeak2AST_ArrayAST_superInit_new 

super  new.

^ self.



! 
 apply: aTool 

^ aTool arrayNode: self.



! 
 Newspeak2AST_ArrayAST_1_init 

 self elements:nil.

^ self.



! 
 isArrayNode 

^true.



! 
elements ^elements! 
elements: elements_val elements := elements_val! 
 new 

 self Newspeak2AST_ArrayAST_superInit_new.

 self Newspeak2AST_ArrayAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ArrayAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ArrayAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ArrayAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ArrayAST. ! 
	Newspeak2AST_ArrayAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_NormalSendAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' recv')
	 classVariables: 'MixinMetadata_Newspeak2AST_NormalSendAST EnclosingObjects_Newspeak2AST_NormalSendAST')!
	(Delta mirrorFor: #Newspeak2AST_NormalSendAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_NormalSendAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_NormalSendAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_NormalSendAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool normalSendNode: self.



! 
 Newspeak2AST_NormalSendAST_1_init 

 self recv:nil.

^ self.



! 
 Newspeak2AST_NormalSendAST_superInit_new 

super  new.

^ self.



! 
recv: recv_val recv := recv_val! 
 isNormalSendNode 

^true.



! 
recv ^recv! 
  to: anExpression send: aMessage 

 self assert:[ 

 anExpression isExpressionNode.

].

 self assert:[ 

 aMessage isMessageNode.

].

 self recv: anExpression; 

 msg: aMessage.

^ self.



! 
 new 

 self Newspeak2AST_NormalSendAST_superInit_new.

 self Newspeak2AST_NormalSendAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_NormalSendAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_NormalSendAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_NormalSendAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_NormalSendAST. ! 
	Newspeak2AST_NormalSendAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_NamespaceExprAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' expr fullName')
	 classVariables: 'MixinMetadata_Newspeak2AST_NamespaceExprAST EnclosingObjects_Newspeak2AST_NamespaceExprAST')!
	(Delta mirrorFor: #Newspeak2AST_NamespaceExprAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_NamespaceExprAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_NamespaceExprAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_NamespaceExprAST) methodsFor: 'unclassified'!
	 Newspeak2AST_NamespaceExprAST_1_init 

 self fullName:nil.

 self expr:nil.

^ self.



! 
expr ^expr! 
fullName ^fullName! 
 Newspeak2AST_NamespaceExprAST_superInit_new 

super  new.

^ self.



! 
expr: expr_val expr := expr_val! 
fullName: fullName_val fullName := fullName_val! 
 new 

 self Newspeak2AST_NamespaceExprAST_superInit_new.

 self Newspeak2AST_NamespaceExprAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_NamespaceExprAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_NamespaceExprAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_NamespaceExprAST := mmd !
	  name: fn expression: e 

^ self new initialize fullName: fn; 

 expr: e.



! 
		 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_NamespaceExprAST. ! 
	Newspeak2AST_NamespaceExprAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_ImmutableSlotDefAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Newspeak2AST_ImmutableSlotDefAST EnclosingObjects_Newspeak2AST_ImmutableSlotDefAST')!
	(Delta mirrorFor: #Newspeak2AST_ImmutableSlotDefAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_ImmutableSlotDefAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_ImmutableSlotDefAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_ImmutableSlotDefAST) methodsFor: 'unclassified'!
	 Newspeak2AST_ImmutableSlotDefAST_1_init 

^ self.



! 
 isMutableSlot 

^false.



! 
 Newspeak2AST_ImmutableSlotDefAST_superInit_new 

super  new.

^ self.



! 
 isMutable 

^false.



! 
 new 

 self Newspeak2AST_ImmutableSlotDefAST_superInit_new.

 self Newspeak2AST_ImmutableSlotDefAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_ImmutableSlotDefAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_ImmutableSlotDefAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_ImmutableSlotDefAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_ImmutableSlotDefAST. ! 
	Newspeak2AST_ImmutableSlotDefAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_BinaryTypeOpAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' operator lOperand rOperand')
	 classVariables: 'MixinMetadata_Newspeak2AST_BinaryTypeOpAST EnclosingObjects_Newspeak2AST_BinaryTypeOpAST')!
	(Delta mirrorFor: #Newspeak2AST_BinaryTypeOpAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_BinaryTypeOpAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_BinaryTypeOpAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_BinaryTypeOpAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool binaryTypeOpNode: self.



! 
operator ^operator! 
lOperand ^lOperand! 
lOperand: lOperand_val lOperand := lOperand_val! 
 Newspeak2AST_BinaryTypeOpAST_1_init 

 self lOperand:nil.

 self rOperand:nil.

 self operator:nil.

^ self.



! 
rOperand: rOperand_val rOperand := rOperand_val! 
 Newspeak2AST_BinaryTypeOpAST_superInit_new 

super  new.

^ self.



! 
rOperand ^rOperand! 
 new 

 self Newspeak2AST_BinaryTypeOpAST_superInit_new.

 self Newspeak2AST_BinaryTypeOpAST_1_init.

^ self.



! 
operator: operator_val operator := operator_val! 
 !
	! (Delta mirrorFor: #Newspeak2AST_BinaryTypeOpAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_BinaryTypeOpAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_BinaryTypeOpAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_BinaryTypeOpAST. ! 
	Newspeak2AST_BinaryTypeOpAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_GenericInvocationAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' arguments generic')
	 classVariables: 'MixinMetadata_Newspeak2AST_GenericInvocationAST EnclosingObjects_Newspeak2AST_GenericInvocationAST')!
	(Delta mirrorFor: #Newspeak2AST_GenericInvocationAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_GenericInvocationAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_GenericInvocationAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_GenericInvocationAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool genericInvocationNode: self.



! 
generic ^generic! 
arguments: arguments_val arguments := arguments_val! 
 Newspeak2AST_GenericInvocationAST_1_init 

 self generic:nil.

 self arguments:nil.

^ self.



! 
generic: generic_val generic := generic_val! 
arguments ^arguments! 
 Newspeak2AST_GenericInvocationAST_superInit_new 

super  new.

^ self.



! 
 new 

 self Newspeak2AST_GenericInvocationAST_superInit_new.

 self Newspeak2AST_GenericInvocationAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_GenericInvocationAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_GenericInvocationAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_GenericInvocationAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_GenericInvocationAST. ! 
	Newspeak2AST_GenericInvocationAST metadata enclosingMixin: Newspeak2AST !
	Delta define: #Newspeak2AST_CodeBodyAST as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' statements temporaries parameters')
	 classVariables: 'MixinMetadata_Newspeak2AST_CodeBodyAST EnclosingObjects_Newspeak2AST_CodeBodyAST')!
	(Delta mirrorFor: #Newspeak2AST_CodeBodyAST) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Newspeak2AST_CodeBodyAST) group: 'newspeak'!
	(Delta mirrorFor: #Newspeak2AST_CodeBodyAST) comment: #''!
	! (Delta mirrorFor: #Newspeak2AST_CodeBodyAST) methodsFor: 'unclassified'!
	 apply: aTool 

^ aTool codeBodyNode: self.



! 
 isCodeBodyNode 

^true.



! 
  parameters: pars temporaries: temps statements: stats 

 self assert:[ 

 pars isCollection.

].

 self assert:[ 

 temps isCollection.

].

 self assert:[ 

 stats isCollection.

].

 self parameters: pars; 

 temporaries: temps; 

 statements: stats.

^ self.



! 
parameters ^parameters! 
statements: statements_val statements := statements_val! 
temporaries: temporaries_val temporaries := temporaries_val! 
parameters: parameters_val parameters := parameters_val! 
statements ^statements! 
 Newspeak2AST_CodeBodyAST_superInit_new 

super  new.

^ self.



! 
  temporaries: temps statements: stats 

 self assert:[ 

 temps isCollection.

].

 self assert:[ 

 stats isCollection.

].

 self parameters: (EnclosingObjects_Newspeak2AST_CodeBodyAST at: 1)  OrderedCollection new; 

 temporaries: temps; 

 statements: stats.

^ self.



! 
temporaries ^temporaries! 
 Newspeak2AST_CodeBodyAST_1_init 

 self parameters:nil.

 self temporaries:nil.

 self statements:nil.

^ self.



! 
 new 

 self Newspeak2AST_CodeBodyAST_superInit_new.

 self Newspeak2AST_CodeBodyAST_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Newspeak2AST_CodeBodyAST) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Newspeak2AST_CodeBodyAST := eos !
	mixinMetadata: mmd MixinMetadata_Newspeak2AST_CodeBodyAST := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Newspeak2AST metadata addNestedClass: Newspeak2AST_CodeBodyAST. ! 
	Newspeak2AST_CodeBodyAST metadata enclosingMixin: Newspeak2AST !
	