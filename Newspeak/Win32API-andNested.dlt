Delta define: #Win32API as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' Comdlg32DLL Win32API_UserLibrary_slot Win32API_Process_slot UserDLL Win32API_GDIplus_slot CrLfFileStream MSG REQRESIZE Win32API_File_slot WINDOWPOS WNDCLASS PROCESS_INFORMATION SCROLLINFO POINT GDIplusFlatDLL PAINTSTRUCT Win32API_KernelLibrary_slot RECT GiveUp GDIDLL Win32API_GDIplusLibrary_slot Win32API_Pipe_slot Win32API_Win32Function_slot Win32API_WinLibrary_slot FIND_DATA Win32API_MsimgLibrary_slot MSGFILTER KernelDLL WCharAlien Win32API_Comdlg32Library_slot WindowProc Delay CHARFORMAT2 SECURITY_ATTRIBUTES CHARFORMAT TRIVERTEX Win32API_GDILibrary_slot MsimgDLL OPENFILENAME GRADIENT_RECT TRACKMOUSEEVENT STARTUPINFO PARAFORMAT CHARRANGE FileDirectory NMHDR Win32API_CommonDataTypes_slot')
	 classVariables: 'MixinMetadata_Win32API EnclosingObjects_Win32API')!
	(Delta mirrorFor: #Win32API) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API) group: 'newspeak'!
	(Delta mirrorFor: #Win32API) comment: 'This module provides access to select functions of Windows API from the following libraries: Kernel, GDI, User, Msimg32 and GDI+.

All of those functions are defined by nested subclasses of WinLibrary. For example, the functions from the User DLL are defined by the UserLibrary class. The module holds an instance of UserLibrary in its UserDLL slot. The same pattern is used for all the other libraries.

Most functions defined by the nested libraries are re-exported at the module level, so that it is possible to retrieve them by sending messages to the module. For example, instead of sending #GetLastError to KernelDLL it is possible to send the same message directly to Win32API instance. An exception to this rule is GDIplusFlatDLL. Its functions are not re-exported. Intead, the GDIplus inner module provides a class-based Newspeak wrapper interface, similar to that of the official C++ based GDI+ API.

   Copyright 2008 Cadence Design Systems, Inc.
   
   Licensed under the Apache License, Version 2.0 (the ''''License''''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
'!
	! (Delta mirrorFor: #Win32API) methodsFor: 'unclassified'!
	 LB_INITSTORAGE 

^424.



! 
 PM_REMOVE 

^1.



! 
 WS_EX_CLIENTEDGE 

^512.



! 
MSG: MSG_val MSG := MSG_val! 
FileDirectory: FileDirectory_val FileDirectory := FileDirectory_val! 
 LB_GETCURSEL 

^392.



! 
 GENERIC_WRITE 

^1073741824.



! 
WNDCLASS ^WNDCLASS! 
 LB_SETSEL 

^389.



! 
 LBS_EXTENDEDSEL 

^2048.



! 
 WM_COMMAND 

^273.



! 
 WM_SETFONT 

^48.



! 
 TPM_RETURNCMD 

^256.



! 
 AW_HOR_POSITIVE 

^4.



! 
Delay: Delay_val Delay := Delay_val! 
 GA_PARENT 

^1.



! 
Process
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Process_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Process.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Process_slot := myNested.
		].
	^Win32API_Process_slot! 
 DC_PEN 

^19.



! 
 WM_MOUSEWHEEL 

^522.



! 
 WS_EX_STATICEDGE 

^131072.



! 
 AW_SLIDE 

^262144.



! 
CHARFORMAT2 ^CHARFORMAT2! 
 SWP_NOMOVE 

^2.



! 
 INVALID_HANDLE_VALUE 

^16 rffffffff.



! 
 SB_HORZ 

^0.



! 
GDIplusFlatDLL: GDIplusFlatDLL_val GDIplusFlatDLL := GDIplusFlatDLL_val! 
 WM_GETFONT 

^49.



! 
WCharAlien: WCharAlien_val WCharAlien := WCharAlien_val! 
 SM_CMONITORS 

^80.



! 
TRACKMOUSEEVENT ^TRACKMOUSEEVENT! 
 CFE_BOLD 

^1.



! 
 WM_RBUTTONDOWN 

^516.



! 
CHARRANGE ^CHARRANGE! 
 FORMAT_MESSAGE_IGNORE_INSERTS 

^512.



! 
 LB_SETHORIZONTALEXTENT 

^404.



! 
 DC_BRUSH 

^18.



! 
 AW_HIDE 

^65536.



! 
 ANSI_VAR_FONT 

^12.



! 
 EM_EXGETSEL 

^ self  WM_USER +52.



! 
GDIDLL: GDIDLL_val GDIDLL := GDIDLL_val! 
 GA_ROOT 

^2.



! 
 platform: platform 

 self Win32API_superInit_platform: platform.

 self Win32API_1_init: platform.

 self addLibrary: self  KernelDLL.

 self addLibrary: self  GDIDLL.

 self addLibrary: self  UserDLL.

 self addLibrary: self  MsimgDLL.

 self addLibraryNoImport: self  GDIplusFlatDLL.

 self addLibrary: self  Comdlg32DLL.

^ self.



! 
 SYSTEM_FONT 

^13.



! 
 WM_SETTEXT 

^12.



! 
 EN_CHANGE 

^768.



! 
 ENM_CHANGE 

^1.



! 
 AW_BLEND 

^524288.



! 
 PFM_TABSTOPS 

^16.



! 
 WS_CHILD 

^1073741824.



! 
 WM_SYSKEYDOWN 

^260.



! 
GRADIENT_RECT ^GRADIENT_RECT! 
 AW_ACTIVATE 

^131072.



! 
Comdlg32Library
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Comdlg32Library_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Comdlg32Library.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Comdlg32Library_slot := myNested.
		].
	^Win32API_Comdlg32Library_slot! 
 WS_EX_NOACTIVATE 

^134217728.



! 
 WM_MOUSEMOVE 

^512.



! 
 WM_MOUSELEAVE 

^675.



! 
POINT ^POINT! 
STARTUPINFO: STARTUPINFO_val STARTUPINFO := STARTUPINFO_val! 
 ANSI_FIXED_FONT 

^11.



! 
 LB_GETCOUNT 

^395.



! 
 SB_CTL 

^2.



! 
 LB_RESETCONTENT 

^388.



! 
 createPipeForWriting 

^ self  Alien autoFreeAfter:[ : autofree | 

|  readPipe  writePipe |

 readPipe := autofree value:( self  Alien newC:4 s).

 writePipe := autofree value:( self  Alien newC:4).

 self   createPipeForWriting: writePipe withChildPipe: readPipe.

 self  Pipe new myEnd: writePipe asUnsignedLong; 

 otherEnd: readPipe asUnsignedLong.

].



! 
PAINTSTRUCT: PAINTSTRUCT_val PAINTSTRUCT := PAINTSTRUCT_val! 
 SM_CYHSCROLL 

^3.



! 
 Alien 

^super  Alien.



! 
 LBS_MULTIPLESEL 

^8.



! 
OPENFILENAME: OPENFILENAME_val OPENFILENAME := OPENFILENAME_val! 
 GRADIENT_FILL_RECT_V 

^1.



! 
UserDLL: UserDLL_val UserDLL := UserDLL_val! 
 FORMAT_MESSAGE_FROM_HMODULE 

^2048.



! 
 EM_EXSETSEL 

^ self  WM_USER +55.



! 
 WM_ERASEBKGND 

^20.



! 
 SM_XVIRTUALSCREEN 

^76.



! 
 SM_CYVIRTUALSCREEN 

^79.



! 
 AW_HOR_NEGATIVE 

^2.



! 
CHARRANGE: CHARRANGE_val CHARRANGE := CHARRANGE_val! 
 WM_PAINT 

^15.



! 
  createPipeForWriting: writePipe withChildPipe: readPipe 

|  lpSecurityAttributes  result |

 lpSecurityAttributes := self  SECURITY_ATTRIBUTES newGC bInheritHandle:true.

 result := self CreatePipe  boolValue: readPipe address value: writePipe address value: lpSecurityAttributes address value:0.

 result ifFalse:[ 

^ self  reportError.

].

 result := self SetHandleInformation  boolValue: writePipe value:1 value:0.

 result ifFalse:[ 

^ self  reportError.

].

^ self.



! 
 Win32API_superInit_platform: platform 

super  platform: platform.

^ self.



! 
 CW_USEDEFAULT 

^2147483648.



! 
 WS_EX_TRANSPARENT 

^32.



! 
 LBN_SELCHANGE 

^1.



! 
 environmentVariables 

|  envp  env  string  strings  count  a  dict |

 envp := self GetEnvironmentStringsW unsignedValue.

 env := self  WCharAlien forPointer: envp.

 count :=1.

 strings := self OrderedCollection new.

[ 

 a := self Array streamContents:[ : s | 

|  c |

[ 

 c := env unsignedShortAt: count.

 count := count +2.

 c =0.

] whileFalse:[ 

 s nextPut:( self Character value: c).

].

].

 string := self String newFrom: a.

 string isEmpty.

] whileFalse:[ 

 strings add: string.

].

 self FreeEnvironmentStringsW boolValue: envp.

 dict := self Dictionary new.

 strings do:[ : ea | 

|  i  k  v |

 i := ea indexOf:$=.

 k := ea  copyFrom:1 to: i - 1.

 v := ea allButFirst: i.

 dict  at: k asUppercase asSymbol put: v.

].

^ dict.



! 
 IDI_APPLICATION 

^32512.



! 
 COLOR_BACKGROUND 

^1.



! 
 SW_HIDE 

^0.



! 
 SM_CXSCREEN 

^0.



! 
OPENFILENAME ^OPENFILENAME! 
 VK_LBUTTON 

^1.



! 
UserLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_UserLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_UserLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_UserLibrary_slot := myNested.
		].
	^Win32API_UserLibrary_slot! 
 ERROR_NO_MORE_FILES 

^18.



! 
 CFE_ITALIC 

^2.



! 
 BN_CLICKED 

^0.



! 
 LBN_ERRSPACE 

^-2.



! 
 VK_ESCAPE 

^27.



! 
 WM_LBUTTONDBLCLK 

^515.



! 
 EM_LINELENGTH 

^193.



! 
 EM_GETEVENTMASK 

^ self  WM_USER +59.



! 
WindowProc: WindowProc_val WindowProc := WindowProc_val! 
 WS_VSCROLL 

^2097152.



! 
MsimgDLL: MsimgDLL_val MsimgDLL := MsimgDLL_val! 
 LBS_HASSTRINGS 

^64.



! 
 CFE_AUTOCOLOR 

^1073741824.



! 
 WM_VSCROLL 

^277.



! 
CrLfFileStream: CrLfFileStream_val CrLfFileStream := CrLfFileStream_val! 
 CFE_UNDERLINE 

^4.



! 
Pipe
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Pipe_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Pipe.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Pipe_slot := myNested.
		].
	^Win32API_Pipe_slot! 
SCROLLINFO ^SCROLLINFO! 
 WM_CLOSE 

^16.



! 
 WM_DESTROY 

^2.



! 
 WM_CREATE 

^1.



! 
 MK_MBUTTON 

^16.



! 
 FILE_FLAG_SEQUENTIAL_SCAN 

^2048.



! 
 CS_HREDRAW 

^2.



! 
 WM_SETREDRAW 

^11.



! 
 FILE_ATTRIBUTE_READONLY 

^1.



! 
 STARTF_USESTDHANDLES 

^256.



! 
 LBN_KILLFOCUS 

^5.



! 
 VK_PAUSE 

^19.



! 
WCharAlien ^WCharAlien! 
 FILE_ATTRIBUTE_NORMAL 

^128.



! 
KernelDLL: KernelDLL_val KernelDLL := KernelDLL_val! 
 MF_DISABLED 

^2.



! 
 VK_CAPITAL 

^20.



! 
CommonDataTypes
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_CommonDataTypes_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_CommonDataTypes.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_CommonDataTypes_slot := myNested.
		].
	^Win32API_CommonDataTypes_slot! 
TRIVERTEX ^TRIVERTEX! 
 getLastErrorMessage 

^ self  getErrorMessage: self  getLastErrorCode.



! 
Delay ^Delay! 
 WM_GETTEXTLENGTH 

^14.



! 
 SPI_GETWORKAREA 

^48.



! 
 SWP_NOREDRAW 

^8.



! 
 WS_EX_COMPOSITED 

^33554432.



! 
 SB_BOTH 

^2.



! 
 CFM_COLOR 

^1073741824.



! 
 CFM_BACKCOLOR 

^67108864.



! 
 LBN_SETFOCUS 

^4.



! 
MSG ^MSG! 
 WS_EX_LAYERED 

^524288.



! 
WinLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_WinLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_WinLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self CLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_WinLibrary_slot := myNested.
		].
	^Win32API_WinLibrary_slot! 
 WM_NCDESTROY 

^130.



! 
 EM_GETPARAFORMAT 

^ self  WM_USER +61.



! 
 getLastErrorCode 

^ self GetLastError unsignedValue.



! 
 DEFAULT_QUALITY 

^0.



! 
 LBN_DBLCLK 

^2.



! 
 ES_WANTRETURN 

^4096.



! 
 LBS_NOINTEGRALHEIGHT 

^256.



! 
 WS_TABSTOP 

^65536.



! 
 FORMAT_MESSAGE_ALLOCATE_BUFFER 

^256.



! 
FIND_DATA ^FIND_DATA! 
 PS_SOLID 

^0.



! 
GDIplus
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_GDIplus.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_slot := myNested.
		].
	^Win32API_GDIplus_slot! 
SECURITY_ATTRIBUTES ^SECURITY_ATTRIBUTES! 
 EM_LINEINDEX 

^187.



! 
 createPipeForReading 

^ self  Alien autoFreeAfter:[ : autofree | 

|  readPipe  writePipe |

 readPipe := autofree value:( self  Alien newC:4).

 writePipe := autofree value:( self  Alien newC:4).

 self   createPipeForReading: readPipe withChildPipe: writePipe.

 self  Pipe new myEnd: readPipe asUnsignedLong; 

 otherEnd: writePipe asUnsignedLong.

].



! 
 ENM_KEYEVENTS 

^65536.



! 
 ES_READONLY 

^2048.



! 
GDIplusFlatDLL ^GDIplusFlatDLL! 
 MF_SEPARATOR 

^2048.



! 
 WM_GETTEXT 

^13.



! 
 WS_CLIPSIBLINGS 

^67108864.



! 
 WM_WINDOWPOSCHANGED 

^71.



! 
 MF_UNCHECKED 

^0.



! 
 WS_SYSMENU 

^524288.



! 
CHARFORMAT: CHARFORMAT_val CHARFORMAT := CHARFORMAT_val! 
 WS_OVERLAPPED 

^0.



! 
 WS_MINIMIZEBOX 

^131072.



! 
 GA_ROOTOWNER 

^3.



! 
 EM_LINEFROMCHAR 

^201.



! 
 WS_VISIBLE 

^268435456.



! 
 WS_DISABLED 

^134217728.



! 
 WM_SYSCHAR 

^262.



! 
 SM_CXVSCROLL 

^2.



! 
 NULL 

^0.



! 
 ES_MULTILINE 

^4.



! 
 ERROR_SHARING_VIOLATION 

^32.



! 
 EM_SHOWSCROLLBAR 

^ self  WM_USER +96.



! 
REQRESIZE: REQRESIZE_val REQRESIZE := REQRESIZE_val! 
 FORMAT_MESSAGE_FROM_SYSTEM 

^4096.



! 
 Win32API_1_init: platform 

 self KernelDLL: self  KernelLibrary new.

 self GDIDLL: self  GDILibrary new.

 self UserDLL: self  UserLibrary new.

 self MsimgDLL: self  MsimgLibrary new.

 self GDIplusFlatDLL: self  GDIplusLibrary new.

 self Comdlg32DLL: self  Comdlg32Library new.

 self CHARFORMAT: platform Win32API Win32apiCHARFORMAT.

 self CHARFORMAT2: platform Win32API Win32apiCHARFORMAT2.

 self CHARRANGE: platform Win32API Win32apiCHARRANGE.

 self FIND_DATA: platform Win32API Win32apiFINDDATA.

 self GRADIENT_RECT: platform Win32API Win32apiGRADIENTRECT.

 self MSG: platform Win32API Win32apiMSG.

 self MSGFILTER: platform Win32API Win32apiMSGFILTER.

 self NMHDR: platform Win32API Win32apiNMHDR.

 self OPENFILENAME: platform Win32API Win32apiOPENFILENAME.

 self PAINTSTRUCT: platform Win32API Win32apiPAINTSTRUCT.

 self PARAFORMAT: platform Win32API Win32apiPARAFORMAT.

 self POINT: platform Win32API Win32apiPOINT.

 self PROCESS_INFORMATION: platform Win32API Win32apiPROCESSINFORMATION.

 self RECT: platform Win32API Win32apiRECT.

 self REQRESIZE: platform Win32API Win32apiREQRESIZE.

 self SCROLLINFO: platform Win32API Win32apiSCROLLINFO.

 self SECURITY_ATTRIBUTES: platform Win32API Win32apiSECURITYATTRIBUTES.

 self STARTUPINFO: platform Win32API Win32apiSTARTUPINFO.

 self TRACKMOUSEEVENT: platform Win32API Win32apiTRACKMOUSEEVENT.

 self TRIVERTEX: platform Win32API Win32apiTRIVERTEX.

 self WNDCLASS: platform Win32API Win32apiWNDCLASS.

 self WINDOWPOS: platform Win32API Win32apiWINDOWPOS.

 self WindowProc: platform Win32API Win32apiWindowProc.

 self WCharAlien: platform NsFFI WCharAlien.

 self GiveUp: platform Win32API GiveUp.

 self CrLfFileStream: platform Files CrLfFileStream.

 self Delay: platform Kernel Delay.

 self FileDirectory: platform Files FileDirectory.

^ self.



! 
 MF_POPUP 

^16.



! 
 LBS_DISABLENOSCROLL 

^4096.



! 
 WM_RBUTTONUP 

^517.



! 
GDIDLL ^GDIDLL! 
 VK_CONTROL 

^17.



! 
  reportError: message code: code 

^ self  error:( message ,' (' ,( self  getErrorMessage: code) ,')').



! 
 closeHandle: handle 

( self CloseHandle boolValue: handle) ifFalse:[ 

 self  reportError.

].

^ self.



! 
 FORMAT_MESSAGE_FROM_STRING 

^1024.



! 
GDILibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDILibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_GDILibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDILibrary_slot := myNested.
		].
	^Win32API_GDILibrary_slot! 
 MF_ENABLED 

^0.



! 
 SIF_ALL 

^31.



! 
TRACKMOUSEEVENT: TRACKMOUSEEVENT_val TRACKMOUSEEVENT := TRACKMOUSEEVENT_val! 
  createPipeForReading: readPipe withChildPipe: writePipe 

|  lpSecurityAttributes  result |

 lpSecurityAttributes := self  SECURITY_ATTRIBUTES newGC bInheritHandle:true.

 result := self CreatePipe  boolValue: readPipe address value: writePipe address value: lpSecurityAttributes address value:0.

 result ifFalse:[ 

^ self  reportError.

].

 result := self SetHandleInformation  boolValue: readPipe value:1 value:0.

 result ifFalse:[ 

^ self  reportError.

].

^ self.



! 
 createTemporaryFile: inherit 

|  pathBuffer  tempName  result  hTempFile  lpSecurityAttributes |

 lpSecurityAttributes := self  SECURITY_ATTRIBUTES newGC bInheritHandle: inherit.

 self  Alien autoFreeAfter:[ : autoFree | 

 pathBuffer := self  Alien newGC:512.

 result := self GetTempPath  unsignedValue:512 value: pathBuffer address.

( result >512 or:[ 

 result =0.

]) ifTrue:[ 

^ self  reportError.

].

 tempName := self  Alien newGC:512.

 result := self GetTempFileName  unsignedValue: pathBuffer address value:( autoFree value:( self  Alien newCString:'NSP')) address value:0 value: tempName address.

 result =0 ifTrue:[ 

 self  reportError.

].

].

 hTempFile := self CreateFile  unsignedValue: tempName address value: self  GENERIC_WRITE value:0 value: lpSecurityAttributes address value: self  CREATE_ALWAYS value: self  FILE_ATTRIBUTE_NORMAL value: self  NULL.

 hTempFile = self  INVALID_HANDLE_VALUE ifTrue:[ 

 self  reportError.

].

^ self  File new name: tempName strcpy; 

 handle: hTempFile.



! 
RECT ^RECT! 
 FORMAT_MESSAGE_ARGUMENT_ARRAY 

^8192.



! 
 COLOR_WINDOW 

^5.



! 
STARTUPINFO ^STARTUPINFO! 
 MK_SHIFT 

^4.



! 
 SWP_HIDEWINDOW 

^128.



! 
 nullTerminatedCString: strings 

|  null |

 null := self Character value:0.

 strings isEmpty ifTrue:[ 

^ self  Alien newCString:(( self Array new:2)  at:1 put: null; 

  at:2 put: null; 

 yourself) asString.

].

^ self  Alien newCString:( self String streamContents:[ : s | 

 strings do:[ : string | 

 s nextPutAll: string.

 s nextPut: null.

].

 s nextPut: null.

]).



! 
 MF_CHECKED 

^8.



! 
Win32Function
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_Win32Function_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_Win32Function.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self CFunction)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_Win32Function_slot := myNested.
		].
	^Win32API_Win32Function_slot! 
 VK_RBUTTON 

^2.



! 
 EM_HIDESELECTION 

^ self  WM_USER +63.



! 
 CS_VREDRAW 

^1.



! 
 CFM_ITALIC 

^2.



! 
 WS_CHILDWINDOW 

^ self  WS_CHILD.



! 
MsimgLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_MsimgLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_MsimgLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_MsimgLibrary_slot := myNested.
		].
	^Win32API_MsimgLibrary_slot! 
 reportError: message 

^ self  error:( message ,' (' , self  getLastErrorMessage ,')').



! 
 EM_SETEVENTMASK 

^ self  WM_USER +69.



! 
 GWL_STYLE 

^-16.



! 
 WS_HSCROLL 

^1048576.



! 
 WS_THICKFRAME 

^262144.



! 
 WM_HSCROLL 

^276.



! 
 CFM_UNDERLINE 

^4.



! 
POINT: POINT_val POINT := POINT_val! 
PROCESS_INFORMATION ^PROCESS_INFORMATION! 
 VK_SHIFT 

^16.



! 
 IDC_ARROW 

^32512.



! 
 LB_SETCURSEL 

^390.



! 
 MK_RBUTTON 

^2.



! 
 CREATE_ALWAYS 

^2.



! 
 LB_GETSEL 

^391.



! 
 WM_CHAR 

^258.



! 
 WS_POPUPWINDOW 

^ self bits:(( self Array new:3)  at:1 put:#'WS_POPUP'; 

  at:2 put:#'WS_BORDER'; 

  at:3 put:#'WS_SYSMENU'; 

 yourself).



! 
 FORMAT_MESSAGE_MAX_WIDTH_MASK 

^255.



! 
 MF_GRAYED 

^1.



! 
 OUT_TT_PRECIS 

^4.



! 
 FILE_ATTRIBUTE_DIRECTORY 

^16.



! 
 LB_INSERTSTRING 

^385.



! 
 LB_ADDSTRING 

^384.



! 
 GWL_EXSTYLE 

^-20.



! 
PROCESS_INFORMATION: PROCESS_INFORMATION_val PROCESS_INFORMATION := PROCESS_INFORMATION_val! 
 SWP_SHOWWINDOW 

^64.



! 
 WS_OVERLAPPEDWINDOW 

^ self bits:(( self Array new:6)  at:1 put:#'WS_OVERLAPPED'; 

  at:2 put:#'WS_CAPTION'; 

  at:3 put:#'WS_SYSMENU'; 

  at:4 put:#'WS_THICKFRAME'; 

  at:5 put:#'WS_MINIMIZEBOX'; 

  at:6 put:#'WS_MAXIMIZEBOX'; 

 yourself).



! 
 STARTF_USESHOWWINDOW 

^1.



! 
SCROLLINFO: SCROLLINFO_val SCROLLINFO := SCROLLINFO_val! 
 LB_DELETESTRING 

^386.



! 
RECT: RECT_val RECT := RECT_val! 
 WS_DLGFRAME 

^4194304.



! 
GRADIENT_RECT: GRADIENT_RECT_val GRADIENT_RECT := GRADIENT_RECT_val! 
 WS_CLIPCHILDREN 

^33554432.



! 
 SW_SHOW 

^5.



! 
FileDirectory ^FileDirectory! 
 WM_SYSCOMMAND 

^274.



! 
 MK_CONTROL 

^8.



! 
 VK_MENU 

^18.



! 
 LBN_SELCANCEL 

^3.



! 
Comdlg32DLL ^Comdlg32DLL! 
 WM_KEYUP 

^257.



! 
CHARFORMAT2: CHARFORMAT2_val CHARFORMAT2 := CHARFORMAT2_val! 
 CFM_BOLD 

^1.



! 
 EM_SETPARAFORMAT 

^ self  WM_USER +71.



! 
 WM_LBUTTONDOWN 

^513.



! 
UserDLL ^UserDLL! 
 EM_REQUESTRESIZE 

^ self  WM_USER +65.



! 
CrLfFileStream ^CrLfFileStream! 
 EN_REQUESTRESIZE 

^1793.



! 
REQRESIZE ^REQRESIZE! 
GDIplusLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplusLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_GDIplusLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplusLibrary_slot := myNested.
		].
	^Win32API_GDIplusLibrary_slot! 
WINDOWPOS ^WINDOWPOS! 
 EN_MSGFILTER 

^1792.



! 
 WM_USER 

^1024.



! 
 WS_EX_TOPMOST 

^8.



! 
PAINTSTRUCT ^PAINTSTRUCT! 
 WHITE_BRUSH 

^0.



! 
 NONANTIALIASED_QUALITY 

^3.



! 
 reportError 

^ self  error: self  getLastErrorMessage.



! 
MSGFILTER ^MSGFILTER! 
FIND_DATA: FIND_DATA_val FIND_DATA := FIND_DATA_val! 
 AW_CENTER 

^16.



! 
 getErrorMessage: errorCode 

( self  Alien newC:4) freeAfter:[ : lpMsgBuf | 

|  result |

 result := self FormatMessage  unsignedValue: self  FORMAT_MESSAGE_ALLOCATE_BUFFER | self  FORMAT_MESSAGE_FROM_SYSTEM | self  FORMAT_MESSAGE_IGNORE_INSERTS value: self  NULL value: errorCode value: self GetUserDefaultLangID unsignedValue value: lpMsgBuf address value:0 value: self  NULL.

 result =0 ifTrue:[ 

 self  error:('Could not retrieve error code: ' , errorCode asString ,' reason: ' , self  getLastErrorCode asString).

].

^(( self  Alien forPointer: lpMsgBuf asUnsignedLong) strcpy copyWithout: self Character lf) withBlanksTrimmed.

].

^ self.



! 
 LBS_NOTIFY 

^1.



! 
 WS_POPUP 

^2147483648.



! 
 ES_PASSWORD 

^32.



! 
 SB_VERT 

^1.



! 
 EM_GETCHARFORMAT 

^ self  WM_USER +58.



! 
KernelDLL ^KernelDLL! 
KernelLibrary
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_KernelLibrary_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_KernelLibrary.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self  WinLibrary)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_KernelLibrary_slot := myNested.
		].
	^Win32API_KernelLibrary_slot! 
 SWP_NOSIZE 

^1.



! 
WindowProc ^WindowProc! 
PARAFORMAT ^PARAFORMAT! 
 SWP_NOZORDER 

^4.



! 
 SW_MINIMIZE 

^6.



! 
MsimgDLL ^MsimgDLL! 
 DRAFT_QUALITY 

^1.



! 
 SM_YVIRTUALSCREEN 

^77.



! 
 SM_CXVIRTUALSCREEN 

^78.



! 
 AW_VER_NEGATIVE 

^8.



! 
GiveUp: GiveUp_val GiveUp := GiveUp_val! 
NMHDR ^NMHDR! 
WNDCLASS: WNDCLASS_val WNDCLASS := WNDCLASS_val! 
 WS_MINIMIZE 

^536870912.



! 
 WS_MAXIMIZEBOX 

^65536.



! 
 TPM_NONOTIFY 

^128.



! 
 WS_CAPTION 

^12582912.



! 
 WM_NOTIFY 

^78.



! 
 EM_SETCHARFORMAT 

^ self  WM_USER +68.



! 
 BCM_GETIDEALSIZE 

^5633.



! 
 SM_CYSCREEN 

^1.



! 
SECURITY_ATTRIBUTES: SECURITY_ATTRIBUTES_val SECURITY_ATTRIBUTES := SECURITY_ATTRIBUTES_val! 
 VK_MBUTTON 

^4.



! 
 WM_LBUTTONUP 

^514.



! 
File
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_File_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API 
			nestedMixins at: #Win32API_File.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_File_slot := myNested.
		].
	^Win32API_File_slot! 
 ENM_REQUESTRESIZE 

^262144.



! 
NMHDR: NMHDR_val NMHDR := NMHDR_val! 
 GRADIENT_FILL_RECT_H 

^0.



! 
 WM_RBUTTONDBLCLK 

^518.



! 
 WS_GROUP 

^131072.



! 
Comdlg32DLL: Comdlg32DLL_val Comdlg32DLL := Comdlg32DLL_val! 
 error: message 

^ self  GiveUp signal: message.



! 
GiveUp ^GiveUp! 
WINDOWPOS: WINDOWPOS_val WINDOWPOS := WINDOWPOS_val! 
PARAFORMAT: PARAFORMAT_val PARAFORMAT := PARAFORMAT_val! 
 WS_BORDER 

^8388608.



! 
  createProcess: commandLine withCurrentDirectory: dir withTitle: title withStdInput: stdInput withStdOutput: stdOutput withStdError: stdError 

|  lpProcessInformation  lpStartupInfo  result |

 lpProcessInformation := self  PROCESS_INFORMATION newGC.

 lpStartupInfo := self  STARTUPINFO newGC.

 self  Alien autoFreeAfter:[ : autoFree | 

 lpStartupInfo dwFlags:( self  STARTF_USESTDHANDLES | self  STARTF_USESHOWWINDOW); 

 wShowWindow: self  SW_HIDE; 

 lpTitle:( autoFree value:( self  Alien newCString: title)) address; 

 hStdInput:( stdInput isInteger  ifTrue:[ 

 stdInput.

] ifFalse:[ 

 stdInput asUnsignedLong.

]); 

 hStdOutput:( stdOutput isInteger  ifTrue:[ 

 stdOutput.

] ifFalse:[ 

 stdOutput asUnsignedLong.

]); 

 hStdError:( stdError isInteger  ifTrue:[ 

 stdError.

] ifFalse:[ 

 stdError asUnsignedLong.

]).

 result := self CreateProcess  boolValue:0 value:( autoFree value:( self  Alien newCString: commandLine)) address value:0 value:0 value:1 value:0 value:0 value:( autoFree value:( self  Alien newCString: dir fullName)) address value: lpStartupInfo address value: lpProcessInformation address.

 result ifFalse:[ 

^ self  reportError.

].

].

^ self  Process new lpProcessInformation: lpProcessInformation.



! 
 PROOF_QUALITY 

^2.



! 
 ERROR_ALREADY_EXISTS 

^183.



! 
 WM_KEYDOWN 

^256.



! 
 MK_LBUTTON 

^1.



! 
 WS_MAXIMIZE 

^16777216.



! 
CHARFORMAT ^CHARFORMAT! 
 INVALID_FILE_SIZE 

^16 rffffffff.



! 
MSGFILTER: MSGFILTER_val MSGFILTER := MSGFILTER_val! 
 CLEARTYPE_QUALITY 

^5.



! 
 EM_SETSCROLLPOS 

^ self  WM_USER +222.



! 
TRIVERTEX: TRIVERTEX_val TRIVERTEX := TRIVERTEX_val! 
 COLOR_MENU 

^4.



! 
 ANTIALIASED_QUALITY 

^4.



! 
 !
	! (Delta mirrorFor: #Win32API) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API := eos !
	mixinMetadata: mmd MixinMetadata_Win32API := mmd !
	 platform: platform 

^ self basicNew platform: platform.



! 
		 usingPlatform: platform 

^ self platform: platform.



! 
		 !
	Win32API enclosingObjects: (Array with: nil)!
		Win32API metadata enclosingMixin: nil !
		Win32API mixinMetadata: Win32API metadata !
		Delta define: #Win32API_MsimgLibrary as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_MsimgLibrary EnclosingObjects_Win32API_MsimgLibrary')!
	(Delta mirrorFor: #Win32API_MsimgLibrary) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_MsimgLibrary) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_MsimgLibrary) comment: 'Describe the class in this comment.'!
	! (Delta mirrorFor: #Win32API_MsimgLibrary) methodsFor: 'unclassified'!
	 new 

 self Win32API_MsimgLibrary_superInit_new.

 self Win32API_MsimgLibrary_1_init.

^ self.



! 
 exportFunctionsTo: capi 

 capi exportFunction: self  GradientFill.

^ self.



! 
 Win32API_MsimgLibrary_1_init 

^ self.



! 
 Win32API_MsimgLibrary_superInit_new 

super  name:'Msimg32'.

^ self.



! 
 GradientFill 

^ self  functionNamed:#'GradientFill' argc:6.



! 
 !
	! (Delta mirrorFor: #Win32API_MsimgLibrary) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_MsimgLibrary := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_MsimgLibrary := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_MsimgLibrary. ! 
	Win32API_MsimgLibrary metadata enclosingMixin: Win32API !
	Delta define: #Win32API_KernelLibrary as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_KernelLibrary EnclosingObjects_Win32API_KernelLibrary')!
	(Delta mirrorFor: #Win32API_KernelLibrary) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_KernelLibrary) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_KernelLibrary) comment: 'Contains functions from the Kernel Windows library.'!
	! (Delta mirrorFor: #Win32API_KernelLibrary) methodsFor: 'unclassified'!
	 GetFileSize 

^ self  functionNamed:#'GetFileSize' argc:2.



! 
 GetModuleHandleA 

^ self  functionNamed:#'GetModuleHandleA' argc:1.



! 
 FindNextFileA 

^ self  functionNamed:#'FindNextFileA' argc:2.



! 
 GetTempFileNameA 

^ self  functionNamed:#'GetTempFileNameA' argc:4.



! 
 FreeEnvironmentStringsW 

^ self  functionNamed:#'FreeEnvironmentStringsW' argc:1.



! 
 WaitForSingleObject 

^ self  functionNamed:#'WaitForSingleObject' argc:2.



! 
 LoadLibraryA 

^ self  functionNamed:#'LoadLibraryA' argc:1.



! 
 GetLastError 

^ self  functionNamed:#'GetLastError' argc:0.



! 
 CreatePipe 

^ self  functionNamed:#'CreatePipe' argc:4.



! 
 SetHandleInformation 

^ self  functionNamed:#'SetHandleInformation' argc:3.



! 
 CreateProcessA 

^ self  functionNamed:#'CreateProcessA' argc:10.



! 
 Win32API_KernelLibrary_1_init 

^ self.



! 
 DeleteFileA 

^ self  functionNamed:#'DeleteFileA' argc:1.



! 
 GetACP 

^ self  functionNamed:#'GetACP' argc:0.



! 
 GetTempPathA 

^ self  functionNamed:#'GetTempPathA' argc:2.



! 
 new 

 self Win32API_KernelLibrary_superInit_new.

 self Win32API_KernelLibrary_1_init.

^ self.



! 
 GetUserDefaultLangID 

^ self  functionNamed:#'GetUserDefaultLangID' argc:0.



! 
 SetFileApisToOEM 

^ self  functionNamed:#'SetFileApisToOEM' argc:0.



! 
 MoveFileA 

^ self  functionNamed:#'MoveFileA' argc:2.



! 
 SetFilePointer 

^ self  functionNamed:#'SetFilePointer' argc:4.



! 
 ReadFile 

^ self  functionNamed:#'ReadFile' argc:5.



! 
 CreateFileA 

^ self  functionNamed:#'CreateFileA' argc:7.



! 
 GetDiskFreeSpaceA 

^ self  functionNamed:#'GetDiskFreeSpaceA' argc:5.



! 
 exportFunctionsTo: capi 

 capi exportFunction: self  CloseHandle; 

  exportFunction: self  CopyFileA as:#'CopyFile'; 

  exportFunction: self  CreateDirectoryA as:#'CreateDirectory'; 

  exportFunction: self  CreateFileA as:#'CreateFile'; 

 exportFunction: self  CreatePipe; 

  exportFunction: self  CreateProcessA as:#'CreateProcess'; 

  exportFunction: self  DeleteFileA as:#'DeleteFile'; 

 exportFunction: self  FindClose; 

  exportFunction: self  FindFirstFileA as:#'FindFirstFile'; 

  exportFunction: self  FindNextFileA as:#'FindNextFile'; 

  exportFunction: self  FormatMessageA as:#'FormatMessage'; 

 exportFunction: self  FreeEnvironmentStringsW; 

  exportFunction: self  GetCurrentDirectoryA as:#'GetCurrentDirectory'; 

 exportFunction: self  GetCurrentThread; 

  exportFunction: self  GetDiskFreeSpaceA as:#'GetDiskFreeSpace'; 

 exportFunction: self  GetEnvironmentStringsW; 

 exportFunction: self  GetExitCodeProcess; 

  exportFunction: self  GetFileAttributesA as:#'GetFileAttributes'; 

 exportFunction: self  GetFileSize; 

 exportFunction: self  GetLastError; 

  exportFunction: self  GetModuleHandleA as:#'GetModuleHandle'; 

 exportFunction: self  GetStdHandle; 

  exportFunction: self  GetTempFileNameA as:#'GetTempFileName'; 

  exportFunction: self  GetTempPathA as:#'GetTempPath'; 

 exportFunction: self  GetUserDefaultLangID; 

  exportFunction: self  LoadLibraryA as:#'LoadLibrary'; 

  exportFunction: self  MoveFileA as:#'MoveFile'; 

 exportFunction: self  MultiByteToWideChar; 

 exportFunction: self  ReadFile; 

  exportFunction: self  RemoveDirectoryA as:#'RemoveDirectory'; 

 exportFunction: self  SetFileApisToOEM; 

 exportFunction: self  SetFilePointer; 

 exportFunction: self  SetHandleInformation; 

 exportFunction: self  WaitForSingleObject; 

 exportFunction: self  WideCharToMultiByte; 

 exportFunction: self  WriteFile.

^ self.



! 
 WriteFile 

^ self  functionNamed:#'WriteFile' argc:5.



! 
 GetExitCodeProcess 

^ self  functionNamed:#'GetExitCodeProcess' argc:2.



! 
 CloseHandle 

^ self  functionNamed:#'CloseHandle' argc:1.



! 
 FindFirstFileA 

^ self  functionNamed:#'FindFirstFileA' argc:2.



! 
 GetCurrentDirectoryA 

^ self  functionNamed:#'GetCurrentDirectoryA' argc:2.



! 
 GetEnvironmentStringsW 

^ self  functionNamed:#'GetEnvironmentStringsW' argc:0.



! 
 RemoveDirectoryA 

^ self  functionNamed:#'RemoveDirectoryA' argc:1.



! 
 GetFileAttributesA 

^ self  functionNamed:#'GetFileAttributesA' argc:1.



! 
 CopyFileA 

^ self  functionNamed:#'CopyFileA' argc:3.



! 
 Win32API_KernelLibrary_superInit_new 

super  name:'Kernel'.

^ self.



! 
 CreateDirectoryA 

^ self  functionNamed:#'CreateDirectoryA' argc:2.



! 
 GetCurrentThread 

^ self  functionNamed:#'GetCurrentThread' argc:0.



! 
 FindClose 

^ self  functionNamed:#'FindClose' argc:1.



! 
 MultiByteToWideChar 

^ self  functionNamed:#'MultiByteToWideChar' argc:6.



! 
 FormatMessageA 

^ self  functionNamed:#'FormatMessageA' argc:7.



! 
 WideCharToMultiByte 

^ self  functionNamed:#'WideCharToMultiByte' argc:8.



! 
 GetStdHandle 

^ self  functionNamed:#'GetStdHandle' argc:1.



! 
 !
	! (Delta mirrorFor: #Win32API_KernelLibrary) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_KernelLibrary := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_KernelLibrary := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_KernelLibrary. ! 
	Win32API_KernelLibrary metadata enclosingMixin: Win32API !
	Delta define: #Win32API_CommonDataTypes as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_CommonDataTypes EnclosingObjects_Win32API_CommonDataTypes')!
	(Delta mirrorFor: #Win32API_CommonDataTypes) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_CommonDataTypes) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_CommonDataTypes) comment: #''!
	! (Delta mirrorFor: #Win32API_CommonDataTypes) methodsFor: 'unclassified'!
	 Win32API_CommonDataTypes_1_init 

^ self.



! 
 Win32API_CommonDataTypes_superInit_new 

super  new.

^ self.



! 
 new 

 self Win32API_CommonDataTypes_superInit_new.

 self Win32API_CommonDataTypes_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_CommonDataTypes) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_CommonDataTypes := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_CommonDataTypes := mmd !
	 specification 

^'
typedef int BOOL, *PBOOL, *LPBOOL;

typedef BYTE  BOOLEAN, *PBOOLEAN;

typedef WCHAR  * BSTR;

typedef unsigned char BYTE, *PBYTE, *LPBYTE;

typedef char CHAR, *PCHAR;

typedef unsigned long DWORD, *PDWORD, *LPDWORD;

typedef ULONGLONG  DWORDLONG, *PDWORDLONG;

typedef ULONG_PTR  DWORD_PTR;

typedef unsigned int DWORD32;

typedef unsigned __int64  DWORD64;

typedef int INT, *LPINT;

typedef signed char INT8;

typedef signed short INT16;

typedef signed int INT32;

typedef signed __int64 INT64;

typedef long LONG, *LPLONG;

typedef signed int LONG32;

typedef __int64  LONG64;

typedef LPCSTR  LPCTSTR;

typedef unsigned __int64  QWORD;

typedef short SHORT;

typedef unsigned char UCHAR, *PUCHAR;

typedef unsigned int UINT;

typedef unsigned char UINT8;

typedef unsigned short UINT16;

typedef unsigned int UINT32;

typedef unsigned __int64  UINT64;

typedef unsigned long ULONG, *PULONG;

typedef unsigned int ULONG32;

typedef unsigned __int64  ULONG64;

typedef unsigned short UNSIGNED16;

typedef unsigned long UNSIGNED32;

typedef unsigned short USHORT;

typedef void VOID, *PVOID;

typedef wchar_t  WCHAR, *PWCHAR;

typedef unsigned short WORD, *PWORD, *LPWORD;
'.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_CommonDataTypes. ! 
	Win32API_CommonDataTypes metadata enclosingMixin: Win32API !
	Delta define: #Win32API_Process as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' lpProcessInformation')
	 classVariables: 'MixinMetadata_Win32API_Process EnclosingObjects_Win32API_Process')!
	(Delta mirrorFor: #Win32API_Process) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_Process) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_Process) comment: #''!
	! (Delta mirrorFor: #Win32API_Process) methodsFor: 'unclassified'!
	lpProcessInformation: lpProcessInformation_val lpProcessInformation := lpProcessInformation_val! 
 waitForExitCode 

^[ 

|  lpExitCode  delay |

 lpExitCode := (EnclosingObjects_Win32API_Process at: 1)  Alien newGC:4.

 delay := (EnclosingObjects_Win32API_Process at: 1)  Delay forMilliseconds:10.

[ 

|  rcode |

 rcode := (EnclosingObjects_Win32API_Process at: 1)  WaitForSingleObject  unsignedValue: self  lpProcessInformation hProcess value:0.

258 = rcode.

] whileTrue:[ 

 delay wait.

].

 (EnclosingObjects_Win32API_Process at: 1)  GetExitCodeProcess  boolValue: self  lpProcessInformation hProcess value: lpExitCode pointer.

 lpExitCode signedLongAt:1.

] ensure:[ 

 self  lpProcessInformation closeHandles.

].



! 
lpProcessInformation ^lpProcessInformation! 
 Win32API_Process_superInit_new 

super  new.

^ self.



! 
 Win32API_Process_1_init 

 self lpProcessInformation:nil.

^ self.



! 
 new 

 self Win32API_Process_superInit_new.

 self Win32API_Process_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_Process) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_Process := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_Process := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_Process. ! 
	Win32API_Process metadata enclosingMixin: Win32API !
	Delta define: #Win32API_GDIplus as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' Win32API_GDIplus_GDIplusObject_slot Win32API_GDIplus_CachedBitmap_slot Win32API_GDIplus_Graphics_slot Win32API_GDIplus_Brush_slot Win32API_GDIplus_Color_slot Win32API_GDIplus_PaintDCGraphics_slot Win32API_GDIplus_Pen_slot token flatAPI Win32API_GDIplus_LinearGradientBrush_slot Win32API_GDIplus_SolidBrush_slot Win32API_GDIplus_Bitmap_slot')
	 classVariables: 'MixinMetadata_Win32API_GDIplus EnclosingObjects_Win32API_GDIplus')!
	(Delta mirrorFor: #Win32API_GDIplus) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus) comment: 'This is a nested module providing a Newspeak wrapper around GDI+ flat api, similar to the C++ wrapper provided by Microsoft as the official GDI+ API.'!
	! (Delta mirrorFor: #Win32API_GDIplus) methodsFor: 'unclassified'!
	Pen
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Pen_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Pen.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Pen_slot := myNested.
		].
	^Win32API_GDIplus_Pen_slot! 
Color
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Color_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Color.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Color_slot := myNested.
		].
	^Win32API_GDIplus_Color_slot! 
LinearGradientBrush
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_LinearGradientBrush_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_LinearGradientBrush.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  Brush)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_LinearGradientBrush_slot := myNested.
		].
	^Win32API_GDIplus_LinearGradientBrush_slot! 
 alienClass 

^ (EnclosingObjects_Win32API_GDIplus at: 1)  Alien.



! 
flatAPI: flatAPI_val flatAPI := flatAPI_val! 
 Win32API_GDIplus_superInit_new 

super  new.

^ self.



! 
 new 

 self Win32API_GDIplus_superInit_new.

 self Win32API_GDIplus_1_init.

^ self.



! 
 resetForNewImageSession 

 self  token:nil.

^ self.



! 
Brush
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Brush_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Brush.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Brush_slot := myNested.
		].
	^Win32API_GDIplus_Brush_slot! 
Graphics
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Graphics_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Graphics.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Graphics_slot := myNested.
		].
	^Win32API_GDIplus_Graphics_slot! 
 shutdown 

 self  token notNil ifTrue:[ 

 self  flatAPI GdiplusShutdown value: self  token asUnsignedLong.

 self  token:nil.

].

^ self.



! 
SolidBrush
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_SolidBrush_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_SolidBrush.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  Brush)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_SolidBrush_slot := myNested.
		].
	^Win32API_GDIplus_SolidBrush_slot! 
Bitmap
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_Bitmap_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_Bitmap.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_Bitmap_slot := myNested.
		].
	^Win32API_GDIplus_Bitmap_slot! 
GDIplusObject
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_GDIplusObject_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_GDIplusObject.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self Object)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_GDIplusObject_slot := myNested.
		].
	^Win32API_GDIplus_GDIplusObject_slot! 
 Win32API_GDIplus_1_init 

 self token:nil.

 self flatAPI: (EnclosingObjects_Win32API_GDIplus at: 1)  GDIplusFlatDLL.

^ self.



! 
 withGdiplusStartupInputAndOutputDo: action 

|  input  output  result |

 input := self  alienClass newC:16.

 input  unsignedLongAt:1 put:1; 

  unsignedLongAt:5 put:0; 

  unsignedLongAt:9 put:0; 

  unsignedLongAt:13 put:0.

 output := self  alienClass newC:8.

 result := action  value: input value: output.

 input free.

 output free.

^ result.



! 
token: token_val token := token_val! 
 statusStringFor: statusCode 

^(( self Array new:22)  at:1 put:'Ok'; 

  at:2 put:'GenericError'; 

  at:3 put:'InvalidParameter'; 

  at:4 put:'OutOfMemory'; 

  at:5 put:'ObjectBusy'; 

  at:6 put:'InsufficientBuffer'; 

  at:7 put:'NotImplemented'; 

  at:8 put:'Win32Error'; 

  at:9 put:'WrongState'; 

  at:10 put:'Aborted'; 

  at:11 put:'FileNotFound'; 

  at:12 put:'ValueOverflow'; 

  at:13 put:'AccessDenied'; 

  at:14 put:'UnknownImageFormat'; 

  at:15 put:'FontFamilyNotFound'; 

  at:16 put:'FontStyleNotFound'; 

  at:17 put:'NotTrueTypeFont'; 

  at:18 put:'UnsupportedGdiplusVersion'; 

  at:19 put:'GdiplusNotInitialized'; 

  at:20 put:'PropertyNotFound'; 

  at:21 put:'PropertyNotSupported'; 

  at:22 put:'ProfileNotFound'; 

 yourself) at:( statusCode +1).



! 
token ^token! 
PaintDCGraphics
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_PaintDCGraphics_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_PaintDCGraphics.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  Graphics)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_PaintDCGraphics_slot := myNested.
		].
	^Win32API_GDIplus_PaintDCGraphics_slot! 
flatAPI ^flatAPI! 
CachedBitmap
	| nestedClass enclosingObjectArray myNested depth |
	Win32API_GDIplus_CachedBitmap_slot isNil ifTrue:[ 
		nestedClass := 	MixinMetadata_Win32API_GDIplus 
			nestedMixins at: #Win32API_GDIplus_CachedBitmap.
		myNested := (nestedClass mixin |>  (MixinMetadata_Win32API_GDIplus Mirror on: self  GDIplusObject)) reflectee.
		myNested mixinMetadata: nestedClass reflectee metadata.
		depth := EnclosingObjects_Win32API_GDIplus size + 1.
		enclosingObjectArray :=  Array new: depth. 
		enclosingObjectArray at:1 put: self. 
		2 to: depth do:[:i | 
			enclosingObjectArray at:i put:(EnclosingObjects_Win32API_GDIplus at: i - 1)
			].
		 myNested enclosingObjects: enclosingObjectArray.
		Win32API_GDIplus_CachedBitmap_slot := myNested.
		].
	^Win32API_GDIplus_CachedBitmap_slot! 
 startup 

|  status |

 self  token:( self  alienClass newC:4).

 self  withGdiplusStartupInputAndOutputDo:[ : input : output | 

 status := self  flatAPI GdiplusStartup  unsignedValue: self  token address value: input address value: output address.

].

 status =0 ifFalse:[ 

 self  token free.

 self  token:nil.

].

^ self  token notNil.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_GDIplus. ! 
	Win32API_GDIplus metadata enclosingMixin: Win32API !
	Delta define: #Win32API_GDIplus_Bitmap as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' nativeImagePtr bits')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_Bitmap EnclosingObjects_Win32API_GDIplus_Bitmap')!
	(Delta mirrorFor: #Win32API_GDIplus_Bitmap) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_Bitmap) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_Bitmap) comment: 'Provides a subset of the functionality of the Bitmap class of the official GDI+ API.'!
	! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) methodsFor: 'unclassified'!
	nativeImagePtr ^nativeImagePtr! 
  initWidth: width height: height format: format 

|  pointerBox |

 pointerBox := (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipCreateBitmapFromScan0  unsignedValue: width value: height value:0 value: format value:0 value: pointerBox address).

 self lastResult =0 ifFalse:[ 

 pointerBox free.

^ (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  GiveUp signal:('Bitmap creation failed with status: ' , self lastResult asString ,' (' , (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  getLastErrorMessage ,')').

].

 self  nativeImagePtr: pointerBox asUnsignedLong.

 pointerBox free.

^ self.



! 
  initWidth: width height: height stride: stride format: format bits: data 

|  pointerBox |

 self  bits: data.

 pointerBox := (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipCreateBitmapFromScan0  unsignedValue: width value: height value: stride value: format value: self  bits address value: pointerBox address).

 self lastResult =0 ifFalse:[ 

 pointerBox free.

^ (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  reportError:('Bitmap creation failed with status: ' , self lastResult printString).

].

 self  nativeImagePtr: pointerBox asUnsignedLong.

 pointerBox free.

^ self.



! 
  initWidth: width height: height target: target 

|  pointerBox |

 pointerBox := (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipCreateBitmapFromGraphics  unsignedValue: width value: height value: target nativeGraphicsPtr value: pointerBox address).

 self lastResult =0 ifFalse:[ 

 pointerBox free.

^ (EnclosingObjects_Win32API_GDIplus_Bitmap at: 2)  reportError:('Bitmap creation failed with status: ' , self lastResult printString).

].

 self  nativeImagePtr: pointerBox asUnsignedLong.

 pointerBox free.

^ self.



! 
bits: bits_val bits := bits_val! 
nativeImagePtr: nativeImagePtr_val nativeImagePtr := nativeImagePtr_val! 
 Win32API_GDIplus_Bitmap_1_init 

 self nativeImagePtr:0.

 self bits:nil.

^ self.



! 
 release 

 self  nativeImagePtr ~=0 ifTrue:[ 

 (EnclosingObjects_Win32API_GDIplus_Bitmap at: 1)  flatAPI GdipDisposeImage value: self  nativeImagePtr.

 self  nativeImagePtr:0.

].

 self  bits notNil ifTrue:[ 

 self  bits free.

 self  bits:nil.

].

^ self.



! 
bits ^bits! 
 new 

 self Win32API_GDIplus_Bitmap_superInit_new.

 self Win32API_GDIplus_Bitmap_1_init.

^ self.



! 
 Win32API_GDIplus_Bitmap_superInit_new 

super  new.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_Bitmap) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Bitmap := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Bitmap := mmd !
	  width: width height: height target: target 

^ self new  initWidth: width height: height target: target.



! 
		  width: width height: height format: f 

^ self new  initWidth: width height: height format: f.



! 
		  width: width height: height stride: stride format: f bits: bits 

^ self new  initWidth: width height: height stride: stride format: f bits: bits.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_Bitmap. ! 
	Win32API_GDIplus_Bitmap metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_LinearGradientBrush as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_LinearGradientBrush EnclosingObjects_Win32API_GDIplus_LinearGradientBrush')!
	(Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) comment: 'Corresponds to (a subset of) the LinearGradientBrush class of the official API.'!
	! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) methodsFor: 'unclassified'!
	 Win32API_GDIplus_LinearGradientBrush_1_init 

^ self.



! 
  initFrom: from to: to fromColor: fromColor toColor: toColor 

|  p1  p2  pointerBox |

 p1 := (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 2)  POINT newC initializeFromPoint: from.

 p2 := (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 2)  POINT newC initializeFromPoint: to.

 pointerBox := (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 1)  flatAPI GdipCreateLineBrushI  unsignedValue: p1 address value: p2 address value: fromColor argb value: toColor argb value:0 value: pointerBox address).

 self nativeBrushPtr: pointerBox asUnsignedLong.

 self lastResult =0 ifFalse:[ 

 (EnclosingObjects_Win32API_GDIplus_LinearGradientBrush at: 2)  reportError:('LinearGradientBrush creation failed with status: ' , self lastResult printString).

].

 pointerBox free.

 p2 free.

 p1 free.

^ self.



! 
 new 

 self Win32API_GDIplus_LinearGradientBrush_superInit_new.

 self Win32API_GDIplus_LinearGradientBrush_1_init.

^ self.



! 
 Win32API_GDIplus_LinearGradientBrush_superInit_new 

super  new.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_LinearGradientBrush) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_LinearGradientBrush := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_LinearGradientBrush := mmd !
	  from: p1 color: c1 to: p2 color: c2 

^ self new  initFrom: p1 to: p2 fromColor: c1 toColor: c2.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_LinearGradientBrush. ! 
	Win32API_GDIplus_LinearGradientBrush metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_Pen as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' nativePenPtr')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_Pen EnclosingObjects_Win32API_GDIplus_Pen')!
	(Delta mirrorFor: #Win32API_GDIplus_Pen) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_Pen) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_Pen) comment: 'Corresponds to the Pen class of the official GDI+ API.'!
	! (Delta mirrorFor: #Win32API_GDIplus_Pen) methodsFor: 'unclassified'!
	 release 

 self  nativePenPtr ~=0 ifTrue:[ 

 (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  flatAPI GdipDeletePen value: self  nativePenPtr.

 self  nativePenPtr:0.

].

^ self.



! 
nativePenPtr ^nativePenPtr! 
 new 

 self Win32API_GDIplus_Pen_superInit_new.

 self Win32API_GDIplus_Pen_1_init.

^ self.



! 
nativePenPtr: nativePenPtr_val nativePenPtr := nativePenPtr_val! 
 Win32API_GDIplus_Pen_1_init 

 self nativePenPtr:0.

^ self.



! 
 Win32API_GDIplus_Pen_superInit_new 

super  new.

^ self.



! 
  initColor: color width: width 

|  pointerBox  widthFloat |

 pointerBox := (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  alienClass newC:4.

 widthFloat := (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  alienClass new:4.

 widthFloat  floatAt:1 put: width.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Pen at: 1)  flatAPI GdipCreatePen1  unsignedValue: color argb value: widthFloat value:0 value: pointerBox address).

 self  nativePenPtr: pointerBox asUnsignedLong.

 self lastResult =0 ifFalse:[ 

 (EnclosingObjects_Win32API_GDIplus_Pen at: 2)  reportError:('Pen creation failed with status: ' , self lastResult printString).

].

 pointerBox free.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_Pen) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Pen := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Pen := mmd !
	  color: color width: width 

^ self new  initColor: color width: width.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_Pen. ! 
	Win32API_GDIplus_Pen metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_SolidBrush as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_SolidBrush EnclosingObjects_Win32API_GDIplus_SolidBrush')!
	(Delta mirrorFor: #Win32API_GDIplus_SolidBrush) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_SolidBrush) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_SolidBrush) comment: 'Corresponds to (a subset of) the SolidBrush class of the official C++ GDI+ API.'!
	! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) methodsFor: 'unclassified'!
	 initColor: color 

|  pointerBox |

 pointerBox := (EnclosingObjects_Win32API_GDIplus_SolidBrush at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_SolidBrush at: 1)  flatAPI GdipCreateSolidFill  unsignedValue: color argb value: pointerBox address).

 self nativeBrushPtr: pointerBox asUnsignedLong.

 self lastResult =0 ifFalse:[ 

 (EnclosingObjects_Win32API_GDIplus_SolidBrush at: 2)  reportError:('Solid brush creation failed with status: ' , self lastResult printString).

].

 pointerBox free.

^ self.



! 
 Win32API_GDIplus_SolidBrush_1_init 

^ self.



! 
 Win32API_GDIplus_SolidBrush_superInit_new 

super  new.

^ self.



! 
 new 

 self Win32API_GDIplus_SolidBrush_superInit_new.

 self Win32API_GDIplus_SolidBrush_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_SolidBrush) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_SolidBrush := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_SolidBrush := mmd !
	 color: color 

^ self new initColor: color.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_SolidBrush. ! 
	Win32API_GDIplus_SolidBrush metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_Brush as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' nativeBrushPtr')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_Brush EnclosingObjects_Win32API_GDIplus_Brush')!
	(Delta mirrorFor: #Win32API_GDIplus_Brush) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_Brush) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_Brush) comment: 'Corresponds to (a subset of) the C++ class Brush of the official GDI+ API. This class is abstract.'!
	! (Delta mirrorFor: #Win32API_GDIplus_Brush) methodsFor: 'unclassified'!
	nativeBrushPtr: nativeBrushPtr_val nativeBrushPtr := nativeBrushPtr_val! 
 release 

 self  nativeBrushPtr ~=0 ifTrue:[ 

 (EnclosingObjects_Win32API_GDIplus_Brush at: 1)  flatAPI GdipDeleteBrush value: self  nativeBrushPtr.

 self  nativeBrushPtr:0.

].

^ self.



! 
nativeBrushPtr ^nativeBrushPtr! 
 Win32API_GDIplus_Brush_superInit_new 

super  new.

^ self.



! 
 Win32API_GDIplus_Brush_1_init 

 self nativeBrushPtr:0.

^ self.



! 
 new 

 self Win32API_GDIplus_Brush_superInit_new.

 self Win32API_GDIplus_Brush_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_Brush) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Brush := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Brush := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_Brush. ! 
	Win32API_GDIplus_Brush metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_Graphics as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' nativeGraphicsPtr gdiPlus_')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_Graphics EnclosingObjects_Win32API_GDIplus_Graphics')!
	(Delta mirrorFor: #Win32API_GDIplus_Graphics) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_Graphics) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_Graphics) comment: 'A minimal subset of the Graphics class from GDI+.'!
	! (Delta mirrorFor: #Win32API_GDIplus_Graphics) methodsFor: 'unclassified'!
	  drawEllipse: bounds using: pen 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawEllipseI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: bounds left value: bounds top value: bounds width value: bounds height).

^ self lastResult.



! 
 resetClip 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipResetClip unsignedValue: self  nativeGraphicsPtr).

^ self lastResult.



! 
nativeGraphicsPtr: nativeGraphicsPtr_val nativeGraphicsPtr := nativeGraphicsPtr_val! 
 setCompositingMode: mode 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipSetCompositingMode  unsignedValue: self  nativeGraphicsPtr value: mode).

^ self lastResult.



! 
  fillEllipse: bounds using: brush 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillEllipseI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: bounds left value: bounds top value: bounds width value: bounds height).

^ self lastResult.



! 
  drawImage: image at: point 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawImageI  unsignedValue: self  nativeGraphicsPtr value: image nativeImagePtr value: point x value: point y).

^ self lastResult.



! 
 releaseHDC: hdc 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipReleaseDC  unsignedValue: self  nativeGraphicsPtr value: hdc).

^ self.



! 
 flush 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFlush  unsignedValue: self  nativeGraphicsPtr value:1).

^ self.



! 
nativeGraphicsPtr ^nativeGraphicsPtr! 
 getHDCWhile: action 

|  hdc |

 hdc := self  getHDC.

^[ 

 action value: hdc.

] ensure:[ 

 self  releaseHDC: hdc.

].



! 
  withPointArrayFrom: vertices do: action 

|  buffer  offset |

 buffer := (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  Alien rawNewC:( vertices size *8).

 offset :=1.

 vertices keysAndValuesDo:[ : index : each | 

 buffer  signedLongAt: offset put: each x.

 offset := offset +4.

 buffer  signedLongAt: offset put: each y.

 offset := offset +4.

].

^[ 

 action value: buffer.

] ensure:[ 

 buffer free.

].



! 
gdiPlus_ ^gdiPlus_! 
 new 

 self Win32API_GDIplus_Graphics_superInit_new.

 self Win32API_GDIplus_Graphics_1_init.

^ self.



! 
 clear: color 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipGraphicsClear  unsignedValue: self  nativeGraphicsPtr value: color argb).

^ self lastResult.



! 
 Win32API_GDIplus_Graphics_superInit_new 

super  new.

^ self.



! 
gdiPlus_: gdiPlus__val gdiPlus_ := gdiPlus__val! 
  drawLineFrom: from to: to using: pen 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawLineI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: from x rounded value: from y rounded value: to x rounded value: to y rounded).

^ self lastResult.



! 
 setCompositingQuality: mode 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipSetCompositingQuality  unsignedValue: self  nativeGraphicsPtr value: mode).

^ self lastResult.



! 
 getHDC 

|  hdcBox  hdc |

 hdcBox := (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipGetDC  unsignedValue: self  nativeGraphicsPtr value: hdcBox address).

 self lastResult =0 ifFalse:[ 

 hdcBox free.

^ (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  reportError:('GdipGetDC() failed with status ' , self lastResult printString).

].

 hdc := hdcBox asUnsignedLong.

 hdcBox free.

^ hdc.



! 
  drawCachedBitmap: bitmap at: point 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawCachedBitmap  unsignedValue: self  nativeGraphicsPtr value: bitmap nativeCachedBitmap value: point x value: point y).

^ self lastResult.



! 
  polygon: vertices drawUsing: pen fillUsing: brush 

 self   withPointArrayFrom: vertices do:[ : pointBuffer | 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillPolygonI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: pointBuffer address value: vertices size value:0).

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawPolygonI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: pointBuffer address value: vertices size).

].

^ self lastResult.



! 
  drawRectangle: bounds using: pen 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawRectangleI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: bounds left rounded value: bounds top rounded value: bounds width rounded value: bounds height rounded).

^ self lastResult.



! 
 gdiPlus 

^ self  gdiPlus_ ifNil:[ 

 self  gdiPlus_: (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  yourself.

 self  gdiPlus_.

].



! 
 release 

 self  nativeGraphicsPtr ~=0 ifTrue:[ 

 (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDeleteGraphics value: self  nativeGraphicsPtr.

 self  nativeGraphicsPtr:0.

].

^ self.



! 
 initFromBitmap: bitmap 

|  pointerBox |

 pointerBox := (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipGetImageGraphicsContext  unsignedValue: bitmap nativeImagePtr value: pointerBox address).

 self lastResult =0 ifFalse:[ 

 pointerBox free.

^ (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  reportError:('Graphics creation failed with status: ' , self lastResult printString).

].

 self  nativeGraphicsPtr: pointerBox asUnsignedLong.

 pointerBox free.

^ self.



! 
  fillPolygon: vertices using: brush 

 self   withPointArrayFrom: vertices do:[ : pointBuffer | 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillPolygonI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: pointBuffer address value: vertices size value:0).

].

^ self lastResult.



! 
 setSmoothingMode: mode 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipSetSmoothingMode  unsignedValue: self  nativeGraphicsPtr value: mode).

^ self lastResult.



! 
  fillRectangle: rect using: brush 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipFillRectangleI  unsignedValue: self  nativeGraphicsPtr value: brush nativeBrushPtr value: rect left rounded value: rect top rounded value: rect width rounded value: rect height rounded).

^ self lastResult.



! 
 Win32API_GDIplus_Graphics_1_init 

 self nativeGraphicsPtr:0.

 self gdiPlus_:nil.

^ self.



! 
 initFromHDC: hdc 

|  pointerBox |

 pointerBox := (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipCreateFromHDC  unsignedValue: hdc value: pointerBox address).

 self lastResult =0 ifFalse:[ 

 pointerBox free.

^ (EnclosingObjects_Win32API_GDIplus_Graphics at: 2)  reportError:('Graphics creation failed with status: ' , self lastResult printString).

].

 self  nativeGraphicsPtr: pointerBox asUnsignedLong.

 pointerBox free.

^ self.



! 
  drawPolygon: vertices using: pen 

 self   withPointArrayFrom: vertices do:[ : pointBuffer | 

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_Graphics at: 1)  flatAPI GdipDrawPolygonI  unsignedValue: self  nativeGraphicsPtr value: pen nativePenPtr value: pointBuffer address value: vertices size).

].

^ self lastResult.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_Graphics) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Graphics := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Graphics := mmd !
	 fromHDC: hdc 

^ self new initFromHDC: hdc.



! 
		 forBitmap: bitmap 

^ self new initFromBitmap: bitmap.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_Graphics. ! 
	Win32API_GDIplus_Graphics metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_GDIplusObject as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' lastResult')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_GDIplusObject EnclosingObjects_Win32API_GDIplus_GDIplusObject')!
	(Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) comment: 'The common superclass of other GDI+ objects. Not much stuff here so far, but I''m sure we''ll find what to put here.'!
	! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) methodsFor: 'unclassified'!
	lastResult ^lastResult! 
lastResult: lastResult_val lastResult := lastResult_val! 
 ensureOkStatusAfter: functionName 

 self  lastResult =0 ifFalse:[ 

^ (EnclosingObjects_Win32API_GDIplus_GDIplusObject at: 2)  reportError:( functionName ,' failed with status: ' ,( (EnclosingObjects_Win32API_GDIplus_GDIplusObject at: 1)  statusStringFor: self  lastResult)).

].

^ self.



! 
 Win32API_GDIplus_GDIplusObject_1_init 

 self lastResult:0.

^ self.



! 
 Win32API_GDIplus_GDIplusObject_superInit_new 

super  new.

^ self.



! 
 new 

 self Win32API_GDIplus_GDIplusObject_superInit_new.

 self Win32API_GDIplus_GDIplusObject_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_GDIplusObject) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_GDIplusObject := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_GDIplusObject := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_GDIplusObject. ! 
	Win32API_GDIplus_GDIplusObject metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_PaintDCGraphics as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' hdc')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_PaintDCGraphics EnclosingObjects_Win32API_GDIplus_PaintDCGraphics')!
	(Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) comment: 'Describe the class in this comment.'!
	! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) methodsFor: 'unclassified'!
	 Win32API_GDIplus_PaintDCGraphics_1_init 

 self hdc:nil.

^ self.



! 
 getHDC 

^ self  hdc.



! 
 Win32API_GDIplus_PaintDCGraphics_superInit_new 

super  new.

^ self.



! 
hdc ^hdc! 
 getHDCWhile: action 

^ action value: self  hdc.



! 
 releaseHDC 

^ self.



! 
hdc: hdc_val hdc := hdc_val! 
 initFromHDC: hdc_ 

super  initFromHDC: hdc_.

 self  hdc: hdc_.

^ self.



! 
 new 

 self Win32API_GDIplus_PaintDCGraphics_superInit_new.

 self Win32API_GDIplus_PaintDCGraphics_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_PaintDCGraphics) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_PaintDCGraphics := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_PaintDCGraphics := mmd !
	 fromHDC: hdc_ 

^ self new initFromHDC: hdc_.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_PaintDCGraphics. ! 
	Win32API_GDIplus_PaintDCGraphics metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_Color as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' argb')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_Color EnclosingObjects_Win32API_GDIplus_Color')!
	(Delta mirrorFor: #Win32API_GDIplus_Color) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_Color) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_Color) comment: 'Corresponds to the GDI+ Color class encoding 32-bit ARGB color values. The maximum value of each color component is 255. The alpha value of 255 means fully opaque. In this default constructor we trust the sender to provide us with values within their acceptable ranges. All objects of this module expect this as the color values they operate with rather than the Squeak color things.'!
	! (Delta mirrorFor: #Win32API_GDIplus_Color) methodsFor: 'unclassified'!
	 Win32API_GDIplus_Color_superInit_fromArgb: argb_ 

super  new.

^ self.



! 
 red 

^ self  argb >>16 bitAnd:255.



! 
argb: argb_val argb := argb_val! 
 fromArgb: argb_ 

 self Win32API_GDIplus_Color_superInit_fromArgb: argb_.

 self Win32API_GDIplus_Color_1_init: argb_.

^ self.



! 
 Win32API_GDIplus_Color_1_init: argb_ 

 self argb: argb_.

^ self.



! 
 alpha 

^ self  argb >>24.



! 
 asColorref 

^ self  argb bitAnd:16777215.



! 
argb ^argb! 
 green 

^ self  argb >>8 bitAnd:255.



! 
 blue 

^ self  argb bitAnd:255.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_Color) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_Color := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_Color := mmd !
	  alpha: alpha red: red green: green blue: blue 

^ self   a:( alpha bitAnd:255) r:( red bitAnd:255) g:( green bitAnd:255) b:( blue bitAnd:255).



! 
		 black 

^ self   a:255 r:0 g:0 b:0.



! 
		  a: alpha r: red g: green b: blue 

^ self  fromArgb:( alpha <<24 |( red <<16) |( green <<8) | blue).



! 
		 fromSqueakColor: color 

^ self   a: color privateAlpha r:( color red *255) rounded g:( color green *255) rounded b:( color blue *255) rounded.



! 
		 transparent 

^ self   a:0 r:255 g:255 b:255.



! 
		 red 

^ self   a:255 r:255 g:0 b:0.



! 
		 fromColorref: colorref 

^ self  fromArgb:(4278190080 | colorref).



! 
		 fromArgb: argb_ 

^ self basicNew fromArgb: argb_.



! 
		 gray 

^ self   a:255 r:128 g:128 b:128.



! 
		 gray: value 

^ self   a:255 r: value g: value b: value.



! 
		 yellow 

^ self   a:255 r:255 g:255 b:0.



! 
		 orange 

^ self   a:255 r:255 g:165 b:0.



! 
		 white 

^ self   a:255 r:255 g:255 b:255.



! 
		 green 

^ self   a:255 r:0 g:255 b:0.



! 
		 blue 

^ self   a:255 r:0 g:0 b:255.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_Color. ! 
	Win32API_GDIplus_Color metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_GDIplus_CachedBitmap as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' nativeCachedBitmap')
	 classVariables: 'MixinMetadata_Win32API_GDIplus_CachedBitmap EnclosingObjects_Win32API_GDIplus_CachedBitmap')!
	(Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) comment: 'Same as the CachedBitmap class of the official GDI+ API.'!
	! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) methodsFor: 'unclassified'!
	 release 

 self  nativeCachedBitmap ~=0 ifTrue:[ 

 (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 1)  flatAPI GdipDeleteCachedBitmap value: self  nativeCachedBitmap.

 self  nativeCachedBitmap:0.

].

^ self.



! 
nativeCachedBitmap ^nativeCachedBitmap! 
 Win32API_GDIplus_CachedBitmap_1_init 

 self nativeCachedBitmap:0.

^ self.



! 
  initBitmap: bitmap graphics: graphics 

|  pointerBox |

 pointerBox := (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 1)  alienClass newC:4.

 self lastResult:( (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 1)  flatAPI GdipCreateCachedBitmap  unsignedValue: bitmap nativeImagePtr value: graphics nativeGraphicsPtr value: pointerBox address).

 self  nativeCachedBitmap: pointerBox asUnsignedLong.

 self lastResult =0 ifFalse:[ 

 (EnclosingObjects_Win32API_GDIplus_CachedBitmap at: 2)  reportError:('CachedBitmap creation failed with status: ' , self lastResult printString).

].

 pointerBox free.

^ self.



! 
 Win32API_GDIplus_CachedBitmap_superInit_new 

super  new.

^ self.



! 
nativeCachedBitmap: nativeCachedBitmap_val nativeCachedBitmap := nativeCachedBitmap_val! 
 new 

 self Win32API_GDIplus_CachedBitmap_superInit_new.

 self Win32API_GDIplus_CachedBitmap_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplus_CachedBitmap) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplus_CachedBitmap := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplus_CachedBitmap := mmd !
	  bitmap: bitmap graphics: graphics 

^ self new  initBitmap: bitmap graphics: graphics.



! 
		 new 

^ self basicNew new.



! 
		 !
	Win32API_GDIplus metadata addNestedClass: Win32API_GDIplus_CachedBitmap. ! 
	Win32API_GDIplus_CachedBitmap metadata enclosingMixin: Win32API_GDIplus !
	Delta define: #Win32API_Pipe as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' otherEnd myEnd')
	 classVariables: 'MixinMetadata_Win32API_Pipe EnclosingObjects_Win32API_Pipe')!
	(Delta mirrorFor: #Win32API_Pipe) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_Pipe) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_Pipe) comment: #''!
	! (Delta mirrorFor: #Win32API_Pipe) methodsFor: 'unclassified'!
	 closeBothEnds 

 self  closeMyEnd.

 self  closeOtherEnd.

^ self.



! 
otherEnd ^otherEnd! 
 closeOtherEnd 

 (EnclosingObjects_Win32API_Pipe at: 1)  closeHandle: self  otherEnd.

^ self.



! 
otherEnd: otherEnd_val otherEnd := otherEnd_val! 
myEnd: myEnd_val myEnd := myEnd_val! 
 Win32API_Pipe_1_init 

 self myEnd:nil.

 self otherEnd:nil.

^ self.



! 
 Win32API_Pipe_superInit_new 

super  new.

^ self.



! 
 closeMyEnd 

 (EnclosingObjects_Win32API_Pipe at: 1)  closeHandle: self  myEnd.

^ self.



! 
myEnd ^myEnd! 
 new 

 self Win32API_Pipe_superInit_new.

 self Win32API_Pipe_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_Pipe) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_Pipe := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_Pipe := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_Pipe. ! 
	Win32API_Pipe metadata enclosingMixin: Win32API !
	Delta define: #Win32API_WinLibrary as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_WinLibrary EnclosingObjects_Win32API_WinLibrary')!
	(Delta mirrorFor: #Win32API_WinLibrary) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_WinLibrary) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_WinLibrary) comment: 'A Windows DLL. Mostly the same as CLibrary but uses different function instances.'!
	! (Delta mirrorFor: #Win32API_WinLibrary) methodsFor: 'unclassified'!
	 Win32API_WinLibrary_superInit_name: theName 

super  name: theName.

^ self.



! 
 functionClass 

^ (EnclosingObjects_Win32API_WinLibrary at: 1)  Win32Function.



! 
 Win32API_WinLibrary_1_init: theName 

^ self.



! 
 name: theName 

 self Win32API_WinLibrary_superInit_name: theName.

 self Win32API_WinLibrary_1_init: theName.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_WinLibrary) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_WinLibrary := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_WinLibrary := mmd !
	 name: theName 

^ self basicNew name: theName.



! 
		 !
	Win32API metadata addNestedClass: Win32API_WinLibrary. ! 
	Win32API_WinLibrary metadata enclosingMixin: Win32API !
	Delta define: #Win32API_File as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:' handle name')
	 classVariables: 'MixinMetadata_Win32API_File EnclosingObjects_Win32API_File')!
	(Delta mirrorFor: #Win32API_File) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_File) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_File) comment: #''!
	! (Delta mirrorFor: #Win32API_File) methodsFor: 'unclassified'!
	handle: handle_val handle := handle_val! 
name: name_val name := name_val! 
handle ^handle! 
 Win32API_File_1_init 

 self name:nil.

 self handle:nil.

^ self.



! 
 Win32API_File_superInit_new 

super  new.

^ self.



! 
 new 

 self Win32API_File_superInit_new.

 self Win32API_File_1_init.

^ self.



! 
 do: action 

^ (EnclosingObjects_Win32API_File at: 1)  CrLfFileStream  readOnlyFileNamed: self  name do: action.



! 
 close 

 (EnclosingObjects_Win32API_File at: 1)  closeHandle: self  handle.

^ self.



! 
 deleteAfter: action 

|  result |

[ 

 result := self  do: action.

] ensure:[ 

 (EnclosingObjects_Win32API_File at: 1)  FileDirectory deleteFilePath: self  name.

].

^ result.



! 
name ^name! 
 openReadOnly 

^ (EnclosingObjects_Win32API_File at: 1)  CrLfFileStream readOnlyFileNamed: self  name.



! 
 !
	! (Delta mirrorFor: #Win32API_File) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_File := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_File := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_File. ! 
	Win32API_File metadata enclosingMixin: Win32API !
	Delta define: #Win32API_GDILibrary as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_GDILibrary EnclosingObjects_Win32API_GDILibrary')!
	(Delta mirrorFor: #Win32API_GDILibrary) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDILibrary) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDILibrary) comment: 'Defines the functions of the GDI (the classic one, not GDI+) dll we are using.'!
	! (Delta mirrorFor: #Win32API_GDILibrary) methodsFor: 'unclassified'!
	 Win32API_GDILibrary_1_init 

^ self.



! 
 MoveToEx 

^ self  functionNamed:#'MoveToEx' argc:4.



! 
 LineTo 

^ self  functionNamed:#'LineTo' argc:3.



! 
 CreatePen 

^ self  functionNamed:#'CreatePen' argc:3.



! 
 GetStockObject 

^ self  functionNamed:#'GetStockObject' argc:1.



! 
 CreateFontA 

^ self  functionNamed:#'CreateFontA' argc:14.



! 
 TextOutA 

^ self  functionNamed:#'TextOutA' argc:5.



! 
 Ellipse 

^ self  functionNamed:#'Ellipse' argc:5.



! 
 ExtTextOutA 

^ self  functionNamed:#'ExtTextOutA' argc:8.



! 
 new 

 self Win32API_GDILibrary_superInit_new.

 self Win32API_GDILibrary_1_init.

^ self.



! 
 SelectObject 

^ self  functionNamed:#'SelectObject' argc:2.



! 
 SetDCPenColor 

^ self  functionNamed:#'SetDCPenColor' argc:2.



! 
 Win32API_GDILibrary_superInit_new 

super  name:'GDI'.

^ self.



! 
 Rectangle 

^ self  functionNamed:#'Rectangle' argc:5.



! 
 SetTextColor 

^ self  functionNamed:#'SetTextColor' argc:2.



! 
 CreateSolidBrush 

^ self  functionNamed:#'CreateSolidBrush' argc:1.



! 
 exportFunctionsTo: capi 

 capi  exportFunction: self  CreateFontA as:#'CreateFont'; 

 exportFunction: self  CreatePen; 

 exportFunction: self  CreateSolidBrush; 

 exportFunction: self  DeleteObject; 

 exportFunction: self  Ellipse; 

  exportFunction: self  ExtTextOutA as:#'ExtTextOut'; 

 exportFunction: self  GetStockObject; 

  exportFunction: self  GetTextExtentPoint32A as:#'GetTextExtentPoint32'; 

 exportFunction: self  LineTo; 

 exportFunction: self  MoveToEx; 

 exportFunction: self  Polygon; 

 exportFunction: self  Rectangle; 

 exportFunction: self  SelectObject; 

 exportFunction: self  SetBkMode; 

 exportFunction: self  SetDCBrushColor; 

 exportFunction: self  SetDCPenColor; 

 exportFunction: self  SetTextColor; 

  exportFunction: self  TextOutA as:#'TextOut'.

^ self.



! 
 SetDCBrushColor 

^ self  functionNamed:#'SetDCBrushColor' argc:2.



! 
 Polygon 

^ self  functionNamed:#'Polygon' argc:3.



! 
 GetTextExtentPoint32A 

^ self  functionNamed:#'GetTextExtentPoint32A' argc:4.



! 
 DeleteObject 

^ self  functionNamed:#'DeleteObject' argc:1.



! 
 SetBkMode 

^ self  functionNamed:#'SetBkMode' argc:2.



! 
 !
	! (Delta mirrorFor: #Win32API_GDILibrary) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDILibrary := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDILibrary := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_GDILibrary. ! 
	Win32API_GDILibrary metadata enclosingMixin: Win32API !
	Delta define: #Win32API_Win32Function as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_Win32Function EnclosingObjects_Win32API_Win32Function')!
	(Delta mirrorFor: #Win32API_Win32Function) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_Win32Function) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_Win32Function) comment: 'A Windows function: same as CFunction but with some extra handy utilities.'!
	! (Delta mirrorFor: #Win32API_Win32Function) methodsFor: 'unclassified'!
	  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9) ~=0.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4) ~=0.



! 
 boolValue 

^ self unsignedValue ~=0.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8) ~=0.



! 
  Win32API_Win32Function_superInit_library: theLibrary name: theName argc: numArgs 

super   library: theLibrary name: theName argc: numArgs.

^ self.



! 
  boolValue: arg1 value: arg2 value: arg3 

^( self  unsignedValue: arg1 value: arg2 value: arg3) ~=0.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6) ~=0.



! 
  boolValue: arg1 value: arg2 

^( self  unsignedValue: arg1 value: arg2) ~=0.



! 
 boolValue: arg 

^( self unsignedValue: arg) ~=0.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 value: arg12) ~=0.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7) ~=0.



! 
  library: theLibrary name: theName argc: numArgs 

 self  Win32API_Win32Function_superInit_library: theLibrary name: theName argc: numArgs.

 self  Win32API_Win32Function_1_init_library: theLibrary name: theName argc: numArgs.

^ self.



! 
  Win32API_Win32Function_1_init_library: theLibrary name: theName argc: numArgs 

^ self.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5) ~=0.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 value: arg11) ~=0.



! 
  boolValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10 

^( self  unsignedValue: arg1 value: arg2 value: arg3 value: arg4 value: arg5 value: arg6 value: arg7 value: arg8 value: arg9 value: arg10) ~=0.



! 
 !
	! (Delta mirrorFor: #Win32API_Win32Function) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_Win32Function := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_Win32Function := mmd !
	  library: theLibrary name: theName argc: numArgs 

^ self basicNew  library: theLibrary name: theName argc: numArgs.



! 
		 !
	Win32API metadata addNestedClass: Win32API_Win32Function. ! 
	Win32API_Win32Function metadata enclosingMixin: Win32API !
	Delta define: #Win32API_Comdlg32Library as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_Comdlg32Library EnclosingObjects_Win32API_Comdlg32Library')!
	(Delta mirrorFor: #Win32API_Comdlg32Library) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_Comdlg32Library) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_Comdlg32Library) comment: 'Common Dialog Boxes aka. comdlg32.dll.
http://msdn.microsoft.com/en-us/library/ms645524(VS.85).aspx'!
	! (Delta mirrorFor: #Win32API_Comdlg32Library) methodsFor: 'unclassified'!
	 Win32API_Comdlg32Library_1_init 

^ self.



! 
 GetSaveFileNameA 

^ self  functionNamed:#'GetSaveFileNameA' argc:1.



! 
 Win32API_Comdlg32Library_superInit_new 

super  name:'comdlg32'.

^ self.



! 
 exportFunctionsTo: capi 

 capi  exportFunction: self  GetOpenFileNameA as:#'GetOpenFileName'; 

  exportFunction: self  GetSaveFileNameA as:#'GetSaveFileName'.

^ self.



! 
 GetOpenFileNameA 

^ self  functionNamed:#'GetOpenFileNameA' argc:1.



! 
 new 

 self Win32API_Comdlg32Library_superInit_new.

 self Win32API_Comdlg32Library_1_init.

^ self.



! 
 !
	! (Delta mirrorFor: #Win32API_Comdlg32Library) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_Comdlg32Library := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_Comdlg32Library := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_Comdlg32Library. ! 
	Win32API_Comdlg32Library metadata enclosingMixin: Win32API !
	Delta define: #Win32API_UserLibrary as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_UserLibrary EnclosingObjects_Win32API_UserLibrary')!
	(Delta mirrorFor: #Win32API_UserLibrary) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_UserLibrary) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_UserLibrary) comment: 'Describe the class in this comment.'!
	! (Delta mirrorFor: #Win32API_UserLibrary) methodsFor: 'unclassified'!
	 SystemParametersInfoA 

^ self  functionNamed:#'SystemParametersInfoA' argc:4.



! 
 LoadCursorA 

^ self  functionNamed:#'LoadCursorA' argc:2.



! 
 CreatePopupMenu 

^ self  functionNamed:#'CreatePopupMenu' argc:0.



! 
 SetForegroundWindow 

^ self  functionNamed:#'SetForegroundWindow' argc:1.



! 
 TrackPopupMenu 

^ self  functionNamed:#'TrackPopupMenu' argc:7.



! 
 ReleaseCapture 

^ self  functionNamed:#'ReleaseCapture' argc:0.



! 
 GetCursorPos 

^ self  functionNamed:#'GetCursorPos' argc:1.



! 
 DrawMenuBar 

^ self  functionNamed:#'DrawMenuBar' argc:1.



! 
 DispatchMessageA 

^ self  functionNamed:#'DispatchMessageA' argc:1.



! 
 EnumThreadWindows 

^ self  functionNamed:#'EnumThreadWindows' argc:3.



! 
 ReleaseDC 

^ self  functionNamed:#'ReleaseDC' argc:2.



! 
 SetWindowLongA 

^ self  functionNamed:#'SetWindowLongA' argc:3.



! 
 DestroyWindow 

^ self  functionNamed:#'DestroyWindow' argc:1.



! 
 new 

 self Win32API_UserLibrary_superInit_new.

 self Win32API_UserLibrary_1_init.

^ self.



! 
 FlashWindowEx 

^ self  functionNamed:#'FlashWindowEx' argc:1.



! 
 ShowWindow 

^ self  functionNamed:#'ShowWindow' argc:2.



! 
 GetClientRect 

^ self  functionNamed:#'GetClientRect' argc:2.



! 
 GetScrollInfo 

^ self  functionNamed:#'GetScrollInfo' argc:3.



! 
 EnableWindow 

^ self  functionNamed:#'EnableWindow' argc:2.



! 
 GetDC 

^ self  functionNamed:#'GetDC' argc:1.



! 
 AppendMenuA 

^ self  functionNamed:#'AppendMenuA' argc:4.



! 
 Win32API_UserLibrary_1_init 

^ self.



! 
 WindowFromPoint 

^ self  functionNamed:#'WindowFromPoint' argc:1.



! 
 AdjustWindowRect 

^ self  functionNamed:#'AdjustWindowRect' argc:3.



! 
 EndPaint 

^ self  functionNamed:#'EndPaint' argc:2.



! 
 FlashWindow 

^ self  functionNamed:#'FlashWindow' argc:2.



! 
 SendMessageA 

^ self  functionNamed:#'SendMessageA' argc:4.



! 
 TrackMouseEvent 

^ self  functionNamed:#'TrackMouseEvent' argc:1.



! 
 BeginDeferWindowPos 

^ self  functionNamed:#'BeginDeferWindowPos' argc:1.



! 
 TranslateMessage 

^ self  functionNamed:#'TranslateMessage' argc:1.



! 
 UpdateLayeredWindow 

^ self  functionNamed:#'UpdateLayeredWindow' argc:9.



! 
 UnregisterClassA 

^ self  functionNamed:#'UnregisterClassA' argc:2.



! 
 CreateWindowExA 

^ self  functionNamed:#'CreateWindowExA' argc:12.



! 
 EndDeferWindowPos 

^ self  functionNamed:#'EndDeferWindowPos' argc:1.



! 
 PeekMessageA 

^ self  functionNamed:#'PeekMessageA' argc:5.



! 
 InvalidateRect 

^ self  functionNamed:#'InvalidateRect' argc:3.



! 
 SetScrollInfo 

^ self  functionNamed:#'SetScrollInfo' argc:4.



! 
 GetSystemMetrics 

^ self  functionNamed:#'GetSystemMetrics' argc:1.



! 
 FindWindowA 

^ self  functionNamed:#'FindWindowA' argc:2.



! 
 DeferWindowPos 

^ self  functionNamed:#'DeferWindowPos' argc:8.



! 
 DrawTextA 

^ self  functionNamed:#'DrawTextA' argc:5.



! 
 exportFunctionsTo: capi 

 capi exportFunction: self  AdjustWindowRect; 

 exportFunction: self  AnimateWindow; 

  exportFunction: self  AppendMenuA as:#'AppendMenu'; 

 exportFunction: self  BeginDeferWindowPos; 

 exportFunction: self  BeginPaint; 

 exportFunction: self  CreateMenu; 

 exportFunction: self  CreatePopupMenu; 

  exportFunction: self  CreateWindowExA as:#'CreateWindowEx'; 

  exportFunction: self  DefWindowProcA as:#'DefWindowProc'; 

 exportFunction: self  DeferWindowPos; 

 exportFunction: self  DestroyWindow; 

  exportFunction: self  DispatchMessageA as:#'DispatchMessage'; 

 exportFunction: self  DrawMenuBar; 

  exportFunction: self  DrawTextA as:#'DrawText'; 

 exportFunction: self  EnableWindow; 

 exportFunction: self  EndDeferWindowPos; 

 exportFunction: self  EndPaint; 

 exportFunction: self  EnumThreadWindows; 

 exportFunction: self  FillRect; 

  exportFunction: self  FindWindowA as:#'FindWindow'; 

 exportFunction: self  FlashWindow; 

 exportFunction: self  FlashWindowEx; 

 exportFunction: self  GetAncestor; 

 exportFunction: self  GetClientRect; 

 exportFunction: self  GetCursorPos; 

 exportFunction: self  GetDC; 

 exportFunction: self  GetForegroundWindow; 

 exportFunction: self  GetKeyState; 

  exportFunction: self  GetMessageA as:#'GetMessage'; 

 exportFunction: self  GetScrollInfo; 

 exportFunction: self  GetSystemMetrics; 

  exportFunction: self  GetWindowLongA as:#'GetWindowLong'; 

 exportFunction: self  InvalidateRect; 

 exportFunction: self  IsWindow; 

 exportFunction: self  IsWindowVisible; 

  exportFunction: self  LoadCursorA as:#'LoadCursor'; 

  exportFunction: self  LoadIconA as:#'LoadIcon'; 

 exportFunction: self  MessageBeep; 

 exportFunction: self  MoveWindow; 

  exportFunction: self  PeekMessageA as:#'PeekMessage'; 

 exportFunction: self  PostQuitMessage; 

  exportFunction: self  RegisterClassA as:#'RegisterClass'; 

 exportFunction: self  ReleaseCapture; 

 exportFunction: self  ReleaseDC; 

  exportFunction: self  SendMessageA as:#'SendMessage'; 

 exportFunction: self  SetActiveWindow; 

 exportFunction: self  SetCapture; 

 exportFunction: self  SetCursorPos; 

 exportFunction: self  SetForegroundWindow; 

 exportFunction: self  SetLayeredWindowAttributes; 

 exportFunction: self  SetMenu; 

 exportFunction: self  SetScrollInfo; 

  exportFunction: self  SetWindowLongA as:#'SetWindowLong'; 

  exportFunction: self  SetWindowTextA as:#'SetWindowText'; 

 exportFunction: self  ShowWindow; 

  exportFunction: self  SystemParametersInfoA as:#'SystemParametersInfo'; 

  exportFunction: self  TabbedTextOutA as:#'TabbedTextOut'; 

 exportFunction: self  TrackMouseEvent; 

 exportFunction: self  TrackPopupMenu; 

 exportFunction: self  TranslateMessage; 

 exportFunction: self  UpdateWindow; 

 exportFunction: self  UpdateLayeredWindow; 

  exportFunction: self  UnregisterClassA as:#'UnregisterClass'; 

 exportFunction: self  WindowFromPoint.

^ self.



! 
 GetKeyState 

^ self  functionNamed:#'GetKeyState' argc:1.



! 
 FillRect 

^ self  functionNamed:#'FillRect' argc:3.



! 
 GetAncestor 

^ self  functionNamed:#'GetAncestor' argc:2.



! 
 SetCapture 

^ self  functionNamed:#'SetCapture' argc:1.



! 
 LoadIconA 

^ self  functionNamed:#'LoadIconA' argc:2.



! 
 GetWindowLongA 

^ self  functionNamed:#'GetWindowLongA' argc:2.



! 
 DefWindowProcA 

^ self  functionNamed:#'DefWindowProcA' argc:4.



! 
 CreateMenu 

^ self  functionNamed:#'CreateMenu' argc:0.



! 
 GetForegroundWindow 

^ self  functionNamed:#'GetForegroundWindow' argc:0.



! 
 MessageBeep 

^ self  functionNamed:#'MessageBeep' argc:1.



! 
 IsWindow 

^ self  functionNamed:#'IsWindow' argc:1.



! 
 AnimateWindow 

^ self  functionNamed:#'AnimateWindow' argc:3.



! 
 SetWindowTextA 

^ self  functionNamed:#'SetWindowTextA' argc:2.



! 
 SetCursorPos 

^ self  functionNamed:#'SetCursorPos' argc:2.



! 
 PostQuitMessage 

^ self  functionNamed:#'PostQuitMessage' argc:1.



! 
 IsWindowVisible 

^ self  functionNamed:#'IsWindowVisible' argc:1.



! 
 GetMessageA 

^ self  functionNamed:#'GetMessageA' argc:4.



! 
 BeginPaint 

^ self  functionNamed:#'BeginPaint' argc:2.



! 
 TabbedTextOutA 

^ self  functionNamed:#'TabbedTextOutA' argc:8.



! 
 Win32API_UserLibrary_superInit_new 

super  name:'User'.

^ self.



! 
 MoveWindow 

^ self  functionNamed:#'MoveWindow' argc:6.



! 
 RegisterClassA 

^ self  functionNamed:#'RegisterClassA' argc:1.



! 
 SetActiveWindow 

^ self  functionNamed:#'SetActiveWindow' argc:1.



! 
 UpdateWindow 

^ self  functionNamed:#'UpdateWindow' argc:1.



! 
 SetLayeredWindowAttributes 

^ self  functionNamed:#'SetLayeredWindowAttributes' argc:4.



! 
 SetMenu 

^ self  functionNamed:#'SetMenu' argc:2.



! 
 !
	! (Delta mirrorFor: #Win32API_UserLibrary) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_UserLibrary := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_UserLibrary := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_UserLibrary. ! 
	Win32API_UserLibrary metadata enclosingMixin: Win32API !
	Delta define: #Win32API_GDIplusLibrary as: (
	(Class subclassOf: 'NewspeakObject' instanceVariables:'')
	 classVariables: 'MixinMetadata_Win32API_GDIplusLibrary EnclosingObjects_Win32API_GDIplusLibrary')!
	(Delta mirrorFor: #Win32API_GDIplusLibrary) revision: '$Revision: 0.0 $'!
	(Delta mirrorFor: #Win32API_GDIplusLibrary) group: 'newspeak'!
	(Delta mirrorFor: #Win32API_GDIplusLibrary) comment: 'Provides access to functions of GDI+ flat API. See GDIplus class for a higher-level wrapper similar to Microsoft''s C++ API. Note that the functions of this library are NOT imported into the containing Win32API instance.'!
	! (Delta mirrorFor: #Win32API_GDIplusLibrary) methodsFor: 'unclassified'!
	 GdipCreateFromHDC 

^ self  functionNamed:#'GdipCreateFromHDC' argc:2.



! 
 GdipFillEllipseI 

^ self  functionNamed:#'GdipFillEllipseI' argc:6.



! 
 GdipCreateBitmapFromScan0 

^ self  functionNamed:#'GdipCreateBitmapFromScan0' argc:6.



! 
 GdipCreateLineBrushI 

^ self  functionNamed:#'GdipCreateLineBrushI' argc:6.



! 
 GdipDrawPolygonI 

^ self  functionNamed:#'GdipDrawPolygonI' argc:4.



! 
 Win32API_GDIplusLibrary_1_init 

^ self.



! 
 GdipDrawEllipseI 

^ self  functionNamed:#'GdipDrawEllipseI' argc:6.



! 
 GdipDrawLineI 

^ self  functionNamed:#'GdipDrawLineI' argc:6.



! 
 new 

 self Win32API_GDIplusLibrary_superInit_new.

 self Win32API_GDIplusLibrary_1_init.

^ self.



! 
 GdipDrawRectangleI 

^ self  functionNamed:#'GdipDrawRectangleI' argc:6.



! 
 GdipDeletePen 

^ self  functionNamed:#'GdipDeletePen' argc:1.



! 
 GdipResetClip 

^ self  functionNamed:#'GdipResetClip' argc:1.



! 
 GdipCreateSolidFill 

^ self  functionNamed:#'GdipCreateSolidFill' argc:2.



! 
 GdipCreatePen2 

^ self  functionNamed:#'GdipCreatePen2' argc:4.



! 
 GdipGetDC 

^ self  functionNamed:#'GdipGetDC' argc:2.



! 
 GdipCreateCachedBitmap 

^ self  functionNamed:#'GdipCreateCachedBitmap' argc:3.



! 
 GdipDisposeImage 

^ self  functionNamed:#'GdipDisposeImage' argc:1.



! 
 GdipFillRectangleI 

^ self  functionNamed:#'GdipFillRectangleI' argc:6.



! 
 GdipDrawCachedBitmap 

^ self  functionNamed:#'GdipDrawCachedBitmap' argc:4.



! 
 GdipDrawImageI 

^ self  functionNamed:#'GdipDrawImageI' argc:4.



! 
 GdipDeleteBrush 

^ self  functionNamed:#'GdipDeleteBrush' argc:1.



! 
 GdipReleaseDC 

^ self  functionNamed:#'GdipReleaseDC' argc:2.



! 
 exportFunctionsTo: capi 

 capi exportFunction: self  GdipCreateBitmapFromGraphics; 

 exportFunction: self  GdipCreateBitmapFromScan0; 

 exportFunction: self  GdipCreateCachedBitmap; 

 exportFunction: self  GdipCreateFromHDC; 

 exportFunction: self  GdipCreateFromHWND; 

 exportFunction: self  GdipCreateLineBrushI; 

 exportFunction: self  GdipCreatePen1; 

 exportFunction: self  GdipCreatePen2; 

 exportFunction: self  GdipCreateSolidFill; 

 exportFunction: self  GdipDeleteBrush; 

 exportFunction: self  GdipDeleteCachedBitmap; 

 exportFunction: self  GdipDeleteGraphics; 

 exportFunction: self  GdipDeletePen; 

 exportFunction: self  GdipDisposeImage; 

 exportFunction: self  GdipDrawCachedBitmap; 

 exportFunction: self  GdipDrawEllipseI; 

 exportFunction: self  GdipDrawImageI; 

 exportFunction: self  GdipDrawLineI; 

 exportFunction: self  GdipDrawRectangleI; 

 exportFunction: self  GdipFillEllipseI; 

 exportFunction: self  GdipFillRectangleI; 

 exportFunction: self  GdipFlush; 

 exportFunction: self  GdipGetDC; 

 exportFunction: self  GdipGetImageGraphicsContext; 

 exportFunction: self  GdipReleaseDC; 

 exportFunction: self  GdipSetCompositingMode; 

 exportFunction: self  GdipSetCompositingQuality; 

 exportFunction: self  GdipSetSmoothingMode; 

 exportFunction: self  GdiplusShutdown; 

 exportFunction: self  GdiplusStartup.

^ self.



! 
 GdiplusStartup 

^ self  functionNamed:#'GdiplusStartup' argc:3.



! 
 GdipDeleteGraphics 

^ self  functionNamed:#'GdipDeleteGraphics' argc:1.



! 
 GdipGetImageGraphicsContext 

^ self  functionNamed:#'GdipGetImageGraphicsContext' argc:2.



! 
 GdipGraphicsClear 

^ self  functionNamed:#'GdipGraphicsClear' argc:2.



! 
 GdipDeleteCachedBitmap 

^ self  functionNamed:#'GdipDeleteCachedBitmap' argc:1.



! 
 GdipCreateBitmapFromGraphics 

^ self  functionNamed:#'GdipCreateBitmapFromGraphics' argc:4.



! 
 GdipCreatePen1 

^ self  functionNamed:#'GdipCreatePen1' argc:4.



! 
 GdipSetCompositingQuality 

^ self  functionNamed:#'GdipSetCompositingQuality' argc:2.



! 
 GdipCreateFromHWND 

^ self  functionNamed:#'GdipCreateFromHWND' argc:2.



! 
 GdipSetSmoothingMode 

^ self  functionNamed:#'GdipSetSmoothingMode' argc:2.



! 
 GdipSetCompositingMode 

^ self  functionNamed:#'GdipSetCompositingMode' argc:2.



! 
 GdipFillPolygonI 

^ self  functionNamed:#'GdipFillPolygonI' argc:5.



! 
 GdiplusShutdown 

^ self  functionNamed:#'GdiplusShutdown' argc:1.



! 
 Win32API_GDIplusLibrary_superInit_new 

super  name:'gdiplus'.

^ self.



! 
 GdipFlush 

^ self  functionNamed:#'GdipFlush' argc:2.



! 
 !
	! (Delta mirrorFor: #Win32API_GDIplusLibrary) classSide methodsFor: 'unclassified'!
	enclosingObjects: eos EnclosingObjects_Win32API_GDIplusLibrary := eos !
	mixinMetadata: mmd MixinMetadata_Win32API_GDIplusLibrary := mmd !
	 new 

^ self basicNew new.



! 
		 !
	Win32API metadata addNestedClass: Win32API_GDIplusLibrary. ! 
	Win32API_GDIplusLibrary metadata enclosingMixin: Win32API !
	